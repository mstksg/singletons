-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for generating singleton types
--   
--   This library generates singleton types, promoted functions, and
--   singleton functions using Template Haskell. It is useful for
--   programmers who wish to use dependently typed programming techniques.
--   The library was originally presented in <i>Dependently Typed
--   Programming with Singletons</i>, published at the Haskell Symposium,
--   2012.
--   (<a>http://www.cis.upenn.edu/~eir/papers/2012/singletons/paper.pdf</a>)
--   Version 1.0 and onwards works a lot harder to promote functions. See
--   the paper published at Haskell Symposium, 2014:
--   <a>http://www.cis.upenn.edu/~eir/papers/2014/promotion/promotion.pdf</a>.
@package singletons
@version 2.0.1

module Data.Singletons.SuppressUnusedWarnings

-- | This class (which users should never see) is to be instantiated in
--   order to use an otherwise-unused data constructor, such as the
--   "kind-inference" data constructor for defunctionalization symbols.
class SuppressUnusedWarnings (t :: k)
suppressUnusedWarnings :: SuppressUnusedWarnings t => Proxy t -> ()


-- | This module exports the basic definitions to use singletons. For
--   routine use, consider importing <a>Prelude</a>, which exports
--   constructors for singletons based on types in the <tt>Prelude</tt>.
--   
--   You may also want to read
--   <a>http://www.cis.upenn.edu/~eir/packages/singletons/README.html</a>
--   and the original paper presenting this library, available at
--   <a>http://www.cis.upenn.edu/~eir/papers/2012/singletons/paper.pdf</a>.
module Data.Singletons

-- | The singleton kind-indexed data family.

-- | A <a>SingI</a> constraint is essentially an implicitly-passed
--   singleton. If you need to satisfy this constraint with an explicit
--   singleton, please see <a>withSingI</a>.
class SingI (a :: k)

-- | Produce the singleton explicitly. You will likely need the
--   <tt>ScopedTypeVariables</tt> extension to use this method the way you
--   want.
sing :: SingI a => Sing a

-- | The <a>SingKind</a> class is essentially a <i>kind</i> class. It
--   classifies all kinds for which singletons are defined. The class
--   supports converting between a singleton type and the base (unrefined)
--   type which it is built from.
class (kparam ~ KProxy) => SingKind (kparam :: KProxy k) where type family DemoteRep kparam :: *

-- | Convert a singleton to its unrefined version.
fromSing :: SingKind kparam => Sing (a :: k) -> DemoteRep kparam

-- | Convert an unrefined type to an existentially-quantified singleton
--   type.
toSing :: SingKind kparam => DemoteRep kparam -> SomeSing kparam

-- | Convenient synonym to refer to the kind of a type variable: <tt>type
--   KindOf (a :: k) = ('KProxy :: KProxy k)</tt>
type KindOf (a :: k) = (KProxy :: KProxy k)

-- | Convenient abbreviation for <a>DemoteRep</a>: <tt>type Demote (a :: k)
--   = DemoteRep ('KProxy :: KProxy k)</tt>
type Demote (a :: k) = DemoteRep (KProxy :: KProxy k)

-- | A <a>SingInstance</a> wraps up a <a>SingI</a> instance for explicit
--   handling.
data SingInstance (a :: k)
SingInstance :: SingInstance a

-- | An <i>existentially-quantified</i> singleton. This type is useful when
--   you want a singleton type, but there is no way of knowing, at
--   compile-time, what the type index will be. To make use of this type,
--   you will generally have to use a pattern-match:
--   
--   <pre>
--   foo :: Bool -&gt; ...
--   foo b = case toSing b of
--             SomeSing sb -&gt; {- fancy dependently-typed code with sb -}
--   </pre>
--   
--   An example like the one above may be easier to write using
--   <a>withSomeSing</a>.
data SomeSing (kproxy :: KProxy k)
SomeSing :: Sing (a :: k) -> SomeSing (KProxy :: KProxy k)

-- | Get an implicit singleton (a <a>SingI</a> instance) from an explicit
--   one.
singInstance :: Sing a -> SingInstance a

-- | Convenience function for creating a context with an implicit singleton
--   available.
withSingI :: Sing n -> (SingI n => r) -> r

-- | Convert a normal datatype (like <a>Bool</a>) to a singleton for that
--   datatype, passing it into a continuation.
withSomeSing :: SingKind (KProxy :: KProxy k) => DemoteRep (KProxy :: KProxy k) -> (forall (a :: k). Sing a -> r) -> r

-- | Allows creation of a singleton when a proxy is at hand.
singByProxy :: SingI a => proxy a -> Sing a

-- | Allows creation of a singleton when a <tt>proxy#</tt> is at hand.
singByProxy# :: SingI a => Proxy# a -> Sing a

-- | A convenience function useful when we need to name a singleton value
--   multiple times. Without this function, each use of <a>sing</a> could
--   potentially refer to a different singleton, and one has to use type
--   signatures (often with <tt>ScopedTypeVariables</tt>) to ensure that
--   they are the same.
withSing :: SingI a => (Sing a -> b) -> b

-- | A convenience function that names a singleton satisfying a certain
--   property. If the singleton does not satisfy the property, then the
--   function returns <a>Nothing</a>. The property is expressed in terms of
--   the underlying representation of the singleton.
singThat :: (SingKind (KProxy :: KProxy k), SingI a) => (Demote a -> Bool) -> Maybe (Sing a)

-- | Representation of the kind of a type-level function. The difference
--   between term-level arrows and this type-level arrow is that at the
--   term level applications can be unsaturated, whereas at the type level
--   all applications have to be fully saturated.
data TyFun :: * -> * -> *

-- | Wrapper for converting the normal type-level arrow into a
--   <a>TyFun</a>. For example, given:
--   
--   <pre>
--   data Nat = Zero | Succ Nat
--   type family Map (a :: TyFun a b -&gt; *) (a :: [a]) :: [b]
--     Map f '[] = '[]
--     Map f (x ': xs) = Apply f x ': Map f xs
--   </pre>
--   
--   We can write:
--   
--   <pre>
--   Map (TyCon1 Succ) [Zero, Succ Zero]
--   </pre>
data TyCon1 :: (k1 -> k2) -> (TyFun k1 k2) -> *

-- | Similar to <a>TyCon1</a>, but for two-parameter type constructors.
data TyCon2 :: (k1 -> k2 -> k3) -> TyFun k1 (TyFun k2 k3 -> *) -> *
data TyCon3 :: (k1 -> k2 -> k3 -> k4) -> TyFun k1 (TyFun k2 (TyFun k3 k4 -> *) -> *) -> *
data TyCon4 :: (k1 -> k2 -> k3 -> k4 -> k5) -> TyFun k1 (TyFun k2 (TyFun k3 (TyFun k4 k5 -> *) -> *) -> *) -> *
data TyCon5 :: (k1 -> k2 -> k3 -> k4 -> k5 -> k6) -> TyFun k1 (TyFun k2 (TyFun k3 (TyFun k4 (TyFun k5 k6 -> *) -> *) -> *) -> *) -> *
data TyCon6 :: (k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7) -> TyFun k1 (TyFun k2 (TyFun k3 (TyFun k4 (TyFun k5 (TyFun k6 k7 -> *) -> *) -> *) -> *) -> *) -> *
data TyCon7 :: (k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8) -> TyFun k1 (TyFun k2 (TyFun k3 (TyFun k4 (TyFun k5 (TyFun k6 (TyFun k7 k8 -> *) -> *) -> *) -> *) -> *) -> *) -> *
data TyCon8 :: (k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> k9) -> TyFun k1 (TyFun k2 (TyFun k3 (TyFun k4 (TyFun k5 (TyFun k6 (TyFun k7 (TyFun k8 k9 -> *) -> *) -> *) -> *) -> *) -> *) -> *) -> *

-- | Type level function application

-- | An infix synonym for <a>Apply</a>
type (@@) a b = Apply a b

-- | Use this function when passing a function on singletons as a
--   higher-order function. You will often need an explicit type annotation
--   to get this to work. For example:
--   
--   <pre>
--   falses = sMap (singFun1 (Proxy :: Proxy NotSym0) sNot)
--                 (STrue `SCons` STrue `SCons` SNil)
--   </pre>
--   
--   There are a family of <tt>singFun...</tt> functions, keyed by the
--   number of parameters of the function.
singFun1 :: Proxy f -> SingFunction1 f -> Sing f
singFun2 :: Proxy f -> SingFunction2 f -> Sing f
singFun3 :: Proxy f -> SingFunction3 f -> Sing f
singFun4 :: Proxy f -> SingFunction4 f -> Sing f
singFun5 :: Proxy f -> SingFunction5 f -> Sing f
singFun6 :: Proxy f -> SingFunction6 f -> Sing f
singFun7 :: Proxy f -> SingFunction7 f -> Sing f
singFun8 :: Proxy f -> SingFunction8 f -> Sing f

-- | This is the inverse of <a>singFun1</a>, and likewise for the other
--   <tt>unSingFun...</tt> functions.
unSingFun1 :: Proxy f -> Sing f -> SingFunction1 f
unSingFun2 :: Proxy f -> Sing f -> SingFunction2 f
unSingFun3 :: Proxy f -> Sing f -> SingFunction3 f
unSingFun4 :: Proxy f -> Sing f -> SingFunction4 f
unSingFun5 :: Proxy f -> Sing f -> SingFunction5 f
unSingFun6 :: Proxy f -> Sing f -> SingFunction6 f
unSingFun7 :: Proxy f -> Sing f -> SingFunction7 f
unSingFun8 :: Proxy f -> Sing f -> SingFunction8 f
type SingFunction1 f = forall t. Sing t -> Sing (f @@ t)
type SingFunction2 f = forall t. Sing t -> SingFunction1 (f @@ t)
type SingFunction3 f = forall t. Sing t -> SingFunction2 (f @@ t)
type SingFunction4 f = forall t. Sing t -> SingFunction3 (f @@ t)
type SingFunction5 f = forall t. Sing t -> SingFunction4 (f @@ t)
type SingFunction6 f = forall t. Sing t -> SingFunction5 (f @@ t)
type SingFunction7 f = forall t. Sing t -> SingFunction6 (f @@ t)
type SingFunction8 f = forall t. Sing t -> SingFunction7 (f @@ t)

-- | GHC 7.8 sometimes warns about incomplete pattern matches when no such
--   patterns are possible, due to GADT constraints. See the bug report at
--   <a>https://ghc.haskell.org/trac/ghc/ticket/3927</a>. In such cases,
--   it's useful to have a catch-all pattern that then has <a>bugInGHC</a>
--   as its right-hand side.
bugInGHC :: a

-- | A concrete, promotable proxy type, for use at the kind level There are
--   no instances for this because it is intended at the kind level only
data KProxy t :: * -> *
KProxy :: KProxy t
instance (Data.Singletons.SingKind 'Data.Proxy.KProxy, Data.Singletons.SingKind 'Data.Proxy.KProxy) => Data.Singletons.SingKind 'Data.Proxy.KProxy


-- | Defines the class <a>SDecide</a>, allowing for decidable equality over
--   singletons.
module Data.Singletons.Decide

-- | Members of the <a>SDecide</a> "kind" class support decidable equality.
--   Instances of this class are generated alongside singleton definitions
--   for datatypes that derive an <a>Eq</a> instance.
class (kparam ~ KProxy) => SDecide (kparam :: KProxy k)

-- | Compute a proof or disproof of equality, given two singletons.
(%~) :: SDecide kparam => Sing a -> Sing b -> Decision (a :~: b)

-- | Propositional equality. If <tt>a :~: b</tt> is inhabited by some
--   terminating value, then the type <tt>a</tt> is the same as the type
--   <tt>b</tt>. To use this equality in practice, pattern-match on the
--   <tt>a :~: b</tt> to get out the <tt>Refl</tt> constructor; in the body
--   of the pattern-match, the compiler knows that <tt>a ~ b</tt>.
data (:~:) (a :: k) (b :: k) :: k -> k -> *
Refl :: (:~:) k b b

-- | Uninhabited data type
data Void :: *

-- | Because we can never create a value of type <a>Void</a>, a function
--   that type-checks at <tt>a -&gt; Void</tt> shows that objects of type
--   <tt>a</tt> can never exist. Thus, we say that <tt>a</tt> is
--   <a>Refuted</a>
type Refuted a = a -> Void

-- | A <a>Decision</a> about a type <tt>a</tt> is either a proof of
--   existence or a proof that <tt>a</tt> cannot exist.
data Decision a

-- | Witness for <tt>a</tt>
Proved :: a -> Decision a

-- | Proof that no <tt>a</tt> exists
Disproved :: (Refuted a) -> Decision a
instance Data.Singletons.Decide.SDecide 'Data.Proxy.KProxy => Data.Type.Equality.TestEquality Data.Singletons.Sing


-- | Defines functions and datatypes relating to the singleton for
--   <a>Bool</a>, including a singletons version of all the definitions in
--   <tt>Data.Bool</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Bool</tt>. Also, please excuse
--   the apparent repeated variable names. This is due to an interaction
--   between Template Haskell and Haddock.
module Data.Singletons.Prelude.Bool

-- | The singleton kind-indexed data family.
type SBool = (Sing :: Bool -> *)

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>

-- | Conditional over singletons
sIf :: Sing a -> Sing b -> Sing c -> Sing (If a b c)
sNot :: Sing t_a1EWL -> Sing (Apply NotSym0 t_a1EWL :: Bool)
(%:&&) :: Sing t_a1EWO -> Sing t_a1EWP -> Sing (Apply (Apply (:&&$) t_a1EWO) t_a1EWP :: Bool)
(%:||) :: Sing t_a1EWM -> Sing t_a1EWN -> Sing (Apply (Apply (:||$) t_a1EWM) t_a1EWN :: Bool)
bool_ :: a_a1EJT -> a_a1EJT -> Bool -> a_a1EJT
sBool_ :: Sing t_a1EKh -> Sing t_a1EKi -> Sing t_a1EKj -> Sing (Apply (Apply (Apply Bool_Sym0 t_a1EKh) t_a1EKi) t_a1EKj :: a_a1EJT)
sOtherwise :: Sing (OtherwiseSym0 :: Bool)
type TrueSym0 = True
type FalseSym0 = False
data NotSym0 (l_a1EWi :: TyFun Bool Bool)
type NotSym1 (t_a1EWh :: Bool) = Not t_a1EWh
data (:&&$) (l_a1EWA :: TyFun Bool (TyFun Bool Bool -> *))
data (:&&$$) (l_a1EWD :: Bool) (l_a1EWC :: TyFun Bool Bool)
type (:&&$$$) (t_a1EWy :: Bool) (t_a1EWz :: Bool) = (:&&) t_a1EWy t_a1EWz
data (:||$) (l_a1EWn :: TyFun Bool (TyFun Bool Bool -> *))
data (:||$$) (l_a1EWq :: Bool) (l_a1EWp :: TyFun Bool Bool)
type (:||$$$) (t_a1EWl :: Bool) (t_a1EWm :: Bool) = (:||) t_a1EWl t_a1EWm
data Bool_Sym0 (l_a1EK1 :: TyFun a_a1EJT (TyFun a_a1EJT (TyFun Bool a_a1EJT -> *) -> *))
data Bool_Sym1 (l_a1EK4 :: a_a1EJT) (l_a1EK3 :: TyFun a_a1EJT (TyFun Bool a_a1EJT -> *))
data Bool_Sym2 (l_a1EK7 :: a_a1EJT) (l_a1EK8 :: a_a1EJT) (l_a1EK6 :: TyFun Bool a_a1EJT)
type Bool_Sym3 (t_a1EJY :: a_a1EJT) (t_a1EJZ :: a_a1EJT) (t_a1EK0 :: Bool) = Bool_ t_a1EJY t_a1EJZ t_a1EK0
type OtherwiseSym0 = Otherwise
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Bool.NotSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Bool.:||$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Bool.:||$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Bool.:&&$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Bool.:&&$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Bool.Bool_Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Bool.Bool_Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Bool.Bool_Sym0


-- | Defines the SEq singleton version of the Eq type class.
module Data.Singletons.Prelude.Eq

-- | The promoted analogue of <a>Eq</a>. If you supply no definition for
--   '(:==)', then it defaults to a use of '(==)', from
--   <tt>Data.Type.Equality</tt>.
class kproxy ~ KProxy => PEq (kproxy :: KProxy a) where type family (:==) (x :: a) (y :: a) :: Bool type family (:/=) (x :: a) (y :: a) :: Bool (:==) (x :: a) (y :: a) = x == y (:/=) (x :: a) (y :: a) = Not (x :== y)

-- | The singleton analogue of <a>Eq</a>. Unlike the definition for
--   <a>Eq</a>, it is required that instances define a body for '(%:==)'.
--   You may also supply a body for '(%:/=)'.
class (kparam ~ KProxy) => SEq (kparam :: KProxy k) where a %:/= b = sNot (a %:== b)

-- | Boolean equality on singletons
(%:==) :: SEq kparam => Sing a -> Sing b -> Sing (a :== b)

-- | Boolean disequality on singletons
(%:/=) :: SEq kparam => Sing a -> Sing b -> Sing (a :/= b)
data (:==$) (l_a1FII :: TyFun a_a1FHU (TyFun a_a1FHU Bool -> *))
data (:==$$) (l_a1FIL :: a_a1FHU) (l_a1FIK :: TyFun a_a1FHU Bool)
type (:==$$$) (t_a1FIG :: a_a1FHU) (t_a1FIH :: a_a1FHU) = (:==) t_a1FIG t_a1FIH
data (:/=$) (l_a1FIP :: TyFun a_a1FHU (TyFun a_a1FHU Bool -> *))
data (:/=$$) (l_a1FIS :: a_a1FHU) (l_a1FIR :: TyFun a_a1FHU Bool)
type (:/=$$$) (t_a1FIN :: a_a1FHU) (t_a1FIO :: a_a1FHU) = (:/=) t_a1FIN t_a1FIO
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy, Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Eq.:==$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Eq.:==$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Eq.:/=$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Eq.:/=$)


-- | This file implements <a>singletonStar</a>, which generates a datatype
--   <tt>Rep</tt> and associated singleton from a list of types. The
--   promoted version of <tt>Rep</tt> is kind <tt>*</tt> and the Haskell
--   types themselves. This is still very experimental, so expect unusual
--   results!
module Data.Singletons.CustomStar

-- | Produce a representation and singleton for the collection of types
--   given.
--   
--   A datatype <tt>Rep</tt> is created, with one constructor per type in
--   the declared universe. When this type is promoted by the singletons
--   library, the constructors become full types in <tt>*</tt>, not just
--   promoted data constructors.
--   
--   For example,
--   
--   <pre>
--   $(singletonStar [''Nat, ''Bool, ''Maybe])
--   </pre>
--   
--   generates the following:
--   
--   <pre>
--   data Rep = Nat | Bool | Maybe Rep deriving (Eq, Show, Read)
--   </pre>
--   
--   and its singleton. However, because <tt>Rep</tt> is promoted to
--   <tt>*</tt>, the singleton is perhaps slightly unexpected:
--   
--   <pre>
--   data instance Sing (a :: *) where
--     SNat :: Sing Nat
--     SBool :: Sing Bool
--     SMaybe :: SingRep a =&gt; Sing a -&gt; Sing (Maybe a)
--   </pre>
--   
--   The unexpected part is that <tt>Nat</tt>, <tt>Bool</tt>, and
--   <tt>Maybe</tt> above are the real <tt>Nat</tt>, <tt>Bool</tt>, and
--   <tt>Maybe</tt>, not just promoted data constructors.
--   
--   Please note that this function is <i>very</i> experimental. Use at
--   your own risk.
singletonStar :: DsMonad q => [Name] -> q [Dec]


-- | Provided promoted definitions related to type-level equality.
module Data.Promotion.Prelude.Eq

-- | The promoted analogue of <a>Eq</a>. If you supply no definition for
--   '(:==)', then it defaults to a use of '(==)', from
--   <tt>Data.Type.Equality</tt>.
class kproxy ~ KProxy => PEq (kproxy :: KProxy a) where type family (:==) (x :: a) (y :: a) :: Bool type family (:/=) (x :: a) (y :: a) :: Bool (:==) (x :: a) (y :: a) = x == y (:/=) (x :: a) (y :: a) = Not (x :== y)
data (:==$) (l_a1FII :: TyFun a_a1FHU (TyFun a_a1FHU Bool -> *))
data (:==$$) (l_a1FIL :: a_a1FHU) (l_a1FIK :: TyFun a_a1FHU Bool)
type (:==$$$) (t_a1FIG :: a_a1FHU) (t_a1FIH :: a_a1FHU) = (:==) t_a1FIG t_a1FIH
data (:/=$) (l_a1FIP :: TyFun a_a1FHU (TyFun a_a1FHU Bool -> *))
data (:/=$$) (l_a1FIS :: a_a1FHU) (l_a1FIR :: TyFun a_a1FHU Bool)
type (:/=$$$) (t_a1FIN :: a_a1FHU) (t_a1FIO :: a_a1FHU) = (:/=) t_a1FIN t_a1FIO


-- | Defines promoted functions and datatypes relating to <a>Bool</a>,
--   including a promoted version of all the definitions in
--   <tt>Data.Bool</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Bool</tt>. Also, please excuse
--   the apparent repeated variable names. This is due to an interaction
--   between Template Haskell and Haddock.
module Data.Promotion.Prelude.Bool

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>
bool_ :: a_a1EJT -> a_a1EJT -> Bool -> a_a1EJT
type TrueSym0 = True
type FalseSym0 = False
data NotSym0 (l_a1EWi :: TyFun Bool Bool)
type NotSym1 (t_a1EWh :: Bool) = Not t_a1EWh
data (:&&$) (l_a1EWA :: TyFun Bool (TyFun Bool Bool -> *))
data (:&&$$) (l_a1EWD :: Bool) (l_a1EWC :: TyFun Bool Bool)
type (:&&$$$) (t_a1EWy :: Bool) (t_a1EWz :: Bool) = (:&&) t_a1EWy t_a1EWz
data (:||$) (l_a1EWn :: TyFun Bool (TyFun Bool Bool -> *))
data (:||$$) (l_a1EWq :: Bool) (l_a1EWp :: TyFun Bool Bool)
type (:||$$$) (t_a1EWl :: Bool) (t_a1EWm :: Bool) = (:||) t_a1EWl t_a1EWm
data Bool_Sym0 (l_a1EK1 :: TyFun a_a1EJT (TyFun a_a1EJT (TyFun Bool a_a1EJT -> *) -> *))
data Bool_Sym1 (l_a1EK4 :: a_a1EJT) (l_a1EK3 :: TyFun a_a1EJT (TyFun Bool a_a1EJT -> *))
data Bool_Sym2 (l_a1EK7 :: a_a1EJT) (l_a1EK8 :: a_a1EJT) (l_a1EK6 :: TyFun Bool a_a1EJT)
type Bool_Sym3 (t_a1EJY :: a_a1EJT) (t_a1EJZ :: a_a1EJT) (t_a1EK0 :: Bool) = Bool_ t_a1EJY t_a1EJZ t_a1EK0
type OtherwiseSym0 = Otherwise


-- | Defines the promoted version of Ord, <a>POrd</a>, and the singleton
--   version, <a>SOrd</a>.
module Data.Singletons.Prelude.Ord
class (PEq (KProxy :: KProxy a_a1LoX), kproxy_a1LxM ~ KProxy) => POrd (kproxy_a1LxM :: KProxy a_a1LoX) where type family Compare (arg_a1LxN :: a_a1LoX) (arg_a1LxO :: a_a1LoX) :: Ordering type family (:<) (arg_a1LxW :: a_a1LoX) (arg_a1LxX :: a_a1LoX) :: Bool type family (:<=) (arg_a1Ly5 :: a_a1LoX) (arg_a1Ly6 :: a_a1LoX) :: Bool type family (:>) (arg_a1Lye :: a_a1LoX) (arg_a1Lyf :: a_a1LoX) :: Bool type family (:>=) (arg_a1Lyn :: a_a1LoX) (arg_a1Lyo :: a_a1LoX) :: Bool type family Max (arg_a1Lyw :: a_a1LoX) (arg_a1Lyx :: a_a1LoX) :: a_a1LoX type family Min (arg_a1LyF :: a_a1LoX) (arg_a1LyG :: a_a1LoX) :: a_a1LoX Compare (a_a1Lzl :: a_a1LoX) (a_a1Lzm :: a_a1LoX) = Apply (Apply Compare_1627811141Sym0 a_a1Lzl) a_a1Lzm (:<) (a_a1LzS :: a_a1LoX) (a_a1LzT :: a_a1LoX) = Apply (Apply TFHelper_1627811174Sym0 a_a1LzS) a_a1LzT (:<=) (a_a1LAp :: a_a1LoX) (a_a1LAq :: a_a1LoX) = Apply (Apply TFHelper_1627811207Sym0 a_a1LAp) a_a1LAq (:>) (a_a1LAW :: a_a1LoX) (a_a1LAX :: a_a1LoX) = Apply (Apply TFHelper_1627811240Sym0 a_a1LAW) a_a1LAX (:>=) (a_a1LBt :: a_a1LoX) (a_a1LBu :: a_a1LoX) = Apply (Apply TFHelper_1627811273Sym0 a_a1LBt) a_a1LBu Max (a_a1LC0 :: a_a1LoX) (a_a1LC1 :: a_a1LoX) = Apply (Apply Max_1627811306Sym0 a_a1LC0) a_a1LC1 Min (a_a1LCx :: a_a1LoX) (a_a1LCy :: a_a1LoX) = Apply (Apply Min_1627811339Sym0 a_a1LCx) a_a1LCy
class (SEq (KProxy :: KProxy a_a1LoX), kproxy_a1LDB ~ KProxy) => SOrd (kproxy_a1LDB :: KProxy a_a1LoX) where sCompare sX sY = let lambda_a1LCW :: forall x_a1LyX y_a1LyY. (t_a1LCI ~ x_a1LyX, t_a1LCJ ~ y_a1LyY) => Sing x_a1LyX -> Sing y_a1LyY -> Sing (Apply (Apply CompareSym0 x_a1LyX) y_a1LyY :: Ordering) lambda_a1LCW x_a1LCX y_a1LCY = let sScrutinee_1627810510 :: Sing (Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY) sScrutinee_1627810510 = applySing (applySing (singFun2 (Proxy :: Proxy (:==$)) (%:==)) x_a1LCX) y_a1LCY in  case sScrutinee_1627810510 of { STrue -> let lambda_a1LCZ :: TrueSym0 ~ Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811125 x_a1LyX y_a1LyY TrueSym0) lambda_a1LCZ = SEQ in lambda_a1LCZ SFalse -> let lambda_a1LD0 :: FalseSym0 ~ Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811125 x_a1LyX y_a1LyY FalseSym0) lambda_a1LD0 = let sScrutinee_1627810512 :: Sing (Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY) sScrutinee_1627810512 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LCX) y_a1LCY in  case sScrutinee_1627810512 of { STrue -> let lambda_a1LD1 :: TrueSym0 ~ Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811135 x_a1LyX y_a1LyY TrueSym0) lambda_a1LD1 = SLT in lambda_a1LD1 SFalse -> let lambda_a1LD2 :: FalseSym0 ~ Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811135 x_a1LyX y_a1LyY FalseSym0) lambda_a1LD2 = SGT in lambda_a1LD2 } :: Sing (Case_1627811135 x_a1LyX y_a1LyY (Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY)) in lambda_a1LD0 } :: Sing (Case_1627811125 x_a1LyX y_a1LyY (Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY)) in lambda_a1LCW sX sY (%:<) sX sY = let lambda_a1LD3 :: forall x_a1LzF y_a1LzG. (t_a1LCK ~ x_a1LzF, t_a1LCL ~ y_a1LzG) => Sing x_a1LzF -> Sing y_a1LzG -> Sing (Apply (Apply (:<$) x_a1LzF) y_a1LzG :: Bool) lambda_a1LD3 x_a1LD4 y_a1LD5 = let sScrutinee_1627810514 :: Sing (Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG) sScrutinee_1627810514 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LD4) y_a1LD5 in  case sScrutinee_1627810514 of { SLT -> let lambda_a1LD6 :: LTSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG LTSym0) lambda_a1LD6 = STrue in lambda_a1LD6 SEQ -> let lambda_a1LD7 :: EQSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG EQSym0) lambda_a1LD7 = SFalse in lambda_a1LD7 SGT -> let lambda_a1LD8 :: GTSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG GTSym0) lambda_a1LD8 = SFalse in lambda_a1LD8 } :: Sing (Case_1627811169 x_a1LzF y_a1LzG (Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG)) in lambda_a1LD3 sX sY (%:<=) sX sY = let lambda_a1LD9 :: forall x_a1LAc y_a1LAd. (t_a1LCM ~ x_a1LAc, t_a1LCN ~ y_a1LAd) => Sing x_a1LAc -> Sing y_a1LAd -> Sing (Apply (Apply (:<=$) x_a1LAc) y_a1LAd :: Bool) lambda_a1LD9 x_a1LDa y_a1LDb = let sScrutinee_1627810516 :: Sing (Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd) sScrutinee_1627810516 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDa) y_a1LDb in  case sScrutinee_1627810516 of { SLT -> let lambda_a1LDc :: LTSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd LTSym0) lambda_a1LDc = STrue in lambda_a1LDc SEQ -> let lambda_a1LDd :: EQSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd EQSym0) lambda_a1LDd = STrue in lambda_a1LDd SGT -> let lambda_a1LDe :: GTSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd GTSym0) lambda_a1LDe = SFalse in lambda_a1LDe } :: Sing (Case_1627811202 x_a1LAc y_a1LAd (Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd)) in lambda_a1LD9 sX sY (%:>) sX sY = let lambda_a1LDf :: forall x_a1LAJ y_a1LAK. (t_a1LCO ~ x_a1LAJ, t_a1LCP ~ y_a1LAK) => Sing x_a1LAJ -> Sing y_a1LAK -> Sing (Apply (Apply (:>$) x_a1LAJ) y_a1LAK :: Bool) lambda_a1LDf x_a1LDg y_a1LDh = let sScrutinee_1627810518 :: Sing (Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK) sScrutinee_1627810518 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDg) y_a1LDh in  case sScrutinee_1627810518 of { SLT -> let lambda_a1LDi :: LTSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK LTSym0) lambda_a1LDi = SFalse in lambda_a1LDi SEQ -> let lambda_a1LDj :: EQSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK EQSym0) lambda_a1LDj = SFalse in lambda_a1LDj SGT -> let lambda_a1LDk :: GTSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK GTSym0) lambda_a1LDk = STrue in lambda_a1LDk } :: Sing (Case_1627811235 x_a1LAJ y_a1LAK (Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK)) in lambda_a1LDf sX sY (%:>=) sX sY = let lambda_a1LDl :: forall x_a1LBg y_a1LBh. (t_a1LCQ ~ x_a1LBg, t_a1LCR ~ y_a1LBh) => Sing x_a1LBg -> Sing y_a1LBh -> Sing (Apply (Apply (:>=$) x_a1LBg) y_a1LBh :: Bool) lambda_a1LDl x_a1LDm y_a1LDn = let sScrutinee_1627810520 :: Sing (Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh) sScrutinee_1627810520 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDm) y_a1LDn in  case sScrutinee_1627810520 of { SLT -> let lambda_a1LDo :: LTSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh LTSym0) lambda_a1LDo = SFalse in lambda_a1LDo SEQ -> let lambda_a1LDp :: EQSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh EQSym0) lambda_a1LDp = STrue in lambda_a1LDp SGT -> let lambda_a1LDq :: GTSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh GTSym0) lambda_a1LDq = STrue in lambda_a1LDq } :: Sing (Case_1627811268 x_a1LBg y_a1LBh (Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh)) in lambda_a1LDl sX sY sMax sX sY = let lambda_a1LDr :: forall x_a1LBN y_a1LBO. (t_a1LCS ~ x_a1LBN, t_a1LCT ~ y_a1LBO) => Sing x_a1LBN -> Sing y_a1LBO -> Sing (Apply (Apply MaxSym0 x_a1LBN) y_a1LBO :: a_a1LoX) lambda_a1LDr x_a1LDs y_a1LDt = let sScrutinee_1627810522 :: Sing (Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO) sScrutinee_1627810522 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LDs) y_a1LDt in  case sScrutinee_1627810522 of { STrue -> let lambda_a1LDu :: TrueSym0 ~ Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO => Sing (Case_1627811301 x_a1LBN y_a1LBO TrueSym0) lambda_a1LDu = y_a1LDt in lambda_a1LDu SFalse -> let lambda_a1LDv :: FalseSym0 ~ Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO => Sing (Case_1627811301 x_a1LBN y_a1LBO FalseSym0) lambda_a1LDv = x_a1LDs in lambda_a1LDv } :: Sing (Case_1627811301 x_a1LBN y_a1LBO (Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO)) in lambda_a1LDr sX sY sMin sX sY = let lambda_a1LDw :: forall x_a1LCk y_a1LCl. (t_a1LCU ~ x_a1LCk, t_a1LCV ~ y_a1LCl) => Sing x_a1LCk -> Sing y_a1LCl -> Sing (Apply (Apply MinSym0 x_a1LCk) y_a1LCl :: a_a1LoX) lambda_a1LDw x_a1LDx y_a1LDy = let sScrutinee_1627810524 :: Sing (Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl) sScrutinee_1627810524 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LDx) y_a1LDy in  case sScrutinee_1627810524 of { STrue -> let lambda_a1LDz :: TrueSym0 ~ Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl => Sing (Case_1627811334 x_a1LCk y_a1LCl TrueSym0) lambda_a1LDz = x_a1LDx in lambda_a1LDz SFalse -> let lambda_a1LDA :: FalseSym0 ~ Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl => Sing (Case_1627811334 x_a1LCk y_a1LCl FalseSym0) lambda_a1LDA = y_a1LDy in lambda_a1LDA } :: Sing (Case_1627811334 x_a1LCk y_a1LCl (Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl)) in lambda_a1LDw sX sY
sCompare :: SOrd kproxy_a1LDB => Sing t_a1LCI -> Sing t_a1LCJ -> Sing (Apply (Apply CompareSym0 t_a1LCI) t_a1LCJ :: Ordering)
(%:<) :: SOrd kproxy_a1LDB => Sing t_a1LCK -> Sing t_a1LCL -> Sing (Apply (Apply (:<$) t_a1LCK) t_a1LCL :: Bool)
(%:<=) :: SOrd kproxy_a1LDB => Sing t_a1LCM -> Sing t_a1LCN -> Sing (Apply (Apply (:<=$) t_a1LCM) t_a1LCN :: Bool)
(%:>) :: SOrd kproxy_a1LDB => Sing t_a1LCO -> Sing t_a1LCP -> Sing (Apply (Apply (:>$) t_a1LCO) t_a1LCP :: Bool)
(%:>=) :: SOrd kproxy_a1LDB => Sing t_a1LCQ -> Sing t_a1LCR -> Sing (Apply (Apply (:>=$) t_a1LCQ) t_a1LCR :: Bool)
sMax :: SOrd kproxy_a1LDB => Sing t_a1LCS -> Sing t_a1LCT -> Sing (Apply (Apply MaxSym0 t_a1LCS) t_a1LCT :: a_a1LoX)
sMin :: SOrd kproxy_a1LDB => Sing t_a1LCU -> Sing t_a1LCV -> Sing (Apply (Apply MinSym0 t_a1LCU) t_a1LCV :: a_a1LoX)
thenCmp :: Ordering -> Ordering -> Ordering
sThenCmp :: Sing t_a1NJy -> Sing t_a1NJz -> Sing (Apply (Apply ThenCmpSym0 t_a1NJy) t_a1NJz :: Ordering)

-- | The singleton kind-indexed data family.
data ThenCmpSym0 (l_a1NJk :: TyFun Ordering (TyFun Ordering Ordering -> *))
data ThenCmpSym1 (l_a1NJn :: Ordering) (l_a1NJm :: TyFun Ordering Ordering)
type ThenCmpSym2 (t_a1NJi :: Ordering) (t_a1NJj :: Ordering) = ThenCmp t_a1NJi t_a1NJj
type LTSym0 = LT
type EQSym0 = EQ
type GTSym0 = GT
data CompareSym0 (l_a1LxR :: TyFun a_a1LoX (TyFun a_a1LoX Ordering -> *))
data CompareSym1 (l_a1LxU :: a_a1LoX) (l_a1LxT :: TyFun a_a1LoX Ordering)
type CompareSym2 (t_a1LxP :: a_a1LoX) (t_a1LxQ :: a_a1LoX) = Compare t_a1LxP t_a1LxQ
data (:<$) (l_a1Ly0 :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:<$$) (l_a1Ly3 :: a_a1LoX) (l_a1Ly2 :: TyFun a_a1LoX Bool)
type (:<$$$) (t_a1LxY :: a_a1LoX) (t_a1LxZ :: a_a1LoX) = (:<) t_a1LxY t_a1LxZ
data (:<=$) (l_a1Ly9 :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:<=$$) (l_a1Lyc :: a_a1LoX) (l_a1Lyb :: TyFun a_a1LoX Bool)
type (:<=$$$) (t_a1Ly7 :: a_a1LoX) (t_a1Ly8 :: a_a1LoX) = (:<=) t_a1Ly7 t_a1Ly8
data (:>$) (l_a1Lyi :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:>$$) (l_a1Lyl :: a_a1LoX) (l_a1Lyk :: TyFun a_a1LoX Bool)
type (:>$$$) (t_a1Lyg :: a_a1LoX) (t_a1Lyh :: a_a1LoX) = (:>) t_a1Lyg t_a1Lyh
data (:>=$) (l_a1Lyr :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:>=$$) (l_a1Lyu :: a_a1LoX) (l_a1Lyt :: TyFun a_a1LoX Bool)
type (:>=$$$) (t_a1Lyp :: a_a1LoX) (t_a1Lyq :: a_a1LoX) = (:>=) t_a1Lyp t_a1Lyq
data MaxSym0 (l_a1LyA :: TyFun a_a1LoX (TyFun a_a1LoX a_a1LoX -> *))
data MaxSym1 (l_a1LyD :: a_a1LoX) (l_a1LyC :: TyFun a_a1LoX a_a1LoX)
type MaxSym2 (t_a1Lyy :: a_a1LoX) (t_a1Lyz :: a_a1LoX) = Max t_a1Lyy t_a1Lyz
data MinSym0 (l_a1LyJ :: TyFun a_a1LoX (TyFun a_a1LoX a_a1LoX -> *))
data MinSym1 (l_a1LyM :: a_a1LoX) (l_a1LyL :: TyFun a_a1LoX a_a1LoX)
type MinSym2 (t_a1LyH :: a_a1LoX) (t_a1LyI :: a_a1LoX) = Min t_a1LyH t_a1LyI
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819833Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819833Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819885Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819885Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819941Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819941Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819985Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627819985Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820028Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820028Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820079Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820079Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820138Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820138Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820205Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820205Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820280Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820280Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy, Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820315Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820315Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820339Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820339Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820368Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627820368Sym0
instance Data.Singletons.Prelude.Ord.POrd 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Ord.SOrd 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.ThenCmpSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.ThenCmpSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.CompareSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.CompareSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:<$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:<$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:<=$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:<=$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:>$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:>$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:>=$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Ord.:>=$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.MaxSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.MaxSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.MinSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.MinSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811117Scrutinee_1627810510Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811117Scrutinee_1627810510Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811127Scrutinee_1627810512Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811127Scrutinee_1627810512Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627811141Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Compare_1627811141Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811161Scrutinee_1627810514Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811161Scrutinee_1627810514Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811174Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811174Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811194Scrutinee_1627810516Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811194Scrutinee_1627810516Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811207Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811207Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811227Scrutinee_1627810518Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811227Scrutinee_1627810518Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811240Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811240Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811260Scrutinee_1627810520Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811260Scrutinee_1627810520Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811273Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.TFHelper_1627811273Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811293Scrutinee_1627810522Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811293Scrutinee_1627810522Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Max_1627811306Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Max_1627811306Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811326Scrutinee_1627810524Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Let1627811326Scrutinee_1627810524Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Min_1627811339Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Ord.Min_1627811339Sym0


-- | Provides promoted definitions related to type-level comparisons.
module Data.Promotion.Prelude.Ord
class (PEq (KProxy :: KProxy a_a1LoX), kproxy_a1LxM ~ KProxy) => POrd (kproxy_a1LxM :: KProxy a_a1LoX) where type family Compare (arg_a1LxN :: a_a1LoX) (arg_a1LxO :: a_a1LoX) :: Ordering type family (:<) (arg_a1LxW :: a_a1LoX) (arg_a1LxX :: a_a1LoX) :: Bool type family (:<=) (arg_a1Ly5 :: a_a1LoX) (arg_a1Ly6 :: a_a1LoX) :: Bool type family (:>) (arg_a1Lye :: a_a1LoX) (arg_a1Lyf :: a_a1LoX) :: Bool type family (:>=) (arg_a1Lyn :: a_a1LoX) (arg_a1Lyo :: a_a1LoX) :: Bool type family Max (arg_a1Lyw :: a_a1LoX) (arg_a1Lyx :: a_a1LoX) :: a_a1LoX type family Min (arg_a1LyF :: a_a1LoX) (arg_a1LyG :: a_a1LoX) :: a_a1LoX Compare (a_a1Lzl :: a_a1LoX) (a_a1Lzm :: a_a1LoX) = Apply (Apply Compare_1627811141Sym0 a_a1Lzl) a_a1Lzm (:<) (a_a1LzS :: a_a1LoX) (a_a1LzT :: a_a1LoX) = Apply (Apply TFHelper_1627811174Sym0 a_a1LzS) a_a1LzT (:<=) (a_a1LAp :: a_a1LoX) (a_a1LAq :: a_a1LoX) = Apply (Apply TFHelper_1627811207Sym0 a_a1LAp) a_a1LAq (:>) (a_a1LAW :: a_a1LoX) (a_a1LAX :: a_a1LoX) = Apply (Apply TFHelper_1627811240Sym0 a_a1LAW) a_a1LAX (:>=) (a_a1LBt :: a_a1LoX) (a_a1LBu :: a_a1LoX) = Apply (Apply TFHelper_1627811273Sym0 a_a1LBt) a_a1LBu Max (a_a1LC0 :: a_a1LoX) (a_a1LC1 :: a_a1LoX) = Apply (Apply Max_1627811306Sym0 a_a1LC0) a_a1LC1 Min (a_a1LCx :: a_a1LoX) (a_a1LCy :: a_a1LoX) = Apply (Apply Min_1627811339Sym0 a_a1LCx) a_a1LCy
type LTSym0 = LT
type EQSym0 = EQ
type GTSym0 = GT
data CompareSym0 (l_a1LxR :: TyFun a_a1LoX (TyFun a_a1LoX Ordering -> *))
data CompareSym1 (l_a1LxU :: a_a1LoX) (l_a1LxT :: TyFun a_a1LoX Ordering)
type CompareSym2 (t_a1LxP :: a_a1LoX) (t_a1LxQ :: a_a1LoX) = Compare t_a1LxP t_a1LxQ
data (:<$) (l_a1Ly0 :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:<$$) (l_a1Ly3 :: a_a1LoX) (l_a1Ly2 :: TyFun a_a1LoX Bool)
type (:<$$$) (t_a1LxY :: a_a1LoX) (t_a1LxZ :: a_a1LoX) = (:<) t_a1LxY t_a1LxZ
data (:<=$) (l_a1Ly9 :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:<=$$) (l_a1Lyc :: a_a1LoX) (l_a1Lyb :: TyFun a_a1LoX Bool)
type (:<=$$$) (t_a1Ly7 :: a_a1LoX) (t_a1Ly8 :: a_a1LoX) = (:<=) t_a1Ly7 t_a1Ly8
data (:>$) (l_a1Lyi :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:>$$) (l_a1Lyl :: a_a1LoX) (l_a1Lyk :: TyFun a_a1LoX Bool)
type (:>$$$) (t_a1Lyg :: a_a1LoX) (t_a1Lyh :: a_a1LoX) = (:>) t_a1Lyg t_a1Lyh
data (:>=$) (l_a1Lyr :: TyFun a_a1LoX (TyFun a_a1LoX Bool -> *))
data (:>=$$) (l_a1Lyu :: a_a1LoX) (l_a1Lyt :: TyFun a_a1LoX Bool)
type (:>=$$$) (t_a1Lyp :: a_a1LoX) (t_a1Lyq :: a_a1LoX) = (:>=) t_a1Lyp t_a1Lyq
data MaxSym0 (l_a1LyA :: TyFun a_a1LoX (TyFun a_a1LoX a_a1LoX -> *))
data MaxSym1 (l_a1LyD :: a_a1LoX) (l_a1LyC :: TyFun a_a1LoX a_a1LoX)
type MaxSym2 (t_a1Lyy :: a_a1LoX) (t_a1Lyz :: a_a1LoX) = Max t_a1Lyy t_a1Lyz
data MinSym0 (l_a1LyJ :: TyFun a_a1LoX (TyFun a_a1LoX a_a1LoX -> *))
data MinSym1 (l_a1LyM :: a_a1LoX) (l_a1LyL :: TyFun a_a1LoX a_a1LoX)
type MinSym2 (t_a1LyH :: a_a1LoX) (t_a1LyI :: a_a1LoX) = Min t_a1LyH t_a1LyI


-- | This module defines singleton instances making <a>Typeable</a> the
--   singleton for the kind <tt>*</tt>. The definitions don't fully line up
--   with what is expected within the singletons library, so expect unusual
--   results!
module Data.Singletons.TypeRepStar

-- | The singleton kind-indexed data family.
instance Data.Typeable.Internal.Typeable a => Data.Singletons.SingI a
instance Data.Singletons.SingKind 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.PEq 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Eq.SEq 'Data.Proxy.KProxy
instance Data.Singletons.Decide.SDecide 'Data.Proxy.KProxy
instance Data.Type.Coercion.TestCoercion Data.Singletons.Sing


-- | Implements singletonized versions of functions from <tt>GHC.Base</tt>
--   module.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Tuple</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Singletons.Prelude.Base
sFoldr :: Sing t_a24uE -> Sing t_a24uF -> Sing t_a24uG -> Sing (Apply (Apply (Apply FoldrSym0 t_a24uE) t_a24uF) t_a24uG :: b_a24qW)
sMap :: Sing t_a24uC -> Sing t_a24uD -> Sing (Apply (Apply MapSym0 t_a24uC) t_a24uD :: [b_a24r3])
(%:++) :: Sing t_a24uA -> Sing t_a24uB -> Sing (Apply (Apply (:++$) t_a24uA) t_a24uB :: [a_a24r7])
sOtherwise :: Sing (OtherwiseSym0 :: Bool)
sId :: Sing t_a24uz -> Sing (Apply IdSym0 t_a24uz :: a_a24rc)
sConst :: Sing t_a24uv -> Sing t_a24uw -> Sing (Apply (Apply ConstSym0 t_a24uv) t_a24uw :: a_a24re)
(%:.) :: Sing t_a24us -> Sing t_a24ut -> Sing t_a24uu -> Sing (Apply (Apply (Apply (:.$) t_a24us) t_a24ut) t_a24uu :: c_a24ri)
(%$) :: Sing f -> Sing x -> Sing ((($$) @@ f) @@ x)
(%$!) :: Sing f -> Sing x -> Sing ((($!$) @@ f) @@ x)
sFlip :: Sing t_a24up -> Sing t_a24uq -> Sing t_a24ur -> Sing (Apply (Apply (Apply FlipSym0 t_a24up) t_a24uq) t_a24ur :: c_a24rp)
sAsTypeOf :: Sing t_a24ux -> Sing t_a24uy -> Sing (Apply (Apply AsTypeOfSym0 t_a24ux) t_a24uy :: a_a24rt)
sSeq :: Sing t_a24un -> Sing t_a24uo -> Sing (Apply (Apply SeqSym0 t_a24un) t_a24uo :: b_a24rv)
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
type (:++$$$) (t_a24tf :: [a_a24r7]) (t_a24tg :: [a_a24r7]) = (:++) t_a24tf t_a24tg
type OtherwiseSym0 = Otherwise
data IdSym0 (l_a24tb :: TyFun a_a24rc a_a24rc)
type IdSym1 (t_a24ta :: a_a24rc) = Id t_a24ta
data ConstSym0 (l_a24sK :: TyFun a_a24re (TyFun b_a24rf a_a24re -> *))
data ConstSym1 (l_a24sN :: a_a24re) (l_a24sM :: TyFun b_a24rf a_a24re)
type ConstSym2 (t_a24sI :: a_a24re) (t_a24sJ :: b_a24rf) = Const t_a24sI t_a24sJ
data (:.$) (l_a24s5 :: TyFun (TyFun b_a24rh c_a24ri -> *) (TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *) -> *))
data (:.$$) (l_a24s8 :: TyFun b_a24rh c_a24ri -> *) (l_a24s7 :: TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *))
data (:.$$$) (l_a24sb :: TyFun b_a24rh c_a24ri -> *) (l_a24sc :: TyFun a_a24rj b_a24rh -> *) (l_a24sa :: TyFun a_a24rj c_a24ri)
type (:.$$$$) (t_a24s2 :: TyFun b_a24rh c_a24ri -> *) (t_a24s3 :: TyFun a_a24rj b_a24rh -> *) (t_a24s4 :: a_a24rj) = (:.) t_a24s2 t_a24s3 t_a24s4
data ($$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($$$$) a b = ($) a b
data ($!$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($!$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($!$$$) a b = ($!) a b
data FlipSym0 (l_a24rN :: TyFun (TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *) -> *))
data FlipSym1 (l_a24rQ :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rP :: TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *))
data FlipSym2 (l_a24rT :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rU :: b_a24ro) (l_a24rS :: TyFun a_a24rn c_a24rp)
type FlipSym3 (t_a24rK :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (t_a24rL :: b_a24ro) (t_a24rM :: a_a24rn) = Flip t_a24rK t_a24rL t_a24rM
data AsTypeOfSym0 (l_a24t1 :: TyFun a_a24rt (TyFun a_a24rt a_a24rt -> *))
data AsTypeOfSym1 (l_a24t4 :: a_a24rt) (l_a24t3 :: TyFun a_a24rt a_a24rt)
type AsTypeOfSym2 (t_a24sZ :: a_a24rt) (t_a24t0 :: a_a24rt) = AsTypeOf t_a24sZ t_a24t0
data SeqSym0 (l_a24rz :: TyFun a_a24ru (TyFun b_a24rv b_a24rv -> *))
data SeqSym1 (l_a24rC :: a_a24ru) (l_a24rB :: TyFun b_a24rv b_a24rv)
type SeqSym2 (t_a24rx :: a_a24ru) (t_a24ry :: b_a24rv) = Seq t_a24rx t_a24ry
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Lambda_1627883742Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Lambda_1627883742Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Lambda_1627883742Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Lambda_1627883742Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Let1627883845GoSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Let1627883845GoSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Let1627883845GoSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.Let1627883845GoSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.SeqSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.SeqSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FlipSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FlipSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FlipSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Base.:.$$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Base.:.$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Base.:.$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.ConstSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.ConstSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.AsTypeOfSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.AsTypeOfSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.IdSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Base.:++$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Base.:++$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.MapSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.MapSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FoldrSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FoldrSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Base.FoldrSym0


-- | Defines and exports promoted and singleton versions of definitions
--   from GHC.Num.
module Data.Singletons.Prelude.Num
class kproxy_a29RR ~ KProxy => PNum (kproxy_a29RR :: KProxy a_a29RN) where type family (:+) (arg_a29RS :: a_a29RN) (arg_a29RT :: a_a29RN) :: a_a29RN type family (:-) (arg_a29S1 :: a_a29RN) (arg_a29S2 :: a_a29RN) :: a_a29RN type family (:*) (arg_a29Sa :: a_a29RN) (arg_a29Sb :: a_a29RN) :: a_a29RN type family Negate (arg_a29Sj :: a_a29RN) :: a_a29RN type family Abs (arg_a29Sn :: a_a29RN) :: a_a29RN type family Signum (arg_a29Sr :: a_a29RN) :: a_a29RN type family FromInteger (arg_a29Sv :: Nat) :: a_a29RN (:-) (a_a29SK :: a_a29RN) (a_a29SL :: a_a29RN) = Apply (Apply TFHelper_1627904600Sym0 a_a29SK) a_a29SL Negate (a_a29T0 :: a_a29RN) = Apply Negate_1627904615Sym0 a_a29T0
class kproxy_a29Tl ~ KProxy => SNum (kproxy_a29Tl :: KProxy a_a29RN) where (%:-) sX sY = let lambda_a29Tg :: forall x_a29SI y_a29SJ. (t_a29T8 ~ x_a29SI, t_a29T9 ~ y_a29SJ) => Sing x_a29SI -> Sing y_a29SJ -> Sing (Apply (Apply (:-$) x_a29SI) y_a29SJ :: a_a29RN) lambda_a29Tg x_a29Th y_a29Ti = applySing (applySing (singFun2 (Proxy :: Proxy (:+$)) (%:+)) x_a29Th) (applySing (singFun1 (Proxy :: Proxy NegateSym0) sNegate) y_a29Ti) in lambda_a29Tg sX sY sNegate sX = let lambda_a29Tj :: forall x_a29SZ. t_a29Tc ~ x_a29SZ => Sing x_a29SZ -> Sing (Apply NegateSym0 x_a29SZ :: a_a29RN) lambda_a29Tj x_a29Tk = applySing (applySing (singFun2 (Proxy :: Proxy (:-$)) (%:-)) (sFromInteger (sing :: Sing 0))) x_a29Tk in lambda_a29Tj sX
(%:+) :: SNum kproxy_a29Tl => Sing t_a29T6 -> Sing t_a29T7 -> Sing (Apply (Apply (:+$) t_a29T6) t_a29T7 :: a_a29RN)
(%:-) :: SNum kproxy_a29Tl => Sing t_a29T8 -> Sing t_a29T9 -> Sing (Apply (Apply (:-$) t_a29T8) t_a29T9 :: a_a29RN)
(%:*) :: SNum kproxy_a29Tl => Sing t_a29Ta -> Sing t_a29Tb -> Sing (Apply (Apply (:*$) t_a29Ta) t_a29Tb :: a_a29RN)
sNegate :: SNum kproxy_a29Tl => Sing t_a29Tc -> Sing (Apply NegateSym0 t_a29Tc :: a_a29RN)
sAbs :: SNum kproxy_a29Tl => Sing t_a29Td -> Sing (Apply AbsSym0 t_a29Td :: a_a29RN)
sSignum :: SNum kproxy_a29Tl => Sing t_a29Te -> Sing (Apply SignumSym0 t_a29Te :: a_a29RN)
sFromInteger :: SNum kproxy_a29Tl => Sing t_a29Tf -> Sing (Apply FromIntegerSym0 t_a29Tf :: a_a29RN)
sSubtract :: SNum (KProxy :: KProxy a_a2axT) => Sing t_a2ayk -> Sing t_a2ayl -> Sing (Apply (Apply SubtractSym0 t_a2ayk) t_a2ayl :: a_a2axT)
data (:+$) (l_a29RW :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:+$$) (l_a29RZ :: a_a29RN) (l_a29RY :: TyFun a_a29RN a_a29RN)
type (:+$$$) (t_a29RU :: a_a29RN) (t_a29RV :: a_a29RN) = (:+) t_a29RU t_a29RV
data (:-$) (l_a29S5 :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:-$$) (l_a29S8 :: a_a29RN) (l_a29S7 :: TyFun a_a29RN a_a29RN)
type (:-$$$) (t_a29S3 :: a_a29RN) (t_a29S4 :: a_a29RN) = (:-) t_a29S3 t_a29S4
data (:*$) (l_a29Se :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:*$$) (l_a29Sh :: a_a29RN) (l_a29Sg :: TyFun a_a29RN a_a29RN)
type (:*$$$) (t_a29Sc :: a_a29RN) (t_a29Sd :: a_a29RN) = (:*) t_a29Sc t_a29Sd
data NegateSym0 (l_a29Sl :: TyFun a_a29RN a_a29RN)
type NegateSym1 (t_a29Sk :: a_a29RN) = Negate t_a29Sk
data AbsSym0 (l_a29Sp :: TyFun a_a29RN a_a29RN)
type AbsSym1 (t_a29So :: a_a29RN) = Abs t_a29So
data SignumSym0 (l_a29St :: TyFun a_a29RN a_a29RN)
type SignumSym1 (t_a29Ss :: a_a29RN) = Signum t_a29Ss
data FromIntegerSym0 (l_a29Sx :: TyFun Nat a_a29RN)
type FromIntegerSym1 (t_a29Sw :: Nat) = FromInteger t_a29Sw
data SubtractSym0 (l_a2ayb :: TyFun a_a2axT (TyFun a_a2axT a_a2axT -> *))
data SubtractSym1 (l_a2aye :: a_a2axT) (l_a2ayd :: TyFun a_a2axT a_a2axT)
type SubtractSym2 (t_a2ay9 :: a_a2axT) (t_a2aya :: a_a2axT) = Subtract t_a2ay9 t_a2aya
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.SubtractSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.SubtractSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:+$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:+$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:-$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:-$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:*$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.Num.:*$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.NegateSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.AbsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.SignumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.FromIntegerSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.TFHelper_1627904600Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.TFHelper_1627904600Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Num.Negate_1627904615Sym0
instance Data.Singletons.Prelude.Num.PNum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Num.SNum 'Data.Proxy.KProxy


-- | Defines and exports singletons useful for the Nat and Symbol kinds.
--   This exports the internal, unsafe constructors. Use
--   Data.Singletons.TypeLits for a safe interface.
module Data.Singletons.TypeLits

-- | (Kind) This is the kind of type-level natural numbers.
data Nat :: *

-- | (Kind) This is the kind of type-level symbols.
data Symbol :: *

-- | Kind-restricted synonym for <a>Sing</a> for <tt>Nat</tt>s
type SNat (x :: Nat) = Sing x

-- | Kind-restricted synonym for <a>Sing</a> for <tt>Symbol</tt>s
type SSymbol (x :: Symbol) = Sing x

-- | Given a singleton for <tt>Nat</tt>, call something requiring a
--   <tt>KnownNat</tt> instance.
withKnownNat :: Sing n -> (KnownNat n => r) -> r

-- | Given a singleton for <tt>Symbol</tt>, call something requiring a
--   <tt>KnownSymbol</tt> instance.
withKnownSymbol :: Sing n -> (KnownSymbol n => r) -> r

-- | The promotion of <a>error</a>. This version is more poly-kinded for
--   easier use.
data ErrorSym0 (l_a27XX :: TyFun k0_a27Iz k_a27Iy)
type ErrorSym1 (t_a27XW :: k0_a27Iz) = Error t_a27XW

-- | The singleton for <a>error</a>
sError :: Sing (str :: Symbol) -> a

-- | This class gives the integer associated with a type-level natural.
--   There are instances of the class for every concrete literal: 0, 1, 2,
--   etc.
class KnownNat (n :: Nat)

natVal :: KnownNat n => proxy n -> Integer

-- | This class gives the string associated with a type-level symbol. There
--   are instances of the class for every concrete literal: "hello", etc.
class KnownSymbol (n :: Symbol)

symbolVal :: KnownSymbol n => proxy n -> String
type (:^) a b = a ^ b
data (:^$) l_a280V
data (:^$$) (l_a280Y :: Nat) l_a280X
type (:^$$$) (t_a280T :: Nat) (t_a280U :: Nat) = (:^) t_a280T t_a280U
instance GHC.Num.Num GHC.TypeLits.Nat


-- | This module contains everything you need to derive your own singletons
--   via Template Haskell.
--   
--   TURN ON <tt>-XScopedTypeVariables</tt> IN YOUR MODULE IF YOU WANT THIS
--   TO WORK.
module Data.Singletons.TH

-- | Make promoted and singleton versions of all declarations given,
--   retaining the original declarations. See
--   <a>http://www.cis.upenn.edu/~eir/packages/singletons/README.html</a>
--   for further explanation.
singletons :: DsMonad q => q [Dec] -> q [Dec]

-- | Make promoted and singleton versions of all declarations given,
--   discarding the original declarations. Note that a singleton based on a
--   datatype needs the original datatype, so this will fail if it sees any
--   datatype declarations. Classes, instances, and functions are all fine.
singletonsOnly :: DsMonad q => q [Dec] -> q [Dec]

-- | Generate singleton definitions from a type that is already defined.
--   For example, the singletons package itself uses
--   
--   <pre>
--   $(genSingletons [''Bool, ''Maybe, ''Either, ''[]])
--   </pre>
--   
--   to generate singletons for Prelude types.
genSingletons :: DsMonad q => [Name] -> q [Dec]

-- | Promote every declaration given to the type level, retaining the
--   originals.
promote :: DsMonad q => q [Dec] -> q [Dec]

-- | Promote each declaration, discarding the originals. Note that a
--   promoted datatype uses the same definition as an original datatype, so
--   this will not work with datatypes. Classes, instances, and functions
--   are all fine.
promoteOnly :: DsMonad q => q [Dec] -> q [Dec]

-- | Generate defunctionalization symbols for existing type family
genDefunSymbols :: DsMonad q => [Name] -> q [Dec]

-- | Generate promoted definitions from a type that is already defined.
--   This is generally only useful with classes.
genPromotions :: DsMonad q => [Name] -> q [Dec]

-- | Produce instances for '(:==)' (type-level equality) from the given
--   types
promoteEqInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for '(:==)' (type-level equality) from the given
--   type
promoteEqInstance :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SEq</tt> and type-level '(:==)' for each type
--   in the list
singEqInstances :: DsMonad q => [Name] -> q [Dec]

-- | Create instance of <tt>SEq</tt> and type-level '(:==)' for the given
--   type
singEqInstance :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SEq</tt> (only -- no instance for '(:==)',
--   which <tt>SEq</tt> generally relies on) for each type in the list
singEqInstancesOnly :: DsMonad q => [Name] -> q [Dec]

-- | Create instances of <tt>SEq</tt> (only -- no instance for '(:==)',
--   which <tt>SEq</tt> generally relies on) for the given type
singEqInstanceOnly :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SDecide</tt> for each type in the list.
singDecideInstances :: DsMonad q => [Name] -> q [Dec]

-- | Create instance of <tt>SDecide</tt> for the given type.
singDecideInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>POrd</tt> from the given types
promoteOrdInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>POrd</tt> from the given type
promoteOrdInstance :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SOrd</tt> for the given types
singOrdInstances :: DsMonad q => [Name] -> q [Dec]

-- | Create instance of <tt>SOrd</tt> for the given type
singOrdInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>PBounded</tt> from the given types
promoteBoundedInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>PBounded</tt> from the given type
promoteBoundedInstance :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SBounded</tt> for the given types
singBoundedInstances :: DsMonad q => [Name] -> q [Dec]

-- | Create instance of <tt>SBounded</tt> for the given type
singBoundedInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>PEnum</tt> from the given types
promoteEnumInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>PEnum</tt> from the given type
promoteEnumInstance :: DsMonad q => Name -> q [Dec]

-- | Create instances of <tt>SEnum</tt> for the given types
singEnumInstances :: DsMonad q => [Name] -> q [Dec]

-- | Create instance of <tt>SEnum</tt> for the given type
singEnumInstance :: DsMonad q => Name -> q [Dec]

-- | The function <a>cases</a> generates a case expression where each
--   right-hand side is identical. This may be useful if the type-checker
--   requires knowledge of which constructor is used to satisfy equality or
--   type-class constraints, but where each constructor is treated the
--   same.
cases :: DsMonad q => Name -> q Exp -> q Exp -> q Exp

-- | The function <a>sCases</a> generates a case expression where each
--   right-hand side is identical. This may be useful if the type-checker
--   requires knowledge of which constructor is used to satisfy equality or
--   type-class constraints, but where each constructor is treated the
--   same. For <a>sCases</a>, unlike <a>cases</a>, the scrutinee is a
--   singleton. But make sure to pass in the name of the <i>original</i>
--   datatype, preferring <tt>''Maybe</tt> over <tt>''SMaybe</tt>.
sCases :: DsMonad q => Name -> q Exp -> q Exp -> q Exp

-- | The singleton kind-indexed data family.

-- | The promoted analogue of <a>Eq</a>. If you supply no definition for
--   '(:==)', then it defaults to a use of '(==)', from
--   <tt>Data.Type.Equality</tt>.
class kproxy ~ KProxy => PEq (kproxy :: KProxy a) where type family (:==) (x :: a) (y :: a) :: Bool type family (:/=) (x :: a) (y :: a) :: Bool (:==) (x :: a) (y :: a) = x == y (:/=) (x :: a) (y :: a) = Not (x :== y)

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>

-- | Conditional over singletons
sIf :: Sing a -> Sing b -> Sing c -> Sing (If a b c)

-- | The singleton analogue of <a>Eq</a>. Unlike the definition for
--   <a>Eq</a>, it is required that instances define a body for '(%:==)'.
--   You may also supply a body for '(%:/=)'.
class (kparam ~ KProxy) => SEq (kparam :: KProxy k) where a %:/= b = sNot (a %:== b)

-- | Boolean equality on singletons
(%:==) :: SEq kparam => Sing a -> Sing b -> Sing (a :== b)

-- | Boolean disequality on singletons
(%:/=) :: SEq kparam => Sing a -> Sing b -> Sing (a :/= b)
class (PEq (KProxy :: KProxy a_a1LoX), kproxy_a1LxM ~ KProxy) => POrd (kproxy_a1LxM :: KProxy a_a1LoX) where type family Compare (arg_a1LxN :: a_a1LoX) (arg_a1LxO :: a_a1LoX) :: Ordering type family (:<) (arg_a1LxW :: a_a1LoX) (arg_a1LxX :: a_a1LoX) :: Bool type family (:<=) (arg_a1Ly5 :: a_a1LoX) (arg_a1Ly6 :: a_a1LoX) :: Bool type family (:>) (arg_a1Lye :: a_a1LoX) (arg_a1Lyf :: a_a1LoX) :: Bool type family (:>=) (arg_a1Lyn :: a_a1LoX) (arg_a1Lyo :: a_a1LoX) :: Bool type family Max (arg_a1Lyw :: a_a1LoX) (arg_a1Lyx :: a_a1LoX) :: a_a1LoX type family Min (arg_a1LyF :: a_a1LoX) (arg_a1LyG :: a_a1LoX) :: a_a1LoX Compare (a_a1Lzl :: a_a1LoX) (a_a1Lzm :: a_a1LoX) = Apply (Apply Compare_1627811141Sym0 a_a1Lzl) a_a1Lzm (:<) (a_a1LzS :: a_a1LoX) (a_a1LzT :: a_a1LoX) = Apply (Apply TFHelper_1627811174Sym0 a_a1LzS) a_a1LzT (:<=) (a_a1LAp :: a_a1LoX) (a_a1LAq :: a_a1LoX) = Apply (Apply TFHelper_1627811207Sym0 a_a1LAp) a_a1LAq (:>) (a_a1LAW :: a_a1LoX) (a_a1LAX :: a_a1LoX) = Apply (Apply TFHelper_1627811240Sym0 a_a1LAW) a_a1LAX (:>=) (a_a1LBt :: a_a1LoX) (a_a1LBu :: a_a1LoX) = Apply (Apply TFHelper_1627811273Sym0 a_a1LBt) a_a1LBu Max (a_a1LC0 :: a_a1LoX) (a_a1LC1 :: a_a1LoX) = Apply (Apply Max_1627811306Sym0 a_a1LC0) a_a1LC1 Min (a_a1LCx :: a_a1LoX) (a_a1LCy :: a_a1LoX) = Apply (Apply Min_1627811339Sym0 a_a1LCx) a_a1LCy
class (SEq (KProxy :: KProxy a_a1LoX), kproxy_a1LDB ~ KProxy) => SOrd (kproxy_a1LDB :: KProxy a_a1LoX) where sCompare sX sY = let lambda_a1LCW :: forall x_a1LyX y_a1LyY. (t_a1LCI ~ x_a1LyX, t_a1LCJ ~ y_a1LyY) => Sing x_a1LyX -> Sing y_a1LyY -> Sing (Apply (Apply CompareSym0 x_a1LyX) y_a1LyY :: Ordering) lambda_a1LCW x_a1LCX y_a1LCY = let sScrutinee_1627810510 :: Sing (Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY) sScrutinee_1627810510 = applySing (applySing (singFun2 (Proxy :: Proxy (:==$)) (%:==)) x_a1LCX) y_a1LCY in  case sScrutinee_1627810510 of { STrue -> let lambda_a1LCZ :: TrueSym0 ~ Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811125 x_a1LyX y_a1LyY TrueSym0) lambda_a1LCZ = SEQ in lambda_a1LCZ SFalse -> let lambda_a1LD0 :: FalseSym0 ~ Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811125 x_a1LyX y_a1LyY FalseSym0) lambda_a1LD0 = let sScrutinee_1627810512 :: Sing (Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY) sScrutinee_1627810512 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LCX) y_a1LCY in  case sScrutinee_1627810512 of { STrue -> let lambda_a1LD1 :: TrueSym0 ~ Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811135 x_a1LyX y_a1LyY TrueSym0) lambda_a1LD1 = SLT in lambda_a1LD1 SFalse -> let lambda_a1LD2 :: FalseSym0 ~ Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY => Sing (Case_1627811135 x_a1LyX y_a1LyY FalseSym0) lambda_a1LD2 = SGT in lambda_a1LD2 } :: Sing (Case_1627811135 x_a1LyX y_a1LyY (Let1627811127Scrutinee_1627810512Sym2 x_a1LyX y_a1LyY)) in lambda_a1LD0 } :: Sing (Case_1627811125 x_a1LyX y_a1LyY (Let1627811117Scrutinee_1627810510Sym2 x_a1LyX y_a1LyY)) in lambda_a1LCW sX sY (%:<) sX sY = let lambda_a1LD3 :: forall x_a1LzF y_a1LzG. (t_a1LCK ~ x_a1LzF, t_a1LCL ~ y_a1LzG) => Sing x_a1LzF -> Sing y_a1LzG -> Sing (Apply (Apply (:<$) x_a1LzF) y_a1LzG :: Bool) lambda_a1LD3 x_a1LD4 y_a1LD5 = let sScrutinee_1627810514 :: Sing (Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG) sScrutinee_1627810514 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LD4) y_a1LD5 in  case sScrutinee_1627810514 of { SLT -> let lambda_a1LD6 :: LTSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG LTSym0) lambda_a1LD6 = STrue in lambda_a1LD6 SEQ -> let lambda_a1LD7 :: EQSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG EQSym0) lambda_a1LD7 = SFalse in lambda_a1LD7 SGT -> let lambda_a1LD8 :: GTSym0 ~ Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG => Sing (Case_1627811169 x_a1LzF y_a1LzG GTSym0) lambda_a1LD8 = SFalse in lambda_a1LD8 } :: Sing (Case_1627811169 x_a1LzF y_a1LzG (Let1627811161Scrutinee_1627810514Sym2 x_a1LzF y_a1LzG)) in lambda_a1LD3 sX sY (%:<=) sX sY = let lambda_a1LD9 :: forall x_a1LAc y_a1LAd. (t_a1LCM ~ x_a1LAc, t_a1LCN ~ y_a1LAd) => Sing x_a1LAc -> Sing y_a1LAd -> Sing (Apply (Apply (:<=$) x_a1LAc) y_a1LAd :: Bool) lambda_a1LD9 x_a1LDa y_a1LDb = let sScrutinee_1627810516 :: Sing (Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd) sScrutinee_1627810516 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDa) y_a1LDb in  case sScrutinee_1627810516 of { SLT -> let lambda_a1LDc :: LTSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd LTSym0) lambda_a1LDc = STrue in lambda_a1LDc SEQ -> let lambda_a1LDd :: EQSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd EQSym0) lambda_a1LDd = STrue in lambda_a1LDd SGT -> let lambda_a1LDe :: GTSym0 ~ Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd => Sing (Case_1627811202 x_a1LAc y_a1LAd GTSym0) lambda_a1LDe = SFalse in lambda_a1LDe } :: Sing (Case_1627811202 x_a1LAc y_a1LAd (Let1627811194Scrutinee_1627810516Sym2 x_a1LAc y_a1LAd)) in lambda_a1LD9 sX sY (%:>) sX sY = let lambda_a1LDf :: forall x_a1LAJ y_a1LAK. (t_a1LCO ~ x_a1LAJ, t_a1LCP ~ y_a1LAK) => Sing x_a1LAJ -> Sing y_a1LAK -> Sing (Apply (Apply (:>$) x_a1LAJ) y_a1LAK :: Bool) lambda_a1LDf x_a1LDg y_a1LDh = let sScrutinee_1627810518 :: Sing (Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK) sScrutinee_1627810518 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDg) y_a1LDh in  case sScrutinee_1627810518 of { SLT -> let lambda_a1LDi :: LTSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK LTSym0) lambda_a1LDi = SFalse in lambda_a1LDi SEQ -> let lambda_a1LDj :: EQSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK EQSym0) lambda_a1LDj = SFalse in lambda_a1LDj SGT -> let lambda_a1LDk :: GTSym0 ~ Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK => Sing (Case_1627811235 x_a1LAJ y_a1LAK GTSym0) lambda_a1LDk = STrue in lambda_a1LDk } :: Sing (Case_1627811235 x_a1LAJ y_a1LAK (Let1627811227Scrutinee_1627810518Sym2 x_a1LAJ y_a1LAK)) in lambda_a1LDf sX sY (%:>=) sX sY = let lambda_a1LDl :: forall x_a1LBg y_a1LBh. (t_a1LCQ ~ x_a1LBg, t_a1LCR ~ y_a1LBh) => Sing x_a1LBg -> Sing y_a1LBh -> Sing (Apply (Apply (:>=$) x_a1LBg) y_a1LBh :: Bool) lambda_a1LDl x_a1LDm y_a1LDn = let sScrutinee_1627810520 :: Sing (Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh) sScrutinee_1627810520 = applySing (applySing (singFun2 (Proxy :: Proxy CompareSym0) sCompare) x_a1LDm) y_a1LDn in  case sScrutinee_1627810520 of { SLT -> let lambda_a1LDo :: LTSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh LTSym0) lambda_a1LDo = SFalse in lambda_a1LDo SEQ -> let lambda_a1LDp :: EQSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh EQSym0) lambda_a1LDp = STrue in lambda_a1LDp SGT -> let lambda_a1LDq :: GTSym0 ~ Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh => Sing (Case_1627811268 x_a1LBg y_a1LBh GTSym0) lambda_a1LDq = STrue in lambda_a1LDq } :: Sing (Case_1627811268 x_a1LBg y_a1LBh (Let1627811260Scrutinee_1627810520Sym2 x_a1LBg y_a1LBh)) in lambda_a1LDl sX sY sMax sX sY = let lambda_a1LDr :: forall x_a1LBN y_a1LBO. (t_a1LCS ~ x_a1LBN, t_a1LCT ~ y_a1LBO) => Sing x_a1LBN -> Sing y_a1LBO -> Sing (Apply (Apply MaxSym0 x_a1LBN) y_a1LBO :: a_a1LoX) lambda_a1LDr x_a1LDs y_a1LDt = let sScrutinee_1627810522 :: Sing (Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO) sScrutinee_1627810522 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LDs) y_a1LDt in  case sScrutinee_1627810522 of { STrue -> let lambda_a1LDu :: TrueSym0 ~ Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO => Sing (Case_1627811301 x_a1LBN y_a1LBO TrueSym0) lambda_a1LDu = y_a1LDt in lambda_a1LDu SFalse -> let lambda_a1LDv :: FalseSym0 ~ Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO => Sing (Case_1627811301 x_a1LBN y_a1LBO FalseSym0) lambda_a1LDv = x_a1LDs in lambda_a1LDv } :: Sing (Case_1627811301 x_a1LBN y_a1LBO (Let1627811293Scrutinee_1627810522Sym2 x_a1LBN y_a1LBO)) in lambda_a1LDr sX sY sMin sX sY = let lambda_a1LDw :: forall x_a1LCk y_a1LCl. (t_a1LCU ~ x_a1LCk, t_a1LCV ~ y_a1LCl) => Sing x_a1LCk -> Sing y_a1LCl -> Sing (Apply (Apply MinSym0 x_a1LCk) y_a1LCl :: a_a1LoX) lambda_a1LDw x_a1LDx y_a1LDy = let sScrutinee_1627810524 :: Sing (Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl) sScrutinee_1627810524 = applySing (applySing (singFun2 (Proxy :: Proxy (:<=$)) (%:<=)) x_a1LDx) y_a1LDy in  case sScrutinee_1627810524 of { STrue -> let lambda_a1LDz :: TrueSym0 ~ Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl => Sing (Case_1627811334 x_a1LCk y_a1LCl TrueSym0) lambda_a1LDz = x_a1LDx in lambda_a1LDz SFalse -> let lambda_a1LDA :: FalseSym0 ~ Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl => Sing (Case_1627811334 x_a1LCk y_a1LCl FalseSym0) lambda_a1LDA = y_a1LDy in lambda_a1LDA } :: Sing (Case_1627811334 x_a1LCk y_a1LCl (Let1627811326Scrutinee_1627810524Sym2 x_a1LCk y_a1LCl)) in lambda_a1LDw sX sY
sCompare :: SOrd kproxy_a1LDB => Sing t_a1LCI -> Sing t_a1LCJ -> Sing (Apply (Apply CompareSym0 t_a1LCI) t_a1LCJ :: Ordering)
(%:<) :: SOrd kproxy_a1LDB => Sing t_a1LCK -> Sing t_a1LCL -> Sing (Apply (Apply (:<$) t_a1LCK) t_a1LCL :: Bool)
(%:<=) :: SOrd kproxy_a1LDB => Sing t_a1LCM -> Sing t_a1LCN -> Sing (Apply (Apply (:<=$) t_a1LCM) t_a1LCN :: Bool)
(%:>) :: SOrd kproxy_a1LDB => Sing t_a1LCO -> Sing t_a1LCP -> Sing (Apply (Apply (:>$) t_a1LCO) t_a1LCP :: Bool)
(%:>=) :: SOrd kproxy_a1LDB => Sing t_a1LCQ -> Sing t_a1LCR -> Sing (Apply (Apply (:>=$) t_a1LCQ) t_a1LCR :: Bool)
sMax :: SOrd kproxy_a1LDB => Sing t_a1LCS -> Sing t_a1LCT -> Sing (Apply (Apply MaxSym0 t_a1LCS) t_a1LCT :: a_a1LoX)
sMin :: SOrd kproxy_a1LDB => Sing t_a1LCU -> Sing t_a1LCV -> Sing (Apply (Apply MinSym0 t_a1LCU) t_a1LCV :: a_a1LoX)
sThenCmp :: Sing t_a1NJy -> Sing t_a1NJz -> Sing (Apply (Apply ThenCmpSym0 t_a1NJy) t_a1NJz :: Ordering)
sFoldl :: Sing t_a1w3y -> Sing t_a1w3z -> Sing t_a1w3A -> Sing (Apply (Apply (Apply FoldlSym0 t_a1w3y) t_a1w3z) t_a1w3A :: b_a1w2A)

-- | The type constructor <tt>Any</tt> is type to which you can unsafely
--   coerce any lifted type, and back.
--   
--   <ul>
--   <li>It is lifted, and hence represented by a pointer</li>
--   <li>It does not claim to be a <i>data</i> type, and that's important
--   for the code generator, because the code gen may <i>enter</i> a data
--   value but never enters a function value.</li>
--   </ul>
--   
--   It's also used to instantiate un-constrained type variables after type
--   checking. For example, <tt>length</tt> has type
--   
--   <pre>
--   length :: forall a. [a] -&gt; Int
--   </pre>
--   
--   and the list datacon for the empty list has type
--   
--   <pre>
--   [] :: forall a. [a]
--   </pre>
--   
--   In order to compose these two terms as <tt>length []</tt> a type
--   application is required, but there is no constraint on the choice. In
--   this situation GHC uses <tt>Any</tt>:
--   
--   <pre>
--   length (Any *) ([] (Any *))
--   </pre>
--   
--   Above, we print kinds explicitly, as if with
--   <tt>-fprint-explicit-kinds</tt>.
--   
--   Note that <tt>Any</tt> is kind polymorphic; its kind is thus
--   <tt>forall k. k</tt>.

-- | Members of the <a>SDecide</a> "kind" class support decidable equality.
--   Instances of this class are generated alongside singleton definitions
--   for datatypes that derive an <a>Eq</a> instance.
class (kparam ~ KProxy) => SDecide (kparam :: KProxy k)

-- | Compute a proof or disproof of equality, given two singletons.
(%~) :: SDecide kparam => Sing a -> Sing b -> Decision (a :~: b)

-- | Propositional equality. If <tt>a :~: b</tt> is inhabited by some
--   terminating value, then the type <tt>a</tt> is the same as the type
--   <tt>b</tt>. To use this equality in practice, pattern-match on the
--   <tt>a :~: b</tt> to get out the <tt>Refl</tt> constructor; in the body
--   of the pattern-match, the compiler knows that <tt>a ~ b</tt>.
data (:~:) (a :: k) (b :: k) :: k -> k -> *
Refl :: (:~:) k b b

-- | Uninhabited data type
data Void :: *

-- | Because we can never create a value of type <a>Void</a>, a function
--   that type-checks at <tt>a -&gt; Void</tt> shows that objects of type
--   <tt>a</tt> can never exist. Thus, we say that <tt>a</tt> is
--   <a>Refuted</a>
type Refuted a = a -> Void

-- | A <a>Decision</a> about a type <tt>a</tt> is either a proof of
--   existence or a proof that <tt>a</tt> cannot exist.
data Decision a

-- | Witness for <tt>a</tt>
Proved :: a -> Decision a

-- | Proof that no <tt>a</tt> exists
Disproved :: (Refuted a) -> Decision a

-- | A concrete, poly-kinded proxy type
data Proxy (t :: k) :: k -> *
Proxy :: Proxy

-- | A concrete, promotable proxy type, for use at the kind level There are
--   no instances for this because it is intended at the kind level only
data KProxy t :: * -> *
KProxy :: KProxy t

-- | An <i>existentially-quantified</i> singleton. This type is useful when
--   you want a singleton type, but there is no way of knowing, at
--   compile-time, what the type index will be. To make use of this type,
--   you will generally have to use a pattern-match:
--   
--   <pre>
--   foo :: Bool -&gt; ...
--   foo b = case toSing b of
--             SomeSing sb -&gt; {- fancy dependently-typed code with sb -}
--   </pre>
--   
--   An example like the one above may be easier to write using
--   <a>withSomeSing</a>.
data SomeSing (kproxy :: KProxy k)
SomeSing :: Sing (a :: k) -> SomeSing (KProxy :: KProxy k)

-- | The promotion of <a>error</a>. This version is more poly-kinded for
--   easier use.
data ErrorSym0 (l_a27XX :: TyFun k0_a27Iz k_a27Iy)
type TrueSym0 = True
type FalseSym0 = False
type LTSym0 = LT
type EQSym0 = EQ
type GTSym0 = GT
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data CompareSym0 (l_a1LxR :: TyFun a_a1LoX (TyFun a_a1LoX Ordering -> *))
data ThenCmpSym0 (l_a1NJk :: TyFun Ordering (TyFun Ordering Ordering -> *))
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))

-- | This class (which users should never see) is to be instantiated in
--   order to use an otherwise-unused data constructor, such as the
--   "kind-inference" data constructor for defunctionalization symbols.
class SuppressUnusedWarnings (t :: k)
suppressUnusedWarnings :: SuppressUnusedWarnings t => Proxy t -> ()


-- | Defines functions and datatypes relating to the singleton for
--   <a>Either</a>, including a singletons version of all the definitions
--   in <tt>Data.Either</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Either</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Singletons.Prelude.Either

-- | The singleton kind-indexed data family.
type SEither = (Sing :: Either a_a9Wj b_a9Wk -> *)
either_ :: (a_a2cSh -> c_a2cSi) -> (b_a2cSj -> c_a2cSi) -> Either a_a2cSh b_a2cSj -> c_a2cSi
sEither_ :: Sing t_a2cSO -> Sing t_a2cSP -> Sing t_a2cSQ -> Sing (Apply (Apply (Apply Either_Sym0 t_a2cSO) t_a2cSP) t_a2cSQ :: c_a2cSi)
sLefts :: Sing t_a2dgl -> Sing (Apply LeftsSym0 t_a2dgl :: [a_a2dez])
sRights :: Sing t_a2dgk -> Sing (Apply RightsSym0 t_a2dgk :: [b_a2deF])
sPartitionEithers :: Sing t_a2dgj -> Sing (Apply PartitionEithersSym0 t_a2dgj :: ([a_a2deJ], [b_a2deK]))
sIsLeft :: Sing t_a2dgi -> Sing (Apply IsLeftSym0 t_a2dgi :: Bool)
sIsRight :: Sing t_a2dgh -> Sing (Apply IsRightSym0 t_a2dgh :: Bool)
data LeftSym0 (l_a1sRy :: TyFun a_a9Wj (Either a_a9Wj b_a9Wk))
type LeftSym1 (t_a1sRx :: a_a9Wj) = Left t_a1sRx
data RightSym0 (l_a1sRB :: TyFun b_a9Wk (Either a_a9Wj b_a9Wk))
type RightSym1 (t_a1sRA :: b_a9Wk) = Right t_a1sRA
data Either_Sym0 (l_a2cSs :: TyFun (TyFun a_a2cSh c_a2cSi -> *) (TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *) -> *))
data Either_Sym1 (l_a2cSv :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSu :: TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *))
data Either_Sym2 (l_a2cSy :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSz :: TyFun b_a2cSj c_a2cSi -> *) (l_a2cSx :: TyFun (Either a_a2cSh b_a2cSj) c_a2cSi)
type Either_Sym3 (t_a2cSp :: TyFun a_a2cSh c_a2cSi -> *) (t_a2cSq :: TyFun b_a2cSj c_a2cSi -> *) (t_a2cSr :: Either a_a2cSh b_a2cSj) = Either_ t_a2cSp t_a2cSq t_a2cSr
data LeftsSym0 (l_a2dg8 :: TyFun [Either a_a2dez b_a2deA] [a_a2dez])
type LeftsSym1 (t_a2dg7 :: [Either a_a2dez b_a2deA]) = Lefts t_a2dg7
data RightsSym0 (l_a2dfY :: TyFun [Either a_a2deE b_a2deF] [b_a2deF])
type RightsSym1 (t_a2dfX :: [Either a_a2deE b_a2deF]) = Rights t_a2dfX
data IsLeftSym0 (l_a2df8 :: TyFun (Either a_a2deT b_a2deU) Bool)
type IsLeftSym1 (t_a2df7 :: Either a_a2deT b_a2deU) = IsLeft t_a2df7
data IsRightSym0 (l_a2deY :: TyFun (Either a_a2deV b_a2deW) Bool)
type IsRightSym1 (t_a2deX :: Either a_a2deV b_a2deW) = IsRight t_a2deX
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534RightSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534RightSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534RightSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534LeftSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534LeftSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Let1627917534LeftSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.IsRightSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.IsLeftSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.PartitionEithersSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.RightsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.LeftsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Either_Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Either_Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Either.Either_Sym0


-- | Defines promoted functions and datatypes relating to <a>Either</a>,
--   including a promoted version of all the definitions in
--   <tt>Data.Either</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Either</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Promotion.Prelude.Either
either_ :: (a_a2cSh -> c_a2cSi) -> (b_a2cSj -> c_a2cSi) -> Either a_a2cSh b_a2cSj -> c_a2cSi
data LeftSym0 (l_a1sRy :: TyFun a_a9Wj (Either a_a9Wj b_a9Wk))
type LeftSym1 (t_a1sRx :: a_a9Wj) = Left t_a1sRx
data RightSym0 (l_a1sRB :: TyFun b_a9Wk (Either a_a9Wj b_a9Wk))
type RightSym1 (t_a1sRA :: b_a9Wk) = Right t_a1sRA
data Either_Sym0 (l_a2cSs :: TyFun (TyFun a_a2cSh c_a2cSi -> *) (TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *) -> *))
data Either_Sym1 (l_a2cSv :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSu :: TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *))
data Either_Sym2 (l_a2cSy :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSz :: TyFun b_a2cSj c_a2cSi -> *) (l_a2cSx :: TyFun (Either a_a2cSh b_a2cSj) c_a2cSi)
type Either_Sym3 (t_a2cSp :: TyFun a_a2cSh c_a2cSi -> *) (t_a2cSq :: TyFun b_a2cSj c_a2cSi -> *) (t_a2cSr :: Either a_a2cSh b_a2cSj) = Either_ t_a2cSp t_a2cSq t_a2cSr
data LeftsSym0 (l_a2dg8 :: TyFun [Either a_a2dez b_a2deA] [a_a2dez])
type LeftsSym1 (t_a2dg7 :: [Either a_a2dez b_a2deA]) = Lefts t_a2dg7
data RightsSym0 (l_a2dfY :: TyFun [Either a_a2deE b_a2deF] [b_a2deF])
type RightsSym1 (t_a2dfX :: [Either a_a2deE b_a2deF]) = Rights t_a2dfX
data IsLeftSym0 (l_a2df8 :: TyFun (Either a_a2deT b_a2deU) Bool)
type IsLeftSym1 (t_a2df7 :: Either a_a2deT b_a2deU) = IsLeft t_a2df7
data IsRightSym0 (l_a2deY :: TyFun (Either a_a2deV b_a2deW) Bool)
type IsRightSym1 (t_a2deX :: Either a_a2deV b_a2deW) = IsRight t_a2deX


-- | Defines functions and datatypes relating to the singleton for tuples,
--   including a singletons version of all the definitions in
--   <tt>Data.Tuple</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Tuple</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Singletons.Prelude.Tuple

-- | The singleton kind-indexed data family.
type STuple0 = (Sing :: () -> *)
type STuple2 = (Sing :: (a_12, b_13) -> *)
type STuple3 = (Sing :: (a_12, b_13, c_14) -> *)
type STuple4 = (Sing :: (a_12, b_13, c_14, d_15) -> *)
type STuple5 = (Sing :: (a_12, b_13, c_14, d_15, e_16) -> *)
type STuple6 = (Sing :: (a_12, b_13, c_14, d_15, e_16, f_17) -> *)
type STuple7 = (Sing :: (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *)
sFst :: Sing t_a2fDt -> Sing (Apply FstSym0 t_a2fDt :: a_a2fCd)
sSnd :: Sing t_a2fDs -> Sing (Apply SndSym0 t_a2fDs :: b_a2fCh)
sCurry :: Sing t_a2fDp -> Sing t_a2fDq -> Sing t_a2fDr -> Sing (Apply (Apply (Apply CurrySym0 t_a2fDp) t_a2fDq) t_a2fDr :: c_a2fCl)
sUncurry :: Sing t_a2fDu -> Sing t_a2fDv -> Sing (Apply (Apply UncurrySym0 t_a2fDu) t_a2fDv :: c_a2fCr)
sSwap :: Sing t_a2fDo -> Sing (Apply SwapSym0 t_a2fDo :: (b_a2fCv, a_a2fCu))
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data FstSym0 (l_a2fD6 :: TyFun (a_a2fCd, b_a2fCe) a_a2fCd)
type FstSym1 (t_a2fD5 :: (a_a2fCd, b_a2fCe)) = Fst t_a2fD5
data SndSym0 (l_a2fCY :: TyFun (a_a2fCg, b_a2fCh) b_a2fCh)
type SndSym1 (t_a2fCX :: (a_a2fCg, b_a2fCh)) = Snd t_a2fCX
data CurrySym0 (l_a2fCI :: TyFun (TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *) -> *))
data CurrySym1 (l_a2fCL :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCK :: TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *))
data CurrySym2 (l_a2fCO :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCP :: a_a2fCj) (l_a2fCN :: TyFun b_a2fCk c_a2fCl)
type CurrySym3 (t_a2fCF :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (t_a2fCG :: a_a2fCj) (t_a2fCH :: b_a2fCk) = Curry t_a2fCF t_a2fCG t_a2fCH
data UncurrySym0 (l_a2fDf :: TyFun (TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (TyFun (a_a2fCp, b_a2fCq) c_a2fCr -> *))
data UncurrySym1 (l_a2fDi :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (l_a2fDh :: TyFun (a_a2fCp, b_a2fCq) c_a2fCr)
type UncurrySym2 (t_a2fDd :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (t_a2fDe :: (a_a2fCp, b_a2fCq)) = Uncurry t_a2fDd t_a2fDe
data SwapSym0 (l_a2fCA :: TyFun (a_a2fCu, b_a2fCv) (b_a2fCv, a_a2fCu))
type SwapSym1 (t_a2fCz :: (a_a2fCu, b_a2fCv)) = Swap t_a2fCz
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.SwapSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.CurrySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.CurrySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.CurrySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.SndSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.FstSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.UncurrySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Tuple.UncurrySym0


-- | Defines promoted functions and datatypes relating to tuples, including
--   a promoted version of all the definitions in <tt>Data.Tuple</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Tuple</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Promotion.Prelude.Tuple
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data FstSym0 (l_a2fD6 :: TyFun (a_a2fCd, b_a2fCe) a_a2fCd)
type FstSym1 (t_a2fD5 :: (a_a2fCd, b_a2fCe)) = Fst t_a2fD5
data SndSym0 (l_a2fCY :: TyFun (a_a2fCg, b_a2fCh) b_a2fCh)
type SndSym1 (t_a2fCX :: (a_a2fCg, b_a2fCh)) = Snd t_a2fCX
data CurrySym0 (l_a2fCI :: TyFun (TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *) -> *))
data CurrySym1 (l_a2fCL :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCK :: TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *))
data CurrySym2 (l_a2fCO :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCP :: a_a2fCj) (l_a2fCN :: TyFun b_a2fCk c_a2fCl)
type CurrySym3 (t_a2fCF :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (t_a2fCG :: a_a2fCj) (t_a2fCH :: b_a2fCk) = Curry t_a2fCF t_a2fCG t_a2fCH
data UncurrySym0 (l_a2fDf :: TyFun (TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (TyFun (a_a2fCp, b_a2fCq) c_a2fCr -> *))
data UncurrySym1 (l_a2fDi :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (l_a2fDh :: TyFun (a_a2fCp, b_a2fCq) c_a2fCr)
type UncurrySym2 (t_a2fDd :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (t_a2fDe :: (a_a2fCp, b_a2fCq)) = Uncurry t_a2fDd t_a2fDe
data SwapSym0 (l_a2fCA :: TyFun (a_a2fCu, b_a2fCv) (b_a2fCv, a_a2fCu))
type SwapSym1 (t_a2fCz :: (a_a2fCu, b_a2fCv)) = Swap t_a2fCz


-- | Implements promoted functions from GHC.Base module.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Prelude</tt>. Also, please excuse
--   the apparent repeated variable names. This is due to an interaction
--   between Template Haskell and Haddock.
module Data.Promotion.Prelude.Base
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
type (:++$$$) (t_a24tf :: [a_a24r7]) (t_a24tg :: [a_a24r7]) = (:++) t_a24tf t_a24tg
type OtherwiseSym0 = Otherwise
data IdSym0 (l_a24tb :: TyFun a_a24rc a_a24rc)
type IdSym1 (t_a24ta :: a_a24rc) = Id t_a24ta
data ConstSym0 (l_a24sK :: TyFun a_a24re (TyFun b_a24rf a_a24re -> *))
data ConstSym1 (l_a24sN :: a_a24re) (l_a24sM :: TyFun b_a24rf a_a24re)
type ConstSym2 (t_a24sI :: a_a24re) (t_a24sJ :: b_a24rf) = Const t_a24sI t_a24sJ
data (:.$) (l_a24s5 :: TyFun (TyFun b_a24rh c_a24ri -> *) (TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *) -> *))
data (:.$$) (l_a24s8 :: TyFun b_a24rh c_a24ri -> *) (l_a24s7 :: TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *))
data (:.$$$) (l_a24sb :: TyFun b_a24rh c_a24ri -> *) (l_a24sc :: TyFun a_a24rj b_a24rh -> *) (l_a24sa :: TyFun a_a24rj c_a24ri)
type (:.$$$$) (t_a24s2 :: TyFun b_a24rh c_a24ri -> *) (t_a24s3 :: TyFun a_a24rj b_a24rh -> *) (t_a24s4 :: a_a24rj) = (:.) t_a24s2 t_a24s3 t_a24s4
data ($$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($$$$) a b = ($) a b
data ($!$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($!$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($!$$$) a b = ($!) a b
data FlipSym0 (l_a24rN :: TyFun (TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *) -> *))
data FlipSym1 (l_a24rQ :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rP :: TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *))
data FlipSym2 (l_a24rT :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rU :: b_a24ro) (l_a24rS :: TyFun a_a24rn c_a24rp)
type FlipSym3 (t_a24rK :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (t_a24rL :: b_a24ro) (t_a24rM :: a_a24rn) = Flip t_a24rK t_a24rL t_a24rM
data UntilSym0 (l_a2gKI :: TyFun (TyFun a_a2gKy Bool -> *) (TyFun (TyFun a_a2gKy a_a2gKy -> *) (TyFun a_a2gKy a_a2gKy -> *) -> *))
data UntilSym1 (l_a2gKL :: TyFun a_a2gKy Bool -> *) (l_a2gKK :: TyFun (TyFun a_a2gKy a_a2gKy -> *) (TyFun a_a2gKy a_a2gKy -> *))
data UntilSym2 (l_a2gKO :: TyFun a_a2gKy Bool -> *) (l_a2gKP :: TyFun a_a2gKy a_a2gKy -> *) (l_a2gKN :: TyFun a_a2gKy a_a2gKy)
type UntilSym3 (t_a2gKF :: TyFun a_a2gKy Bool -> *) (t_a2gKG :: TyFun a_a2gKy a_a2gKy -> *) (t_a2gKH :: a_a2gKy) = Until t_a2gKF t_a2gKG t_a2gKH
data AsTypeOfSym0 (l_a24t1 :: TyFun a_a24rt (TyFun a_a24rt a_a24rt -> *))
data AsTypeOfSym1 (l_a24t4 :: a_a24rt) (l_a24t3 :: TyFun a_a24rt a_a24rt)
type AsTypeOfSym2 (t_a24sZ :: a_a24rt) (t_a24t0 :: a_a24rt) = AsTypeOf t_a24sZ t_a24t0
data SeqSym0 (l_a24rz :: TyFun a_a24ru (TyFun b_a24rv b_a24rv -> *))
data SeqSym1 (l_a24rC :: a_a24ru) (l_a24rB :: TyFun b_a24rv b_a24rv)
type SeqSym2 (t_a24rx :: a_a24ru) (t_a24ry :: b_a24rv) = Seq t_a24rx t_a24ry
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.Let1627931025GoSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.Let1627931025GoSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.Let1627931025GoSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.Let1627931025GoSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.UntilSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.UntilSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.Base.UntilSym0


-- | Defines functions and datatypes relating to the singleton for
--   <a>Maybe</a>, including a singletons version of all the definitions in
--   <tt>Data.Maybe</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Maybe</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Singletons.Prelude.Maybe

-- | The singleton kind-indexed data family.
type SMaybe = (Sing :: Maybe a_a7tJ -> *)
maybe_ :: b_a2hlg -> (a_a2hlh -> b_a2hlg) -> Maybe a_a2hlh -> b_a2hlg
sMaybe_ :: Sing t_a2hlR -> Sing t_a2hlS -> Sing t_a2hlT -> Sing (Apply (Apply (Apply Maybe_Sym0 t_a2hlR) t_a2hlS) t_a2hlT :: b_a2hlg)
sIsJust :: Sing t_a2hJ1 -> Sing (Apply IsJustSym0 t_a2hJ1 :: Bool)
sIsNothing :: Sing t_a2hJ0 -> Sing (Apply IsNothingSym0 t_a2hJ0 :: Bool)
sFromJust :: Sing t_a2hIZ -> Sing (Apply FromJustSym0 t_a2hIZ :: a_a2hGU)
sFromMaybe :: Sing t_a2hIX -> Sing t_a2hIY -> Sing (Apply (Apply FromMaybeSym0 t_a2hIX) t_a2hIY :: a_a2hGW)
sListToMaybe :: Sing t_a2hIV -> Sing (Apply ListToMaybeSym0 t_a2hIV :: Maybe a_a2hH2)
sMaybeToList :: Sing t_a2hIW -> Sing (Apply MaybeToListSym0 t_a2hIW :: [a_a2hH0])
sCatMaybes :: Sing t_a2hIU -> Sing (Apply CatMaybesSym0 t_a2hIU :: [a_a2hH4])
sMapMaybe :: Sing t_a2hIS -> Sing t_a2hIT -> Sing (Apply (Apply MapMaybeSym0 t_a2hIS) t_a2hIT :: [b_a2hH9])
type NothingSym0 = Nothing
data JustSym0 (l_a1sR7 :: TyFun a_a7tJ (Maybe a_a7tJ))
type JustSym1 (t_a1sR6 :: a_a7tJ) = Just t_a1sR6
data Maybe_Sym0 (l_a2hlw :: TyFun b_a2hlg (TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *) -> *))
data Maybe_Sym1 (l_a2hlz :: b_a2hlg) (l_a2hly :: TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *))
data Maybe_Sym2 (l_a2hlC :: b_a2hlg) (l_a2hlD :: TyFun a_a2hlh b_a2hlg -> *) (l_a2hlB :: TyFun (Maybe a_a2hlh) b_a2hlg)
type Maybe_Sym3 (t_a2hlt :: b_a2hlg) (t_a2hlu :: TyFun a_a2hlh b_a2hlg -> *) (t_a2hlv :: Maybe a_a2hlh) = Maybe_ t_a2hlt t_a2hlu t_a2hlv
data IsJustSym0 (l_a2hIM :: TyFun (Maybe a_a2hGS) Bool)
type IsJustSym1 (t_a2hIL :: Maybe a_a2hGS) = IsJust t_a2hIL
data IsNothingSym0 (l_a2hIF :: TyFun (Maybe a_a2hGT) Bool)
type IsNothingSym1 (t_a2hIE :: Maybe a_a2hGT) = IsNothing t_a2hIE
data FromJustSym0 (l_a2hIA :: TyFun (Maybe a_a2hGU) a_a2hGU)
type FromJustSym1 (t_a2hIz :: Maybe a_a2hGU) = FromJust t_a2hIz
data FromMaybeSym0 (l_a2hIm :: TyFun a_a2hGW (TyFun (Maybe a_a2hGW) a_a2hGW -> *))
data FromMaybeSym1 (l_a2hIp :: a_a2hGW) (l_a2hIo :: TyFun (Maybe a_a2hGW) a_a2hGW)
type FromMaybeSym2 (t_a2hIk :: a_a2hGW) (t_a2hIl :: Maybe a_a2hGW) = FromMaybe t_a2hIk t_a2hIl
data ListToMaybeSym0 (l_a2hI8 :: TyFun [a_a2hH2] (Maybe a_a2hH2))
type ListToMaybeSym1 (t_a2hI7 :: [a_a2hH2]) = ListToMaybe t_a2hI7
data MaybeToListSym0 (l_a2hIg :: TyFun (Maybe a_a2hH0) [a_a2hH0])
type MaybeToListSym1 (t_a2hIf :: Maybe a_a2hH0) = MaybeToList t_a2hIf
data CatMaybesSym0 (l_a2hI1 :: TyFun [Maybe a_a2hH4] [a_a2hH4])
type CatMaybesSym1 (t_a2hI0 :: [Maybe a_a2hH4]) = CatMaybes t_a2hI0
data MapMaybeSym0 (l_a2hHj :: TyFun (TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (TyFun [a_a2hH8] [b_a2hH9] -> *))
data MapMaybeSym1 (l_a2hHm :: TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (l_a2hHl :: TyFun [a_a2hH8] [b_a2hH9])
type MapMaybeSym2 (t_a2hHh :: TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (t_a2hHi :: [a_a2hH8]) = MapMaybe t_a2hHh t_a2hHi
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934654RsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934654RsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934654RsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934667Scrutinee_1627934637Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934667Scrutinee_1627934637Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Let1627934667Scrutinee_1627934637Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.MapMaybeSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.MapMaybeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.CatMaybesSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.ListToMaybeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.MaybeToListSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.FromMaybeSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.FromMaybeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.FromJustSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.IsNothingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.IsJustSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Maybe_Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Maybe_Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Maybe.Maybe_Sym0


-- | Defines promoted functions and datatypes relating to <a>Maybe</a>,
--   including a promoted version of all the definitions in
--   <tt>Data.Maybe</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.Maybe</tt>. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Promotion.Prelude.Maybe
maybe_ :: b_a2hlg -> (a_a2hlh -> b_a2hlg) -> Maybe a_a2hlh -> b_a2hlg
type NothingSym0 = Nothing
data JustSym0 (l_a1sR7 :: TyFun a_a7tJ (Maybe a_a7tJ))
type JustSym1 (t_a1sR6 :: a_a7tJ) = Just t_a1sR6
data Maybe_Sym0 (l_a2hlw :: TyFun b_a2hlg (TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *) -> *))
data Maybe_Sym1 (l_a2hlz :: b_a2hlg) (l_a2hly :: TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *))
data Maybe_Sym2 (l_a2hlC :: b_a2hlg) (l_a2hlD :: TyFun a_a2hlh b_a2hlg -> *) (l_a2hlB :: TyFun (Maybe a_a2hlh) b_a2hlg)
type Maybe_Sym3 (t_a2hlt :: b_a2hlg) (t_a2hlu :: TyFun a_a2hlh b_a2hlg -> *) (t_a2hlv :: Maybe a_a2hlh) = Maybe_ t_a2hlt t_a2hlu t_a2hlv
data IsJustSym0 (l_a2hIM :: TyFun (Maybe a_a2hGS) Bool)
type IsJustSym1 (t_a2hIL :: Maybe a_a2hGS) = IsJust t_a2hIL
data IsNothingSym0 (l_a2hIF :: TyFun (Maybe a_a2hGT) Bool)
type IsNothingSym1 (t_a2hIE :: Maybe a_a2hGT) = IsNothing t_a2hIE
data FromJustSym0 (l_a2hIA :: TyFun (Maybe a_a2hGU) a_a2hGU)
type FromJustSym1 (t_a2hIz :: Maybe a_a2hGU) = FromJust t_a2hIz
data FromMaybeSym0 (l_a2hIm :: TyFun a_a2hGW (TyFun (Maybe a_a2hGW) a_a2hGW -> *))
data FromMaybeSym1 (l_a2hIp :: a_a2hGW) (l_a2hIo :: TyFun (Maybe a_a2hGW) a_a2hGW)
type FromMaybeSym2 (t_a2hIk :: a_a2hGW) (t_a2hIl :: Maybe a_a2hGW) = FromMaybe t_a2hIk t_a2hIl
data MaybeToListSym0 (l_a2hIg :: TyFun (Maybe a_a2hH0) [a_a2hH0])
type MaybeToListSym1 (t_a2hIf :: Maybe a_a2hH0) = MaybeToList t_a2hIf
data ListToMaybeSym0 (l_a2hI8 :: TyFun [a_a2hH2] (Maybe a_a2hH2))
type ListToMaybeSym1 (t_a2hI7 :: [a_a2hH2]) = ListToMaybe t_a2hI7
data CatMaybesSym0 (l_a2hI1 :: TyFun [Maybe a_a2hH4] [a_a2hH4])
type CatMaybesSym1 (t_a2hI0 :: [Maybe a_a2hH4]) = CatMaybes t_a2hI0
data MapMaybeSym0 (l_a2hHj :: TyFun (TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (TyFun [a_a2hH8] [b_a2hH9] -> *))
data MapMaybeSym1 (l_a2hHm :: TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (l_a2hHl :: TyFun [a_a2hH8] [b_a2hH9])
type MapMaybeSym2 (t_a2hHh :: TyFun a_a2hH8 (Maybe b_a2hH9) -> *) (t_a2hHi :: [a_a2hH8]) = MapMaybe t_a2hHh t_a2hHi


-- | Defines the promoted and singleton version of Bounded, <a>PBounded</a>
--   and <a>SBounded</a>
module Data.Singletons.Prelude.Enum
class kproxy_a2keU ~ KProxy => PBounded (kproxy_a2keU :: KProxy a_a2keT) where type family MinBound :: a_a2keT type family MaxBound :: a_a2keT
class kproxy_a2keV ~ KProxy => SBounded (kproxy_a2keV :: KProxy a_a2keT)
sMinBound :: SBounded kproxy_a2keV => Sing (MinBoundSym0 :: a_a2keT)
sMaxBound :: SBounded kproxy_a2keV => Sing (MaxBoundSym0 :: a_a2keT)
class kproxy_a2lEF ~ KProxy => PEnum (kproxy_a2lEF :: KProxy a_a2lw7) where type family Succ (arg_a2lEG :: a_a2lw7) :: a_a2lw7 type family Pred (arg_a2lEK :: a_a2lw7) :: a_a2lw7 type family ToEnum (arg_a2lEO :: Nat) :: a_a2lw7 type family FromEnum (arg_a2lES :: a_a2lw7) :: Nat type family EnumFromTo (arg_a2lEW :: a_a2lw7) (arg_a2lEX :: a_a2lw7) :: [a_a2lw7] type family EnumFromThenTo (arg_a2lF5 :: a_a2lw7) (arg_a2lF6 :: a_a2lw7) (arg_a2lF7 :: a_a2lw7) :: [a_a2lw7] Succ (a_a2lFr :: a_a2lw7) = Apply Succ_1627949902Sym0 a_a2lFr Pred (a_a2lFE :: a_a2lw7) = Apply Pred_1627949915Sym0 a_a2lFE EnumFromTo (a_a2lFV :: a_a2lw7) (a_a2lFW :: a_a2lw7) = Apply (Apply EnumFromTo_1627949933Sym0 a_a2lFV) a_a2lFW EnumFromThenTo (a_a2lGo :: a_a2lw7) (a_a2lGp :: a_a2lw7) (a_a2lGq :: a_a2lw7) = Apply (Apply (Apply EnumFromThenTo_1627949963Sym0 a_a2lGo) a_a2lGp) a_a2lGq
class kproxy_a2lK0 ~ KProxy => SEnum (kproxy_a2lK0 :: KProxy a_a2lw7) where sSucc sA_1627949894 = let lambda_a2lJL :: forall a_1627949894_a2lFq. t_a2lJC ~ a_1627949894_a2lFq => Sing a_1627949894_a2lFq -> Sing (Apply SuccSym0 a_1627949894_a2lFq :: a_a2lw7) lambda_a2lJL a_1627949894_a2lJM = applySing (applySing (applySing (singFun3 (Proxy :: Proxy (:.$)) (%:.)) (singFun1 (Proxy :: Proxy ToEnumSym0) sToEnum)) (applySing (applySing (singFun3 (Proxy :: Proxy (:.$)) (%:.)) (applySing (singFun2 (Proxy :: Proxy (:+$)) (%:+)) (sFromInteger (sing :: Sing 1)))) (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum))) a_1627949894_a2lJM in lambda_a2lJL sA_1627949894 sPred sA_1627949907 = let lambda_a2lJN :: forall a_1627949907_a2lFD. t_a2lJD ~ a_1627949907_a2lFD => Sing a_1627949907_a2lFD -> Sing (Apply PredSym0 a_1627949907_a2lFD :: a_a2lw7) lambda_a2lJN a_1627949907_a2lJO = applySing (applySing (applySing (singFun3 (Proxy :: Proxy (:.$)) (%:.)) (singFun1 (Proxy :: Proxy ToEnumSym0) sToEnum)) (applySing (applySing (singFun3 (Proxy :: Proxy (:.$)) (%:.)) (applySing (singFun2 (Proxy :: Proxy SubtractSym0) sSubtract) (sFromInteger (sing :: Sing 1)))) (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum))) a_1627949907_a2lJO in lambda_a2lJN sA_1627949907 sEnumFromTo sX sY = let lambda_a2lJR :: forall x_a2lFT y_a2lFU. (t_a2lJG ~ x_a2lFT, t_a2lJH ~ y_a2lFU) => Sing x_a2lFT -> Sing y_a2lFU -> Sing (Apply (Apply EnumFromToSym0 x_a2lFT) y_a2lFU :: [a_a2lw7]) lambda_a2lJR x_a2lJS y_a2lJT = applySing (applySing (singFun2 (Proxy :: Proxy MapSym0) sMap) (singFun1 (Proxy :: Proxy ToEnumSym0) sToEnum)) (applySing (applySing (singFun2 (Proxy :: Proxy EnumFromToSym0) sEnumFromTo) (applySing (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum) x_a2lJS)) (applySing (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum) y_a2lJT)) in lambda_a2lJR sX sY sEnumFromThenTo sX1 sX2 sY = let lambda_a2lJV :: forall x1_a2lGl x2_a2lGm y_a2lGn. (t_a2lJI ~ x1_a2lGl, t_a2lJJ ~ x2_a2lGm, t_a2lJK ~ y_a2lGn) => Sing x1_a2lGl -> Sing x2_a2lGm -> Sing y_a2lGn -> Sing (Apply (Apply (Apply EnumFromThenToSym0 x1_a2lGl) x2_a2lGm) y_a2lGn :: [a_a2lw7]) lambda_a2lJV x1_a2lJW x2_a2lJX y_a2lJY = applySing (applySing (singFun2 (Proxy :: Proxy MapSym0) sMap) (singFun1 (Proxy :: Proxy ToEnumSym0) sToEnum)) (applySing (applySing (applySing (singFun3 (Proxy :: Proxy EnumFromThenToSym0) sEnumFromThenTo) (applySing (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum) x1_a2lJW)) (applySing (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum) x2_a2lJX)) (applySing (singFun1 (Proxy :: Proxy FromEnumSym0) sFromEnum) y_a2lJY)) in lambda_a2lJV sX1 sX2 sY
sSucc :: SEnum kproxy_a2lK0 => Sing t_a2lJC -> Sing (Apply SuccSym0 t_a2lJC :: a_a2lw7)
sPred :: SEnum kproxy_a2lK0 => Sing t_a2lJD -> Sing (Apply PredSym0 t_a2lJD :: a_a2lw7)
sToEnum :: SEnum kproxy_a2lK0 => Sing t_a2lJE -> Sing (Apply ToEnumSym0 t_a2lJE :: a_a2lw7)
sFromEnum :: SEnum kproxy_a2lK0 => Sing t_a2lJF -> Sing (Apply FromEnumSym0 t_a2lJF :: Nat)
sEnumFromTo :: SEnum kproxy_a2lK0 => Sing t_a2lJG -> Sing t_a2lJH -> Sing (Apply (Apply EnumFromToSym0 t_a2lJG) t_a2lJH :: [a_a2lw7])
sEnumFromThenTo :: SEnum kproxy_a2lK0 => Sing t_a2lJI -> Sing t_a2lJJ -> Sing t_a2lJK -> Sing (Apply (Apply (Apply EnumFromThenToSym0 t_a2lJI) t_a2lJJ) t_a2lJK :: [a_a2lw7])
type MinBoundSym0 = MinBound
type MaxBoundSym0 = MaxBound
data SuccSym0 (l_a2lEI :: TyFun a_a2lw7 a_a2lw7)
type SuccSym1 (t_a2lEH :: a_a2lw7) = Succ t_a2lEH
data PredSym0 (l_a2lEM :: TyFun a_a2lw7 a_a2lw7)
type PredSym1 (t_a2lEL :: a_a2lw7) = Pred t_a2lEL
data ToEnumSym0 (l_a2lEQ :: TyFun Nat a_a2lw7)
type ToEnumSym1 (t_a2lEP :: Nat) = ToEnum t_a2lEP
data FromEnumSym0 (l_a2lEU :: TyFun a_a2lw7 Nat)
type FromEnumSym1 (t_a2lET :: a_a2lw7) = FromEnum t_a2lET
data EnumFromToSym0 (l_a2lF0 :: TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *))
data EnumFromToSym1 (l_a2lF3 :: a_a2lw7) (l_a2lF2 :: TyFun a_a2lw7 [a_a2lw7])
type EnumFromToSym2 (t_a2lEY :: a_a2lw7) (t_a2lEZ :: a_a2lw7) = EnumFromTo t_a2lEY t_a2lEZ
data EnumFromThenToSym0 (l_a2lFb :: TyFun a_a2lw7 (TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *) -> *))
data EnumFromThenToSym1 (l_a2lFe :: a_a2lw7) (l_a2lFd :: TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *))
data EnumFromThenToSym2 (l_a2lFh :: a_a2lw7) (l_a2lFi :: a_a2lw7) (l_a2lFg :: TyFun a_a2lw7 [a_a2lw7])
type EnumFromThenToSym3 (t_a2lF8 :: a_a2lw7) (t_a2lF9 :: a_a2lw7) (t_a2lFa :: a_a2lw7) = EnumFromThenTo t_a2lF8 t_a2lF9 t_a2lFa
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.ToEnum_1627974008Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.FromEnum_1627974018Sym0
instance Data.Singletons.Prelude.Enum.PEnum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SEnum 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.ToEnum_1627974047Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.FromEnum_1627974057Sym0
instance Data.Singletons.Prelude.Enum.PEnum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SEnum 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.ToEnum_1627974083Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.FromEnum_1627974093Sym0
instance Data.Singletons.Prelude.Enum.PEnum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SEnum 'Data.Proxy.KProxy
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949411Scrutinee_1627949382Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448DeltaSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Y'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949448Go_dnSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949593Scrutinee_1627949372Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630DeltaSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Y'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949630Go_upSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949820Scrutinee_1627949358Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949820Scrutinee_1627949358Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949820Scrutinee_1627949358Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949820Scrutinee_1627949358Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949820Scrutinee_1627949358Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949792GoSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949792GoSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949792GoSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949792GoSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Let1627949792GoSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatDnSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatDnSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatDnSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatUpSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatUpSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatUpSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EfdtNatSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EftNatSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EftNatSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.SuccSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.PredSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.ToEnumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.FromEnumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromToSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromToSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenToSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenToSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenToSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Succ_1627949902Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Pred_1627949915Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromTo_1627949933Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromTo_1627949933Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627949963Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627949963Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627949963Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Succ_1627949983Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.Pred_1627949994Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.ToEnum_1627950005Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.FromEnum_1627950016Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromTo_1627950038Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromTo_1627950038Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627950074Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627950074Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.Enum.EnumFromThenTo_1627950074Sym0
instance Data.Singletons.Prelude.Enum.PEnum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SEnum 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance (Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy, Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy) => Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.PBounded 'Data.Proxy.KProxy
instance Data.Singletons.Prelude.Enum.SBounded 'Data.Proxy.KProxy


-- | Exports promoted versions of <a>Enum</a> and <a>Bounded</a>
module Data.Promotion.Prelude.Enum
class kproxy_a2keU ~ KProxy => PBounded (kproxy_a2keU :: KProxy a_a2keT) where type family MinBound :: a_a2keT type family MaxBound :: a_a2keT
class kproxy_a2lEF ~ KProxy => PEnum (kproxy_a2lEF :: KProxy a_a2lw7) where type family Succ (arg_a2lEG :: a_a2lw7) :: a_a2lw7 type family Pred (arg_a2lEK :: a_a2lw7) :: a_a2lw7 type family ToEnum (arg_a2lEO :: Nat) :: a_a2lw7 type family FromEnum (arg_a2lES :: a_a2lw7) :: Nat type family EnumFromTo (arg_a2lEW :: a_a2lw7) (arg_a2lEX :: a_a2lw7) :: [a_a2lw7] type family EnumFromThenTo (arg_a2lF5 :: a_a2lw7) (arg_a2lF6 :: a_a2lw7) (arg_a2lF7 :: a_a2lw7) :: [a_a2lw7] Succ (a_a2lFr :: a_a2lw7) = Apply Succ_1627949902Sym0 a_a2lFr Pred (a_a2lFE :: a_a2lw7) = Apply Pred_1627949915Sym0 a_a2lFE EnumFromTo (a_a2lFV :: a_a2lw7) (a_a2lFW :: a_a2lw7) = Apply (Apply EnumFromTo_1627949933Sym0 a_a2lFV) a_a2lFW EnumFromThenTo (a_a2lGo :: a_a2lw7) (a_a2lGp :: a_a2lw7) (a_a2lGq :: a_a2lw7) = Apply (Apply (Apply EnumFromThenTo_1627949963Sym0 a_a2lGo) a_a2lGp) a_a2lGq
type MinBoundSym0 = MinBound
type MaxBoundSym0 = MaxBound
data SuccSym0 (l_a2lEI :: TyFun a_a2lw7 a_a2lw7)
type SuccSym1 (t_a2lEH :: a_a2lw7) = Succ t_a2lEH
data PredSym0 (l_a2lEM :: TyFun a_a2lw7 a_a2lw7)
type PredSym1 (t_a2lEL :: a_a2lw7) = Pred t_a2lEL
data ToEnumSym0 (l_a2lEQ :: TyFun Nat a_a2lw7)
type ToEnumSym1 (t_a2lEP :: Nat) = ToEnum t_a2lEP
data FromEnumSym0 (l_a2lEU :: TyFun a_a2lw7 Nat)
type FromEnumSym1 (t_a2lET :: a_a2lw7) = FromEnum t_a2lET
data EnumFromToSym0 (l_a2lF0 :: TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *))
data EnumFromToSym1 (l_a2lF3 :: a_a2lw7) (l_a2lF2 :: TyFun a_a2lw7 [a_a2lw7])
type EnumFromToSym2 (t_a2lEY :: a_a2lw7) (t_a2lEZ :: a_a2lw7) = EnumFromTo t_a2lEY t_a2lEZ
data EnumFromThenToSym0 (l_a2lFb :: TyFun a_a2lw7 (TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *) -> *))
data EnumFromThenToSym1 (l_a2lFe :: a_a2lw7) (l_a2lFd :: TyFun a_a2lw7 (TyFun a_a2lw7 [a_a2lw7] -> *))
data EnumFromThenToSym2 (l_a2lFh :: a_a2lw7) (l_a2lFi :: a_a2lw7) (l_a2lFg :: TyFun a_a2lw7 [a_a2lw7])
type EnumFromThenToSym3 (t_a2lF8 :: a_a2lw7) (t_a2lF9 :: a_a2lw7) (t_a2lFa :: a_a2lw7) = EnumFromThenTo t_a2lF8 t_a2lF9 t_a2lFa


-- | Defines functions and datatypes relating to the singleton for '[]',
--   including a singletons version of a few of the definitions in
--   <tt>Data.List</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.List</tt>. Also, please excuse
--   the apparent repeated variable names. This is due to an interaction
--   between Template Haskell and Haddock.
module Data.Singletons.Prelude.List

-- | The singleton kind-indexed data family.
type SList = (Sing :: [a_12] -> *)
(%:++) :: Sing t_a24uA -> Sing t_a24uB -> Sing (Apply (Apply (:++$) t_a24uA) t_a24uB :: [a_a24r7])
sHead :: Sing t_a2Gnx -> Sing (Apply HeadSym0 t_a2Gnx :: a_a2Fj2)
sLast :: Sing t_a2Gnw -> Sing (Apply LastSym0 t_a2Gnw :: a_a2Fj4)
sTail :: Sing t_a2Gnv -> Sing (Apply TailSym0 t_a2Gnv :: [a_a2Fj8])
sInit :: Sing t_a2Gnu -> Sing (Apply InitSym0 t_a2Gnu :: [a_a2Fja])
sNull :: Sing t_a2Gnr -> Sing (Apply NullSym0 t_a2Gnr :: Bool)
sLength :: Sing t_a2Gl3 -> Sing (Apply LengthSym0 t_a2Gl3 :: Nat)
sMap :: Sing t_a24uC -> Sing t_a24uD -> Sing (Apply (Apply MapSym0 t_a24uC) t_a24uD :: [b_a24r3])
sReverse :: Sing t_a2Gno -> Sing (Apply ReverseSym0 t_a2Gno :: [a_a2Fjj])
sIntersperse :: Sing t_a2Gnk -> Sing t_a2Gnl -> Sing (Apply (Apply IntersperseSym0 t_a2Gnk) t_a2Gnl :: [a_a2Fjr])
sIntercalate :: Sing t_a2Gnm -> Sing t_a2Gnn -> Sing (Apply (Apply IntercalateSym0 t_a2Gnm) t_a2Gnn :: [a_a2Fjv])
sTranspose :: Sing t_a2Gny -> Sing (Apply TransposeSym0 t_a2Gny :: [[a_a2Fqd]])
sSubsequences :: Sing t_a2Gnj -> Sing (Apply SubsequencesSym0 t_a2Gnj :: [[a_a2Fjy]])
sPermutations :: Sing t_a2Gnf -> Sing (Apply PermutationsSym0 t_a2Gnf :: [[a_a2FjK]])
sFoldl :: Sing t_a1w3y -> Sing t_a1w3z -> Sing t_a1w3A -> Sing (Apply (Apply (Apply FoldlSym0 t_a1w3y) t_a1w3z) t_a1w3A :: b_a1w2A)
sFoldl' :: Sing t_a2Gna -> Sing t_a2Gnb -> Sing t_a2Gnc -> Sing (Apply (Apply (Apply Foldl'Sym0 t_a2Gna) t_a2Gnb) t_a2Gnc :: b_a2Fhz)
sFoldl1 :: Sing t_a2Gn2 -> Sing t_a2Gn3 -> Sing (Apply (Apply Foldl1Sym0 t_a2Gn2) t_a2Gn3 :: a_a2Fkb)
sFoldl1' :: Sing t_a2Gnd -> Sing t_a2Gne -> Sing (Apply (Apply Foldl1'Sym0 t_a2Gnd) t_a2Gne :: a_a2Fkf)
sFoldr :: Sing t_a24uE -> Sing t_a24uF -> Sing t_a24uG -> Sing (Apply (Apply (Apply FoldrSym0 t_a24uE) t_a24uF) t_a24uG :: b_a24qW)
sFoldr1 :: Sing t_a2Gn0 -> Sing t_a2Gn1 -> Sing (Apply (Apply Foldr1Sym0 t_a2Gn0) t_a2Gn1 :: a_a2Fkj)
sConcat :: Sing t_a2GmZ -> Sing (Apply ConcatSym0 t_a2GmZ :: [a_a2Fko])
sConcatMap :: Sing t_a2GmX -> Sing t_a2GmY -> Sing (Apply (Apply ConcatMapSym0 t_a2GmX) t_a2GmY :: [b_a2Fkq])
sAnd :: Sing t_a2GmW -> Sing (Apply AndSym0 t_a2GmW :: Bool)
sOr :: Sing t_a2GmV -> Sing (Apply OrSym0 t_a2GmV :: Bool)
sAny_ :: Sing t_a2CvR -> Sing t_a2CvS -> Sing (Apply (Apply Any_Sym0 t_a2CvR) t_a2CvS :: Bool)
sAll :: Sing t_a2GmT -> Sing t_a2GmU -> Sing (Apply (Apply AllSym0 t_a2GmT) t_a2GmU :: Bool)
sSum :: SNum (KProxy :: KProxy a_a2Fhx) => Sing t_a2Gl5 -> Sing (Apply SumSym0 t_a2Gl5 :: a_a2Fhx)
sProduct :: SNum (KProxy :: KProxy a_a2Fhw) => Sing t_a2Gl4 -> Sing (Apply ProductSym0 t_a2Gl4 :: a_a2Fhw)
sMaximum :: SOrd (KProxy :: KProxy a_a2Fpt) => Sing t_a2Gn8 -> Sing (Apply MaximumSym0 t_a2Gn8 :: a_a2Fpt)
sMinimum :: SOrd (KProxy :: KProxy a_a2Fpv) => Sing t_a2Gn9 -> Sing (Apply MinimumSym0 t_a2Gn9 :: a_a2Fpv)
any_ :: (a_a2Cvx -> Bool) -> [a_a2Cvx] -> Bool
sScanl :: Sing t_a2GmO -> Sing t_a2GmP -> Sing t_a2GmQ -> Sing (Apply (Apply (Apply ScanlSym0 t_a2GmO) t_a2GmP) t_a2GmQ :: [b_a2FkA])
sScanl1 :: Sing t_a2GmR -> Sing t_a2GmS -> Sing (Apply (Apply Scanl1Sym0 t_a2GmR) t_a2GmS :: [a_a2FkH])
sScanr :: Sing t_a2GmL -> Sing t_a2GmM -> Sing t_a2GmN -> Sing (Apply (Apply (Apply ScanrSym0 t_a2GmL) t_a2GmM) t_a2GmN :: [b_a2FkM])
sScanr1 :: Sing t_a2GmJ -> Sing t_a2GmK -> Sing (Apply (Apply Scanr1Sym0 t_a2GmJ) t_a2GmK :: [a_a2FkU])
sMapAccumL :: Sing t_a2GmG -> Sing t_a2GmH -> Sing t_a2GmI -> Sing (Apply (Apply (Apply MapAccumLSym0 t_a2GmG) t_a2GmH) t_a2GmI :: (acc_a2Fl1, [y_a2Fl3]))
sMapAccumR :: Sing t_a2GmD -> Sing t_a2GmE -> Sing t_a2GmF -> Sing (Apply (Apply (Apply MapAccumRSym0 t_a2GmD) t_a2GmE) t_a2GmF :: (acc_a2Fld, [y_a2Flf]))
sReplicate :: Sing t_a2Gl1 -> Sing t_a2Gl2 -> Sing (Apply (Apply ReplicateSym0 t_a2Gl1) t_a2Gl2 :: [a_a2Fqa])
sUnfoldr :: Sing t_a2GmB -> Sing t_a2GmC -> Sing (Apply (Apply UnfoldrSym0 t_a2GmB) t_a2GmC :: [a_a2Flq])
sTake :: Sing t_a2Glf -> Sing t_a2Glg -> Sing (Apply (Apply TakeSym0 t_a2Glf) t_a2Glg :: [a_a2Fpg])
sDrop :: Sing t_a2Gld -> Sing t_a2Gle -> Sing (Apply (Apply DropSym0 t_a2Gld) t_a2Gle :: [a_a2Fpk])
sSplitAt :: Sing t_a2Glh -> Sing t_a2Gli -> Sing (Apply (Apply SplitAtSym0 t_a2Glh) t_a2Gli :: ([a_a2Fpo], [a_a2Fpo]))
sTakeWhile :: Sing t_a2Gls -> Sing t_a2Glt -> Sing (Apply (Apply TakeWhileSym0 t_a2Gls) t_a2Glt :: [a_a2FoN])
sDropWhile :: Sing t_a2Glq -> Sing t_a2Glr -> Sing (Apply (Apply DropWhileSym0 t_a2Glq) t_a2Glr :: [a_a2FoR])
sDropWhileEnd :: Sing t_a2Gns -> Sing t_a2Gnt -> Sing (Apply (Apply DropWhileEndSym0 t_a2Gns) t_a2Gnt :: [a_a2FoW])
sSpan :: Sing t_a2Gll -> Sing t_a2Glm -> Sing (Apply (Apply SpanSym0 t_a2Gll) t_a2Glm :: ([a_a2Fp0], [a_a2Fp0]))
sBreak :: Sing t_a2Glj -> Sing t_a2Glk -> Sing (Apply (Apply BreakSym0 t_a2Glj) t_a2Glk :: ([a_a2Fp8], [a_a2Fp8]))
sGroup :: SEq (KProxy :: KProxy a_a2Fpr) => Sing t_a2Glp -> Sing (Apply GroupSym0 t_a2Glp :: [[a_a2Fpr]])
sInits :: Sing t_a2GmA -> Sing (Apply InitsSym0 t_a2GmA :: [[a_a2Flv]])
sTails :: Sing t_a2Gmx -> Sing (Apply TailsSym0 t_a2Gmx :: [[a_a2Flz]])
sIsPrefixOf :: SEq (KProxy :: KProxy a_a2FlC) => Sing t_a2Gmv -> Sing t_a2Gmw -> Sing (Apply (Apply IsPrefixOfSym0 t_a2Gmv) t_a2Gmw :: Bool)
sIsSuffixOf :: SEq (KProxy :: KProxy a_a2FlH) => Sing t_a2Gnp -> Sing t_a2Gnq -> Sing (Apply (Apply IsSuffixOfSym0 t_a2Gnp) t_a2Gnq :: Bool)
sIsInfixOf :: SEq (KProxy :: KProxy a_a2FlK) => Sing t_a2Gmy -> Sing t_a2Gmz -> Sing (Apply (Apply IsInfixOfSym0 t_a2Gmy) t_a2Gmz :: Bool)
sElem :: SEq (KProxy :: KProxy a_a2FlN) => Sing t_a2Gms -> Sing t_a2Gmt -> Sing (Apply (Apply ElemSym0 t_a2Gms) t_a2Gmt :: Bool)
sNotElem :: SEq (KProxy :: KProxy a_a2FlR) => Sing t_a2Gmq -> Sing t_a2Gmr -> Sing (Apply (Apply NotElemSym0 t_a2Gmq) t_a2Gmr :: Bool)
sLookup :: SEq (KProxy :: KProxy a_a2FpH) => Sing t_a2Glb -> Sing t_a2Glc -> Sing (Apply (Apply LookupSym0 t_a2Glb) t_a2Glc :: Maybe b_a2FpI)
sFind :: Sing t_a2Glw -> Sing t_a2Glx -> Sing (Apply (Apply FindSym0 t_a2Glw) t_a2Glx :: Maybe a_a2For)
sFilter :: Sing t_a2Glu -> Sing t_a2Glv -> Sing (Apply (Apply FilterSym0 t_a2Glu) t_a2Glv :: [a_a2Fom])
sPartition :: Sing t_a2Gl9 -> Sing t_a2Gla -> Sing (Apply (Apply PartitionSym0 t_a2Gl9) t_a2Gla :: ([a_a2FpO], [a_a2FpO]))
(%:!!) :: Sing t_a2GkZ -> Sing t_a2Gl0 -> Sing (Apply (Apply (:!!$) t_a2GkZ) t_a2Gl0 :: a_a2Fqi)
sElemIndex :: SEq (KProxy :: KProxy a_a2Fot) => Sing t_a2Gmo -> Sing t_a2Gmp -> Sing (Apply (Apply ElemIndexSym0 t_a2Gmo) t_a2Gmp :: Maybe Nat)
sElemIndices :: SEq (KProxy :: KProxy a_a2Fov) => Sing t_a2Gmk -> Sing t_a2Gml -> Sing (Apply (Apply ElemIndicesSym0 t_a2Gmk) t_a2Gml :: [Nat])
sFindIndex :: Sing t_a2Gmm -> Sing t_a2Gmn -> Sing (Apply (Apply FindIndexSym0 t_a2Gmm) t_a2Gmn :: Maybe Nat)
sFindIndices :: Sing t_a2Gmi -> Sing t_a2Gmj -> Sing (Apply (Apply FindIndicesSym0 t_a2Gmi) t_a2Gmj :: [Nat])
sZip :: Sing t_a2Gmg -> Sing t_a2Gmh -> Sing (Apply (Apply ZipSym0 t_a2Gmg) t_a2Gmh :: [(a_a2FlV, b_a2FlW)])
sZip3 :: Sing t_a2Gmd -> Sing t_a2Gme -> Sing t_a2Gmf -> Sing (Apply (Apply (Apply Zip3Sym0 t_a2Gmd) t_a2Gme) t_a2Gmf :: [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
sZipWith :: Sing t_a2Gma -> Sing t_a2Gmb -> Sing t_a2Gmc -> Sing (Apply (Apply (Apply ZipWithSym0 t_a2Gma) t_a2Gmb) t_a2Gmc :: [c_a2Fmc])
sZipWith3 :: Sing t_a2Gm6 -> Sing t_a2Gm7 -> Sing t_a2Gm8 -> Sing t_a2Gm9 -> Sing (Apply (Apply (Apply (Apply ZipWith3Sym0 t_a2Gm6) t_a2Gm7) t_a2Gm8) t_a2Gm9 :: [d_a2Fml])
sUnzip :: Sing t_a2Gm5 -> Sing (Apply UnzipSym0 t_a2Gm5 :: ([a_a2Fmt], [b_a2Fmu]))
sUnzip3 :: Sing t_a2Gm4 -> Sing (Apply Unzip3Sym0 t_a2Gm4 :: ([a_a2FmA], [b_a2FmB], [c_a2FmC]))
sUnzip4 :: Sing t_a2Gm3 -> Sing (Apply Unzip4Sym0 t_a2Gm3 :: ([a_a2FmK], [b_a2FmL], [c_a2FmM], [d_a2FmN]))
sUnzip5 :: Sing t_a2Gm2 -> Sing (Apply Unzip5Sym0 t_a2Gm2 :: ([a_a2FmX], [b_a2FmY], [c_a2FmZ], [d_a2Fn0], [e_a2Fn1]))
sUnzip6 :: Sing t_a2Gm1 -> Sing (Apply Unzip6Sym0 t_a2Gm1 :: ([a_a2Fnd], [b_a2Fne], [c_a2Fnf], [d_a2Fng], [e_a2Fnh], [f_a2Fni]))
sUnzip7 :: Sing t_a2Gm0 -> Sing (Apply Unzip7Sym0 t_a2Gm0 :: ([a_a2Fnw], [b_a2Fnx], [c_a2Fny], [d_a2Fnz], [e_a2FnA], [f_a2FnB], [g_a2FnC]))
sNub :: SEq (KProxy :: KProxy a_a2Fhv) => Sing t_a2Gmu -> Sing (Apply NubSym0 t_a2Gmu :: [a_a2Fhv])
sDelete :: SEq (KProxy :: KProxy a_a2FnS) => Sing t_a2GlW -> Sing t_a2GlX -> Sing (Apply (Apply DeleteSym0 t_a2GlW) t_a2GlX :: [a_a2FnS])
(%:\\) :: SEq (KProxy :: KProxy a_a2FnT) => Sing t_a2GlY -> Sing t_a2GlZ -> Sing (Apply (Apply (:\\$) t_a2GlY) t_a2GlZ :: [a_a2FnT])
sUnion :: SEq (KProxy :: KProxy a_a2FqH) => Sing t_a2GlU -> Sing t_a2GlV -> Sing (Apply (Apply UnionSym0 t_a2GlU) t_a2GlV :: [a_a2FqH])
sIntersect :: SEq (KProxy :: KProxy a_a2FoH) => Sing t_a2GlB -> Sing t_a2GlC -> Sing (Apply (Apply IntersectSym0 t_a2GlB) t_a2GlC :: [a_a2FoH])
sInsert :: SOrd (KProxy :: KProxy a_a2Fpx) => Sing t_a2GlG -> Sing t_a2GlH -> Sing (Apply (Apply InsertSym0 t_a2GlG) t_a2GlH :: [a_a2Fpx])
sSort :: SOrd (KProxy :: KProxy a_a2FpA) => Sing t_a2GlK -> Sing (Apply SortSym0 t_a2GlK :: [a_a2FpA])
sNubBy :: Sing t_a2GkX -> Sing t_a2GkY -> Sing (Apply (Apply NubBySym0 t_a2GkX) t_a2GkY :: [a_a2Fqr])
sDeleteBy :: Sing t_a2GlL -> Sing t_a2GlM -> Sing t_a2GlN -> Sing (Apply (Apply (Apply DeleteBySym0 t_a2GlL) t_a2GlM) t_a2GlN :: [a_a2FnU])
sDeleteFirstsBy :: Sing t_a2GlO -> Sing t_a2GlP -> Sing t_a2GlQ -> Sing (Apply (Apply (Apply DeleteFirstsBySym0 t_a2GlO) t_a2GlP) t_a2GlQ :: [a_a2FnZ])
sUnionBy :: Sing t_a2GlR -> Sing t_a2GlS -> Sing t_a2GlT -> Sing (Apply (Apply (Apply UnionBySym0 t_a2GlR) t_a2GlS) t_a2GlT :: [a_a2FqD])
sIntersectBy :: Sing t_a2Gly -> Sing t_a2Glz -> Sing t_a2GlA -> Sing (Apply (Apply (Apply IntersectBySym0 t_a2Gly) t_a2Glz) t_a2GlA :: [a_a2FoI])
sGroupBy :: Sing t_a2Gln -> Sing t_a2Glo -> Sing (Apply (Apply GroupBySym0 t_a2Gln) t_a2Glo :: [[a_a2FpB]])
sSortBy :: Sing t_a2GlI -> Sing t_a2GlJ -> Sing (Apply (Apply SortBySym0 t_a2GlI) t_a2GlJ :: [a_a2Fo1])
sInsertBy :: Sing t_a2GlD -> Sing t_a2GlE -> Sing t_a2GlF -> Sing (Apply (Apply (Apply InsertBySym0 t_a2GlD) t_a2GlE) t_a2GlF :: [a_a2Fo3])
sMaximumBy :: Sing t_a2Gn4 -> Sing t_a2Gn5 -> Sing (Apply (Apply MaximumBySym0 t_a2Gn4) t_a2Gn5 :: a_a2Foa)
sMinimumBy :: Sing t_a2Gn6 -> Sing t_a2Gn7 -> Sing (Apply (Apply MinimumBySym0 t_a2Gn6) t_a2Gn7 :: a_a2Fog)
sGenericLength :: SNum (KProxy :: KProxy i_a2FqJ) => Sing t_a2GkT -> Sing (Apply GenericLengthSym0 t_a2GkT :: i_a2FqJ)
type NilSym0 = '[]
data (:$) (l_a1sRh :: TyFun a_12 (TyFun [a_12] [a_12] -> *))
data (:$$) (l_a1sRk :: a_12) (l_a1sRj :: TyFun [a_12] [a_12])
type (:$$$) (t_a1sRf :: a_12) (t_a1sRg :: [a_12]) = (:) t_a1sRf t_a1sRg
type (:++$$$) (t_a24tf :: [a_a24r7]) (t_a24tg :: [a_a24r7]) = (:++) t_a24tf t_a24tg
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data HeadSym0 (l_a2GkE :: TyFun [a_a2Fj2] a_a2Fj2)
type HeadSym1 (t_a2GkD :: [a_a2Fj2]) = Head t_a2GkD
data LastSym0 (l_a2Gku :: TyFun [a_a2Fj4] a_a2Fj4)
type LastSym1 (t_a2Gkt :: [a_a2Fj4]) = Last t_a2Gkt
data TailSym0 (l_a2Gkm :: TyFun [a_a2Fj8] [a_a2Fj8])
type TailSym1 (t_a2Gkl :: [a_a2Fj8]) = Tail t_a2Gkl
data InitSym0 (l_a2GjP :: TyFun [a_a2Fja] [a_a2Fja])
type InitSym1 (t_a2GjO :: [a_a2Fja]) = Init t_a2GjO
data NullSym0 (l_a2GiI :: TyFun [a_a2Fji] Bool)
type NullSym1 (t_a2GiH :: [a_a2Fji]) = Null t_a2GiH
data LengthSym0 (l_a2FuX :: TyFun [a_a2Fq8] Nat)
type LengthSym1 (t_a2FuW :: [a_a2Fq8]) = Length t_a2FuW
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data ReverseSym0 (l_a2Gi9 :: TyFun [a_a2Fjj] [a_a2Fjj])
type ReverseSym1 (t_a2Gi8 :: [a_a2Fjj]) = Reverse t_a2Gi8
data IntersperseSym0 (l_a2GhK :: TyFun a_a2Fjr (TyFun [a_a2Fjr] [a_a2Fjr] -> *))
data IntersperseSym1 (l_a2GhN :: a_a2Fjr) (l_a2GhM :: TyFun [a_a2Fjr] [a_a2Fjr])
type IntersperseSym2 (t_a2GhI :: a_a2Fjr) (t_a2GhJ :: [a_a2Fjr]) = Intersperse t_a2GhI t_a2GhJ
data IntercalateSym0 (l_a2GhZ :: TyFun [a_a2Fjv] (TyFun [[a_a2Fjv]] [a_a2Fjv] -> *))
data IntercalateSym1 (l_a2Gi2 :: [a_a2Fjv]) (l_a2Gi1 :: TyFun [[a_a2Fjv]] [a_a2Fjv])
type IntercalateSym2 (t_a2GhX :: [a_a2Fjv]) (t_a2GhY :: [[a_a2Fjv]]) = Intercalate t_a2GhX t_a2GhY
data TransposeSym0 (l_a2GkM :: TyFun [[a_a2Fqd]] [[a_a2Fqd]])
type TransposeSym1 (t_a2GkL :: [[a_a2Fqd]]) = Transpose t_a2GkL
data SubsequencesSym0 (l_a2GhE :: TyFun [a_a2Fjy] [[a_a2Fjy]])
type SubsequencesSym1 (t_a2GhD :: [a_a2Fjy]) = Subsequences t_a2GhD
data PermutationsSym0 (l_a2GaW :: TyFun [a_a2FjK] [[a_a2FjK]])
type PermutationsSym1 (t_a2GaV :: [a_a2FjK]) = Permutations t_a2GaV
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))
data FoldlSym1 (l_a1w2Q :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2P :: TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *))
data FoldlSym2 (l_a1w2T :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2U :: b_a1w2A) (l_a1w2S :: TyFun [a_a1w2z] b_a1w2A)
type FoldlSym3 (t_a1w2K :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (t_a1w2L :: b_a1w2A) (t_a1w2M :: [a_a1w2z]) = Foldl t_a1w2K t_a1w2L t_a1w2M
data Foldl'Sym0 (l_a2G9n :: TyFun (TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (TyFun b_a2Fhz (TyFun [a_a2Fhy] b_a2Fhz -> *) -> *))
data Foldl'Sym1 (l_a2G9q :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (l_a2G9p :: TyFun b_a2Fhz (TyFun [a_a2Fhy] b_a2Fhz -> *))
data Foldl'Sym2 (l_a2G9t :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (l_a2G9u :: b_a2Fhz) (l_a2G9s :: TyFun [a_a2Fhy] b_a2Fhz)
type Foldl'Sym3 (t_a2G9k :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (t_a2G9l :: b_a2Fhz) (t_a2G9m :: [a_a2Fhy]) = Foldl' t_a2G9k t_a2G9l t_a2G9m
data Foldl1Sym0 (l_a2G5R :: TyFun (TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (TyFun [a_a2Fkb] a_a2Fkb -> *))
data Foldl1Sym1 (l_a2G5U :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (l_a2G5T :: TyFun [a_a2Fkb] a_a2Fkb)
type Foldl1Sym2 (t_a2G5P :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (t_a2G5Q :: [a_a2Fkb]) = Foldl1 t_a2G5P t_a2G5Q
data Foldl1'Sym0 (l_a2GaI :: TyFun (TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (TyFun [a_a2Fkf] a_a2Fkf -> *))
data Foldl1'Sym1 (l_a2GaL :: TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (l_a2GaK :: TyFun [a_a2Fkf] a_a2Fkf)
type Foldl1'Sym2 (t_a2GaG :: TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (t_a2GaH :: [a_a2Fkf]) = Foldl1' t_a2GaG t_a2GaH
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data Foldr1Sym0 (l_a2G5e :: TyFun (TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (TyFun [a_a2Fkj] a_a2Fkj -> *))
data Foldr1Sym1 (l_a2G5h :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (l_a2G5g :: TyFun [a_a2Fkj] a_a2Fkj)
type Foldr1Sym2 (t_a2G5c :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (t_a2G5d :: [a_a2Fkj]) = Foldr1 t_a2G5c t_a2G5d
data ConcatSym0 (l_a2G58 :: TyFun [[a_a2Fko]] [a_a2Fko])
type ConcatSym1 (t_a2G57 :: [[a_a2Fko]]) = Concat t_a2G57
data ConcatMapSym0 (l_a2G4U :: TyFun (TyFun a_a2Fkp [b_a2Fkq] -> *) (TyFun [a_a2Fkp] [b_a2Fkq] -> *))
data ConcatMapSym1 (l_a2G4X :: TyFun a_a2Fkp [b_a2Fkq] -> *) (l_a2G4W :: TyFun [a_a2Fkp] [b_a2Fkq])
type ConcatMapSym2 (t_a2G4S :: TyFun a_a2Fkp [b_a2Fkq] -> *) (t_a2G4T :: [a_a2Fkp]) = ConcatMap t_a2G4S t_a2G4T
data AndSym0 (l_a2G4N :: TyFun [Bool] Bool)
type AndSym1 (t_a2G4M :: [Bool]) = And t_a2G4M
data OrSym0 (l_a2G4H :: TyFun [Bool] Bool)
type OrSym1 (t_a2G4G :: [Bool]) = Or t_a2G4G
data Any_Sym0 (l_a2CvE :: TyFun (TyFun a_a2Cvx Bool -> *) (TyFun [a_a2Cvx] Bool -> *))
data Any_Sym1 (l_a2CvH :: TyFun a_a2Cvx Bool -> *) (l_a2CvG :: TyFun [a_a2Cvx] Bool)
type Any_Sym2 (t_a2CvC :: TyFun a_a2Cvx Bool -> *) (t_a2CvD :: [a_a2Cvx]) = Any_ t_a2CvC t_a2CvD
data AllSym0 (l_a2G4t :: TyFun (TyFun a_a2Fkw Bool -> *) (TyFun [a_a2Fkw] Bool -> *))
data AllSym1 (l_a2G4w :: TyFun a_a2Fkw Bool -> *) (l_a2G4v :: TyFun [a_a2Fkw] Bool)
type AllSym2 (t_a2G4r :: TyFun a_a2Fkw Bool -> *) (t_a2G4s :: [a_a2Fkw]) = All t_a2G4r t_a2G4s
data SumSym0 (l_a2Fvt :: TyFun [a_a2Fhx] a_a2Fhx)
type SumSym1 (t_a2Fvs :: [a_a2Fhx]) = Sum t_a2Fvs
data ProductSym0 (l_a2Fv5 :: TyFun [a_a2Fhw] a_a2Fhw)
type ProductSym1 (t_a2Fv4 :: [a_a2Fhw]) = Product t_a2Fv4
data MaximumSym0 (l_a2G8T :: TyFun [a_a2Fpt] a_a2Fpt)
type MaximumSym1 (t_a2G8S :: [a_a2Fpt]) = Maximum t_a2G8S
data MinimumSym0 (l_a2G97 :: TyFun [a_a2Fpv] a_a2Fpv)
type MinimumSym1 (t_a2G96 :: [a_a2Fpv]) = Minimum t_a2G96
data ScanlSym0 (l_a2G3S :: TyFun (TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *) -> *))
data ScanlSym1 (l_a2G3V :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3U :: TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *))
data ScanlSym2 (l_a2G3Y :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3Z :: b_a2FkA) (l_a2G3X :: TyFun [a_a2FkB] [b_a2FkA])
type ScanlSym3 (t_a2G3P :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (t_a2G3Q :: b_a2FkA) (t_a2G3R :: [a_a2FkB]) = Scanl t_a2G3P t_a2G3Q t_a2G3R
data Scanl1Sym0 (l_a2G4e :: TyFun (TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (TyFun [a_a2FkH] [a_a2FkH] -> *))
data Scanl1Sym1 (l_a2G4h :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (l_a2G4g :: TyFun [a_a2FkH] [a_a2FkH])
type Scanl1Sym2 (t_a2G4c :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (t_a2G4d :: [a_a2FkH]) = Scanl1 t_a2G4c t_a2G4d
data ScanrSym0 (l_a2G37 :: TyFun (TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *) -> *))
data ScanrSym1 (l_a2G3a :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G39 :: TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *))
data ScanrSym2 (l_a2G3d :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G3e :: b_a2FkM) (l_a2G3c :: TyFun [a_a2FkL] [b_a2FkM])
type ScanrSym3 (t_a2G34 :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (t_a2G35 :: b_a2FkM) (t_a2G36 :: [a_a2FkL]) = Scanr t_a2G34 t_a2G35 t_a2G36
data Scanr1Sym0 (l_a2G25 :: TyFun (TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (TyFun [a_a2FkU] [a_a2FkU] -> *))
data Scanr1Sym1 (l_a2G28 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (l_a2G27 :: TyFun [a_a2FkU] [a_a2FkU])
type Scanr1Sym2 (t_a2G23 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (t_a2G24 :: [a_a2FkU]) = Scanr1 t_a2G23 t_a2G24
data MapAccumLSym0 (l_a2FZk :: TyFun (TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (TyFun acc_a2Fl1 (TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]) -> *) -> *))
data MapAccumLSym1 (l_a2FZn :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (l_a2FZm :: TyFun acc_a2Fl1 (TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]) -> *))
data MapAccumLSym2 (l_a2FZq :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (l_a2FZr :: acc_a2Fl1) (l_a2FZp :: TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]))
type MapAccumLSym3 (t_a2FZh :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (t_a2FZi :: acc_a2Fl1) (t_a2FZj :: [x_a2Fl2]) = MapAccumL t_a2FZh t_a2FZi t_a2FZj
data MapAccumRSym0 (l_a2FWy :: TyFun (TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (TyFun acc_a2Fld (TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]) -> *) -> *))
data MapAccumRSym1 (l_a2FWB :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (l_a2FWA :: TyFun acc_a2Fld (TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]) -> *))
data MapAccumRSym2 (l_a2FWE :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (l_a2FWF :: acc_a2Fld) (l_a2FWD :: TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]))
type MapAccumRSym3 (t_a2FWv :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (t_a2FWw :: acc_a2Fld) (t_a2FWx :: [x_a2Fle]) = MapAccumR t_a2FWv t_a2FWw t_a2FWx
data ReplicateSym0 (l_a2FuC :: TyFun Nat (TyFun a_a2Fqa [a_a2Fqa] -> *))
data ReplicateSym1 (l_a2FuF :: Nat) (l_a2FuE :: TyFun a_a2Fqa [a_a2Fqa])
type ReplicateSym2 (t_a2FuA :: Nat) (t_a2FuB :: a_a2Fqa) = Replicate t_a2FuA t_a2FuB
data UnfoldrSym0 (l_a2FW9 :: TyFun (TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (TyFun b_a2Flp [a_a2Flq] -> *))
data UnfoldrSym1 (l_a2FWc :: TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (l_a2FWb :: TyFun b_a2Flp [a_a2Flq])
type UnfoldrSym2 (t_a2FW7 :: TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (t_a2FW8 :: b_a2Flp) = Unfoldr t_a2FW7 t_a2FW8
data TakeSym0 (l_a2FxN :: TyFun Nat (TyFun [a_a2Fpg] [a_a2Fpg] -> *))
data TakeSym1 (l_a2FxQ :: Nat) (l_a2FxP :: TyFun [a_a2Fpg] [a_a2Fpg])
type TakeSym2 (t_a2FxL :: Nat) (t_a2FxM :: [a_a2Fpg]) = Take t_a2FxL t_a2FxM
data DropSym0 (l_a2Fxi :: TyFun Nat (TyFun [a_a2Fpk] [a_a2Fpk] -> *))
data DropSym1 (l_a2Fxl :: Nat) (l_a2Fxk :: TyFun [a_a2Fpk] [a_a2Fpk])
type DropSym2 (t_a2Fxg :: Nat) (t_a2Fxh :: [a_a2Fpk]) = Drop t_a2Fxg t_a2Fxh
data SplitAtSym0 (l_a2Fyi :: TyFun Nat (TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]) -> *))
data SplitAtSym1 (l_a2Fyl :: Nat) (l_a2Fyk :: TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]))
type SplitAtSym2 (t_a2Fyg :: Nat) (t_a2Fyh :: [a_a2Fpo]) = SplitAt t_a2Fyg t_a2Fyh
data TakeWhileSym0 (l_a2FDO :: TyFun (TyFun a_a2FoN Bool -> *) (TyFun [a_a2FoN] [a_a2FoN] -> *))
data TakeWhileSym1 (l_a2FDR :: TyFun a_a2FoN Bool -> *) (l_a2FDQ :: TyFun [a_a2FoN] [a_a2FoN])
type TakeWhileSym2 (t_a2FDM :: TyFun a_a2FoN Bool -> *) (t_a2FDN :: [a_a2FoN]) = TakeWhile t_a2FDM t_a2FDN
data DropWhileSym0 (l_a2FD6 :: TyFun (TyFun a_a2FoR Bool -> *) (TyFun [a_a2FoR] [a_a2FoR] -> *))
data DropWhileSym1 (l_a2FD9 :: TyFun a_a2FoR Bool -> *) (l_a2FD8 :: TyFun [a_a2FoR] [a_a2FoR])
type DropWhileSym2 (t_a2FD4 :: TyFun a_a2FoR Bool -> *) (t_a2FD5 :: [a_a2FoR]) = DropWhile t_a2FD4 t_a2FD5
data DropWhileEndSym0 (l_a2GiT :: TyFun (TyFun a_a2FoW Bool -> *) (TyFun [a_a2FoW] [a_a2FoW] -> *))
data DropWhileEndSym1 (l_a2GiW :: TyFun a_a2FoW Bool -> *) (l_a2GiV :: TyFun [a_a2FoW] [a_a2FoW])
type DropWhileEndSym2 (t_a2GiR :: TyFun a_a2FoW Bool -> *) (t_a2GiS :: [a_a2FoW]) = DropWhileEnd t_a2GiR t_a2GiS
data SpanSym0 (l_a2FAa :: TyFun (TyFun a_a2Fp0 Bool -> *) (TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]) -> *))
data SpanSym1 (l_a2FAd :: TyFun a_a2Fp0 Bool -> *) (l_a2FAc :: TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]))
type SpanSym2 (t_a2FA8 :: TyFun a_a2Fp0 Bool -> *) (t_a2FA9 :: [a_a2Fp0]) = Span t_a2FA8 t_a2FA9
data BreakSym0 (l_a2Fyt :: TyFun (TyFun a_a2Fp8 Bool -> *) (TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]) -> *))
data BreakSym1 (l_a2Fyw :: TyFun a_a2Fp8 Bool -> *) (l_a2Fyv :: TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]))
type BreakSym2 (t_a2Fyr :: TyFun a_a2Fp8 Bool -> *) (t_a2Fys :: [a_a2Fp8]) = Break t_a2Fyr t_a2Fys
data GroupSym0 (l_a2FD0 :: TyFun [a_a2Fpr] [[a_a2Fpr]])
type GroupSym1 (t_a2FCZ :: [a_a2Fpr]) = Group t_a2FCZ
data InitsSym0 (l_a2FVY :: TyFun [a_a2Flv] [[a_a2Flv]])
type InitsSym1 (t_a2FVX :: [a_a2Flv]) = Inits t_a2FVX
data TailsSym0 (l_a2FVB :: TyFun [a_a2Flz] [[a_a2Flz]])
type TailsSym1 (t_a2FVA :: [a_a2Flz]) = Tails t_a2FVA
data IsPrefixOfSym0 (l_a2FVd :: TyFun [a_a2FlC] (TyFun [a_a2FlC] Bool -> *))
data IsPrefixOfSym1 (l_a2FVg :: [a_a2FlC]) (l_a2FVf :: TyFun [a_a2FlC] Bool)
type IsPrefixOfSym2 (t_a2FVb :: [a_a2FlC]) (t_a2FVc :: [a_a2FlC]) = IsPrefixOf t_a2FVb t_a2FVc
data IsSuffixOfSym0 (l_a2Giy :: TyFun [a_a2FlH] (TyFun [a_a2FlH] Bool -> *))
data IsSuffixOfSym1 (l_a2GiB :: [a_a2FlH]) (l_a2GiA :: TyFun [a_a2FlH] Bool)
type IsSuffixOfSym2 (t_a2Giw :: [a_a2FlH]) (t_a2Gix :: [a_a2FlH]) = IsSuffixOf t_a2Giw t_a2Gix
data IsInfixOfSym0 (l_a2FVO :: TyFun [a_a2FlK] (TyFun [a_a2FlK] Bool -> *))
data IsInfixOfSym1 (l_a2FVR :: [a_a2FlK]) (l_a2FVQ :: TyFun [a_a2FlK] Bool)
type IsInfixOfSym2 (t_a2FVM :: [a_a2FlK]) (t_a2FVN :: [a_a2FlK]) = IsInfixOf t_a2FVM t_a2FVN
data ElemSym0 (l_a2FUc :: TyFun a_a2FlN (TyFun [a_a2FlN] Bool -> *))
data ElemSym1 (l_a2FUf :: a_a2FlN) (l_a2FUe :: TyFun [a_a2FlN] Bool)
type ElemSym2 (t_a2FUa :: a_a2FlN) (t_a2FUb :: [a_a2FlN]) = Elem t_a2FUa t_a2FUb
data NotElemSym0 (l_a2FTX :: TyFun a_a2FlR (TyFun [a_a2FlR] Bool -> *))
data NotElemSym1 (l_a2FU0 :: a_a2FlR) (l_a2FTZ :: TyFun [a_a2FlR] Bool)
type NotElemSym2 (t_a2FTV :: a_a2FlR) (t_a2FTW :: [a_a2FlR]) = NotElem t_a2FTV t_a2FTW
data LookupSym0 (l_a2FwI :: TyFun a_a2FpH (TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI) -> *))
data LookupSym1 (l_a2FwL :: a_a2FpH) (l_a2FwK :: TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI))
type LookupSym2 (t_a2FwG :: a_a2FpH) (t_a2FwH :: [(a_a2FpH, b_a2FpI)]) = Lookup t_a2FwG t_a2FwH
data FindSym0 (l_a2FEM :: TyFun (TyFun a_a2For Bool -> *) (TyFun [a_a2For] (Maybe a_a2For) -> *))
data FindSym1 (l_a2FEP :: TyFun a_a2For Bool -> *) (l_a2FEO :: TyFun [a_a2For] (Maybe a_a2For))
type FindSym2 (t_a2FEK :: TyFun a_a2For Bool -> *) (t_a2FEL :: [a_a2For]) = Find t_a2FEK t_a2FEL
data FilterSym0 (l_a2FEj :: TyFun (TyFun a_a2Fom Bool -> *) (TyFun [a_a2Fom] [a_a2Fom] -> *))
data FilterSym1 (l_a2FEm :: TyFun a_a2Fom Bool -> *) (l_a2FEl :: TyFun [a_a2Fom] [a_a2Fom])
type FilterSym2 (t_a2FEh :: TyFun a_a2Fom Bool -> *) (t_a2FEi :: [a_a2Fom]) = Filter t_a2FEh t_a2FEi
data PartitionSym0 (l_a2Fwx :: TyFun (TyFun a_a2FpO Bool -> *) (TyFun [a_a2FpO] ([a_a2FpO], [a_a2FpO]) -> *))
data PartitionSym1 (l_a2FwA :: TyFun a_a2FpO Bool -> *) (l_a2Fwz :: TyFun [a_a2FpO] ([a_a2FpO], [a_a2FpO]))
type PartitionSym2 (t_a2Fwv :: TyFun a_a2FpO Bool -> *) (t_a2Fww :: [a_a2FpO]) = Partition t_a2Fwv t_a2Fww
data (:!!$) (l_a2Fu7 :: TyFun [a_a2Fqi] (TyFun Nat a_a2Fqi -> *))
data (:!!$$) (l_a2Fua :: [a_a2Fqi]) (l_a2Fu9 :: TyFun Nat a_a2Fqi)
type (:!!$$$) (t_a2Fu5 :: [a_a2Fqi]) (t_a2Fu6 :: Nat) = (:!!) t_a2Fu5 t_a2Fu6
data ElemIndexSym0 (l_a2FTK :: TyFun a_a2Fot (TyFun [a_a2Fot] (Maybe Nat) -> *))
data ElemIndexSym1 (l_a2FTN :: a_a2Fot) (l_a2FTM :: TyFun [a_a2Fot] (Maybe Nat))
type ElemIndexSym2 (t_a2FTI :: a_a2Fot) (t_a2FTJ :: [a_a2Fot]) = ElemIndex t_a2FTI t_a2FTJ
data ElemIndicesSym0 (l_a2FTk :: TyFun a_a2Fov (TyFun [a_a2Fov] [Nat] -> *))
data ElemIndicesSym1 (l_a2FTn :: a_a2Fov) (l_a2FTm :: TyFun [a_a2Fov] [Nat])
type ElemIndicesSym2 (t_a2FTi :: a_a2Fov) (t_a2FTj :: [a_a2Fov]) = ElemIndices t_a2FTi t_a2FTj
data FindIndexSym0 (l_a2FTx :: TyFun (TyFun a_a2Fox Bool -> *) (TyFun [a_a2Fox] (Maybe Nat) -> *))
data FindIndexSym1 (l_a2FTA :: TyFun a_a2Fox Bool -> *) (l_a2FTz :: TyFun [a_a2Fox] (Maybe Nat))
type FindIndexSym2 (t_a2FTv :: TyFun a_a2Fox Bool -> *) (t_a2FTw :: [a_a2Fox]) = FindIndex t_a2FTv t_a2FTw
data FindIndicesSym0 (l_a2FSj :: TyFun (TyFun a_a2Foz Bool -> *) (TyFun [a_a2Foz] [Nat] -> *))
data FindIndicesSym1 (l_a2FSm :: TyFun a_a2Foz Bool -> *) (l_a2FSl :: TyFun [a_a2Foz] [Nat])
type FindIndicesSym2 (t_a2FSh :: TyFun a_a2Foz Bool -> *) (t_a2FSi :: [a_a2Foz]) = FindIndices t_a2FSh t_a2FSi
data ZipSym0 (l_a2FRU :: TyFun [a_a2FlV] (TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)] -> *))
data ZipSym1 (l_a2FRX :: [a_a2FlV]) (l_a2FRW :: TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)])
type ZipSym2 (t_a2FRS :: [a_a2FlV]) (t_a2FRT :: [b_a2FlW]) = Zip t_a2FRS t_a2FRT
data Zip3Sym0 (l_a2FQI :: TyFun [a_a2Fm1] (TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *) -> *))
data Zip3Sym1 (l_a2FQL :: [a_a2Fm1]) (l_a2FQK :: TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *))
data Zip3Sym2 (l_a2FQO :: [a_a2Fm1]) (l_a2FQP :: [b_a2Fm2]) (l_a2FQN :: TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
type Zip3Sym3 (t_a2FQF :: [a_a2Fm1]) (t_a2FQG :: [b_a2Fm2]) (t_a2FQH :: [c_a2Fm3]) = Zip3 t_a2FQF t_a2FQG t_a2FQH
data ZipWithSym0 (l_a2FQ3 :: TyFun (TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *) -> *))
data ZipWithSym1 (l_a2FQ6 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQ5 :: TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *))
data ZipWithSym2 (l_a2FQ9 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQa :: [a_a2Fma]) (l_a2FQ8 :: TyFun [b_a2Fmb] [c_a2Fmc])
type ZipWithSym3 (t_a2FQ0 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (t_a2FQ1 :: [a_a2Fma]) (t_a2FQ2 :: [b_a2Fmb]) = ZipWith t_a2FQ0 t_a2FQ1 t_a2FQ2
data ZipWith3Sym0 (l_a2FOo :: TyFun (TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *) -> *))
data ZipWith3Sym1 (l_a2FOr :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOq :: TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *))
data ZipWith3Sym2 (l_a2FOu :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOv :: [a_a2Fmi]) (l_a2FOt :: TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *))
data ZipWith3Sym3 (l_a2FOy :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOz :: [a_a2Fmi]) (l_a2FOA :: [b_a2Fmj]) (l_a2FOx :: TyFun [c_a2Fmk] [d_a2Fml])
type ZipWith3Sym4 (t_a2FOk :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (t_a2FOl :: [a_a2Fmi]) (t_a2FOm :: [b_a2Fmj]) (t_a2FOn :: [c_a2Fmk]) = ZipWith3 t_a2FOk t_a2FOl t_a2FOm t_a2FOn
data UnzipSym0 (l_a2FNR :: TyFun [(a_a2Fmt, b_a2Fmu)] ([a_a2Fmt], [b_a2Fmu]))
type UnzipSym1 (t_a2FNQ :: [(a_a2Fmt, b_a2Fmu)]) = Unzip t_a2FNQ
data Unzip3Sym0 (l_a2FNl :: TyFun [(a_a2FmA, b_a2FmB, c_a2FmC)] ([a_a2FmA], [b_a2FmB], [c_a2FmC]))
type Unzip3Sym1 (t_a2FNk :: [(a_a2FmA, b_a2FmB, c_a2FmC)]) = Unzip3 t_a2FNk
data Unzip4Sym0 (l_a2FMN :: TyFun [(a_a2FmK, b_a2FmL, c_a2FmM, d_a2FmN)] ([a_a2FmK], [b_a2FmL], [c_a2FmM], [d_a2FmN]))
type Unzip4Sym1 (t_a2FMM :: [(a_a2FmK, b_a2FmL, c_a2FmM, d_a2FmN)]) = Unzip4 t_a2FMM
data Unzip5Sym0 (l_a2FMd :: TyFun [(a_a2FmX, b_a2FmY, c_a2FmZ, d_a2Fn0, e_a2Fn1)] ([a_a2FmX], [b_a2FmY], [c_a2FmZ], [d_a2Fn0], [e_a2Fn1]))
type Unzip5Sym1 (t_a2FMc :: [(a_a2FmX, b_a2FmY, c_a2FmZ, d_a2Fn0, e_a2Fn1)]) = Unzip5 t_a2FMc
data Unzip6Sym0 (l_a2FLB :: TyFun [(a_a2Fnd, b_a2Fne, c_a2Fnf, d_a2Fng, e_a2Fnh, f_a2Fni)] ([a_a2Fnd], [b_a2Fne], [c_a2Fnf], [d_a2Fng], [e_a2Fnh], [f_a2Fni]))
type Unzip6Sym1 (t_a2FLA :: [(a_a2Fnd, b_a2Fne, c_a2Fnf, d_a2Fng, e_a2Fnh, f_a2Fni)]) = Unzip6 t_a2FLA
data Unzip7Sym0 (l_a2FKX :: TyFun [(a_a2Fnw, b_a2Fnx, c_a2Fny, d_a2Fnz, e_a2FnA, f_a2FnB, g_a2FnC)] ([a_a2Fnw], [b_a2Fnx], [c_a2Fny], [d_a2Fnz], [e_a2FnA], [f_a2FnB], [g_a2FnC]))
type Unzip7Sym1 (t_a2FKW :: [(a_a2Fnw, b_a2Fnx, c_a2Fny, d_a2Fnz, e_a2FnA, f_a2FnB, g_a2FnC)]) = Unzip7 t_a2FKW
data NubSym0 (l_a2FUq :: TyFun [a_a2Fhv] [a_a2Fhv])
type NubSym1 (t_a2FUp :: [a_a2Fhv]) = Nub t_a2FUp
data DeleteSym0 (l_a2FKy :: TyFun a_a2FnS (TyFun [a_a2FnS] [a_a2FnS] -> *))
data DeleteSym1 (l_a2FKB :: a_a2FnS) (l_a2FKA :: TyFun [a_a2FnS] [a_a2FnS])
type DeleteSym2 (t_a2FKw :: a_a2FnS) (t_a2FKx :: [a_a2FnS]) = Delete t_a2FKw t_a2FKx
data (:\\$) (l_a2FKN :: TyFun [a_a2FnT] (TyFun [a_a2FnT] [a_a2FnT] -> *))
data (:\\$$) (l_a2FKQ :: [a_a2FnT]) (l_a2FKP :: TyFun [a_a2FnT] [a_a2FnT])
type (:\\$$$) (t_a2FKL :: [a_a2FnT]) (t_a2FKM :: [a_a2FnT]) = (:\\) t_a2FKL t_a2FKM
data UnionSym0 (l_a2FKj :: TyFun [a_a2FqH] (TyFun [a_a2FqH] [a_a2FqH] -> *))
data UnionSym1 (l_a2FKm :: [a_a2FqH]) (l_a2FKl :: TyFun [a_a2FqH] [a_a2FqH])
type UnionSym2 (t_a2FKh :: [a_a2FqH]) (t_a2FKi :: [a_a2FqH]) = Union t_a2FKh t_a2FKi
data IntersectSym0 (l_a2FH8 :: TyFun [a_a2FoH] (TyFun [a_a2FoH] [a_a2FoH] -> *))
data IntersectSym1 (l_a2FHb :: [a_a2FoH]) (l_a2FHa :: TyFun [a_a2FoH] [a_a2FoH])
type IntersectSym2 (t_a2FH6 :: [a_a2FoH]) (t_a2FH7 :: [a_a2FoH]) = Intersect t_a2FH6 t_a2FH7
data InsertSym0 (l_a2FIl :: TyFun a_a2Fpx (TyFun [a_a2Fpx] [a_a2Fpx] -> *))
data InsertSym1 (l_a2FIo :: a_a2Fpx) (l_a2FIn :: TyFun [a_a2Fpx] [a_a2Fpx])
type InsertSym2 (t_a2FIj :: a_a2Fpx) (t_a2FIk :: [a_a2Fpx]) = Insert t_a2FIj t_a2FIk
data SortSym0 (l_a2FIK :: TyFun [a_a2FpA] [a_a2FpA])
type SortSym1 (t_a2FIJ :: [a_a2FpA]) = Sort t_a2FIJ
data NubBySym0 (l_a2Ft2 :: TyFun (TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (TyFun [a_a2Fqr] [a_a2Fqr] -> *))
data NubBySym1 (l_a2Ft5 :: TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (l_a2Ft4 :: TyFun [a_a2Fqr] [a_a2Fqr])
type NubBySym2 (t_a2Ft0 :: TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (t_a2Ft1 :: [a_a2Fqr]) = NubBy t_a2Ft0 t_a2Ft1
data DeleteBySym0 (l_a2FIR :: TyFun (TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (TyFun a_a2FnU (TyFun [a_a2FnU] [a_a2FnU] -> *) -> *))
data DeleteBySym1 (l_a2FIU :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (l_a2FIT :: TyFun a_a2FnU (TyFun [a_a2FnU] [a_a2FnU] -> *))
data DeleteBySym2 (l_a2FIX :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (l_a2FIY :: a_a2FnU) (l_a2FIW :: TyFun [a_a2FnU] [a_a2FnU])
type DeleteBySym3 (t_a2FIO :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (t_a2FIP :: a_a2FnU) (t_a2FIQ :: [a_a2FnU]) = DeleteBy t_a2FIO t_a2FIP t_a2FIQ
data DeleteFirstsBySym0 (l_a2FJC :: TyFun (TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (TyFun [a_a2FnZ] (TyFun [a_a2FnZ] [a_a2FnZ] -> *) -> *))
data DeleteFirstsBySym1 (l_a2FJF :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (l_a2FJE :: TyFun [a_a2FnZ] (TyFun [a_a2FnZ] [a_a2FnZ] -> *))
data DeleteFirstsBySym2 (l_a2FJI :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (l_a2FJJ :: [a_a2FnZ]) (l_a2FJH :: TyFun [a_a2FnZ] [a_a2FnZ])
type DeleteFirstsBySym3 (t_a2FJz :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (t_a2FJA :: [a_a2FnZ]) (t_a2FJB :: [a_a2FnZ]) = DeleteFirstsBy t_a2FJz t_a2FJA t_a2FJB
data UnionBySym0 (l_a2FJY :: TyFun (TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (TyFun [a_a2FqD] (TyFun [a_a2FqD] [a_a2FqD] -> *) -> *))
data UnionBySym1 (l_a2FK1 :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (l_a2FK0 :: TyFun [a_a2FqD] (TyFun [a_a2FqD] [a_a2FqD] -> *))
data UnionBySym2 (l_a2FK4 :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (l_a2FK5 :: [a_a2FqD]) (l_a2FK3 :: TyFun [a_a2FqD] [a_a2FqD])
type UnionBySym3 (t_a2FJV :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (t_a2FJW :: [a_a2FqD]) (t_a2FJX :: [a_a2FqD]) = UnionBy t_a2FJV t_a2FJW t_a2FJX
data IntersectBySym0 (l_a2FF0 :: TyFun (TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (TyFun [a_a2FoI] (TyFun [a_a2FoI] [a_a2FoI] -> *) -> *))
data IntersectBySym1 (l_a2FF3 :: TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (l_a2FF2 :: TyFun [a_a2FoI] (TyFun [a_a2FoI] [a_a2FoI] -> *))
data IntersectBySym2 (l_a2FF6 :: TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (l_a2FF7 :: [a_a2FoI]) (l_a2FF5 :: TyFun [a_a2FoI] [a_a2FoI])
type IntersectBySym3 (t_a2FEX :: TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (t_a2FEY :: [a_a2FoI]) (t_a2FEZ :: [a_a2FoI]) = IntersectBy t_a2FEX t_a2FEY t_a2FEZ
data GroupBySym0 (l_a2FBR :: TyFun (TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (TyFun [a_a2FpB] [[a_a2FpB]] -> *))
data GroupBySym1 (l_a2FBU :: TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (l_a2FBT :: TyFun [a_a2FpB] [[a_a2FpB]])
type GroupBySym2 (t_a2FBP :: TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (t_a2FBQ :: [a_a2FpB]) = GroupBy t_a2FBP t_a2FBQ
data SortBySym0 (l_a2FIw :: TyFun (TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (TyFun [a_a2Fo1] [a_a2Fo1] -> *))
data SortBySym1 (l_a2FIz :: TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (l_a2FIy :: TyFun [a_a2Fo1] [a_a2Fo1])
type SortBySym2 (t_a2FIu :: TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (t_a2FIv :: [a_a2Fo1]) = SortBy t_a2FIu t_a2FIv
data InsertBySym0 (l_a2FHk :: TyFun (TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (TyFun a_a2Fo3 (TyFun [a_a2Fo3] [a_a2Fo3] -> *) -> *))
data InsertBySym1 (l_a2FHn :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (l_a2FHm :: TyFun a_a2Fo3 (TyFun [a_a2Fo3] [a_a2Fo3] -> *))
data InsertBySym2 (l_a2FHq :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (l_a2FHr :: a_a2Fo3) (l_a2FHp :: TyFun [a_a2Fo3] [a_a2Fo3])
type InsertBySym3 (t_a2FHh :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (t_a2FHi :: a_a2Fo3) (t_a2FHj :: [a_a2Fo3]) = InsertBy t_a2FHh t_a2FHi t_a2FHj
data MaximumBySym0 (l_a2G66 :: TyFun (TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (TyFun [a_a2Foa] a_a2Foa -> *))
data MaximumBySym1 (l_a2G69 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (l_a2G68 :: TyFun [a_a2Foa] a_a2Foa)
type MaximumBySym2 (t_a2G64 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (t_a2G65 :: [a_a2Foa]) = MaximumBy t_a2G64 t_a2G65
data MinimumBySym0 (l_a2G7v :: TyFun (TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (TyFun [a_a2Fog] a_a2Fog -> *))
data MinimumBySym1 (l_a2G7y :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (l_a2G7x :: TyFun [a_a2Fog] a_a2Fog)
type MinimumBySym2 (t_a2G7t :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (t_a2G7u :: [a_a2Fog]) = MinimumBy t_a2G7t t_a2G7u
data GenericLengthSym0 (l_a2Fsu :: TyFun [a_a2FqI] i_a2FqJ)
type GenericLengthSym1 (t_a2Fst :: [a_a2FqI]) = GenericLength t_a2Fst
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026048Scrutinee_1628025969Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026048Scrutinee_1628025969Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026048Scrutinee_1628025969Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026048Scrutinee_1628025969Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026048Scrutinee_1628025969Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026021NubBy'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026021NubBy'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026021NubBy'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026021NubBy'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026092Scrutinee_1628025965Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026092Scrutinee_1628025965Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026092Scrutinee_1628025965Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026119Scrutinee_1628025963Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026119Scrutinee_1628025963Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026143ProdSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026143ProdSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026143ProdSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026167Sum'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026167Sum'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026167Sum'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026205Scrutinee_1628025961Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026205Scrutinee_1628025961Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026205Scrutinee_1628025961Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026205Scrutinee_1628025961Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026252Scrutinee_1628025959Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026252Scrutinee_1628025959Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026252Scrutinee_1628025959Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026252Scrutinee_1628025959Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026289Scrutinee_1628025949Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026289Scrutinee_1628025949Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026289Scrutinee_1628025949Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026320Scrutinee_1628025947Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026320Scrutinee_1628025947Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026320Scrutinee_1628025947Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026359XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026366XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026366XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026366XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026379Scrutinee_1628025945Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026379Scrutinee_1628025945Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026379Scrutinee_1628025945Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394ZsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394ZsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394ZsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394X_1628026395Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394X_1628026395Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026394X_1628026395Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026464XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026471XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026471XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026471XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026484Scrutinee_1628025943Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026484Scrutinee_1628025943Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026484Scrutinee_1628025943Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499ZsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499ZsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499ZsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499X_1628026500Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499X_1628026500Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026499X_1628026500Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572ZsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572ZsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572ZsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572X_1628026573Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572X_1628026573Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026572X_1628026573Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026649XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026649XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026649XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026662Scrutinee_1628025939Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026662Scrutinee_1628025939Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026662Scrutinee_1628025939Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026693Scrutinee_1628025937Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026693Scrutinee_1628025937Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026693Scrutinee_1628025937Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026722Scrutinee_1628025925Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026722Scrutinee_1628025925Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026722Scrutinee_1628025925Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792XsSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792XsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792YsSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792YsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026792YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628026843Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026918YsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026918YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026918YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026918YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026937Scrutinee_1628025911Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026937Scrutinee_1628025911Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026937Scrutinee_1628025911Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628026937Scrutinee_1628025911Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027015Scrutinee_1628025909Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027015Scrutinee_1628025909Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027015Scrutinee_1628025909Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027015Scrutinee_1628025909Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027127Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027127Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027127Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027167Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027167Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027167Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027205Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027205Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027205Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027241Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027241Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027241Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027275Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027275Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027275Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027307Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027307Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027307Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027588BuildListSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027588BuildListSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027588BuildListSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027588BuildListSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027617Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027617Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628027617Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027735Scrutinee_1628025967Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027735Scrutinee_1628025967Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027735Scrutinee_1628025967Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027735Scrutinee_1628025967Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027714Nub'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027714Nub'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027714Nub'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027826Scrutinee_1628025883Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027826Scrutinee_1628025883Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S''Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S''Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S''Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862S''Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862YSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027863Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027863Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027863Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027863Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027869Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027869Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027869Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628027862X_1628027869Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S''Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S''Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S''Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034S''Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034YsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028035Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028035Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028035Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028035Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028041Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028041Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028041Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028034X_1628028041Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028203XsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028203XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028203XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028203XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028222Scrutinee_1628025877Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028222Scrutinee_1628025877Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028222Scrutinee_1628025877Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028222Scrutinee_1628025877Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028269Scrutinee_1628025875Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028269Scrutinee_1628025875Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028269Scrutinee_1628025875Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028269Scrutinee_1628025875Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028395XsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028395XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028395XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028395XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028447XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028447XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028447XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028490Scrutinee_1628025913Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028490Scrutinee_1628025913Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028490Scrutinee_1628025913Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028490Scrutinee_1628025913Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028490Scrutinee_1628025913Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028460MaxBySym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028460MaxBySym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028460MaxBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028460MaxBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028460MaxBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028534XsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028534XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028534XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028577Scrutinee_1628025919Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028577Scrutinee_1628025919Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028577Scrutinee_1628025919Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028577Scrutinee_1628025919Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028577Scrutinee_1628025919Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028547MinBySym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028547MinBySym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028547MinBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028547MinBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028547MinBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028612XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028612XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028626XsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028626XsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028684Z'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028652LgoSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028652LgoSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028652LgoSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028652LgoSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028652LgoSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym7
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813UsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym7
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813ZsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym7
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028813X_1628028814Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027ZsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029027X_1628029028Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759Interleave'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028759InterleaveSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028738PermsSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028738PermsSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628028738PermsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029126FSym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029126FSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029126FSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029126FSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029185RevSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029185RevSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029185RevSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029242Scrutinee_1628025941Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029242Scrutinee_1628025941Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029242Scrutinee_1628025941Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029242Scrutinee_1628025941Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628029238Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628029238Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628029238Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Lambda_1628029238Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029290Init'Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029290Init'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029290Init'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Let1628029290Init'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.GenericLengthSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Elem_bySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Elem_bySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Elem_bySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NubBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NubBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.List.:!!$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.List.:!!$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ReplicateSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ReplicateSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.LengthSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ProductSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SelectSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SelectSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SelectSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.PartitionSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.PartitionSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.LookupSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.LookupSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TakeSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TakeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SplitAtSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SplitAtSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.BreakSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.BreakSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SpanSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SpanSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.GroupBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.GroupBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.GroupSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropWhileSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropWhileSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TakeWhileSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TakeWhileSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FilterSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FilterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersectBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersectBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersectBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersectSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersectSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InsertBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InsertBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InsertBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InsertSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InsertSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SortBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SortBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SortSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteFirstsBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteFirstsBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteFirstsBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnionBySym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnionBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnionBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnionSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnionSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DeleteSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.List.:\\$$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Singletons.Prelude.List.:\\$)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Unzip7Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Unzip6Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Unzip5Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Unzip4Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Unzip3Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnzipSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWith3Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWith3Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWith3Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWith3Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWithSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWithSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipWithSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Zip3Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Zip3Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Zip3Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ZipSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindIndicesSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindIndicesSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemIndicesSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemIndicesSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindIndexSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.FindIndexSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemIndexSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemIndexSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NotElemSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NotElemSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ElemSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NubSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsPrefixOfSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsPrefixOfSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TailsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsInfixOfSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsInfixOfSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InitsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnfoldrSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.UnfoldrSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumRSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumRSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumRSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumLSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumLSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MapAccumLSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Scanr1Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Scanr1Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanrSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanrSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanrSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanlSym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanlSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ScanlSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Scanl1Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Scanl1Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.AllSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.AllSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.OrSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.AndSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ConcatMapSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ConcatMapSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ConcatSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldr1Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldr1Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl1Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl1Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MaximumBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MaximumBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MinimumBySym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MinimumBySym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MaximumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.MinimumSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl'Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl1'Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Foldl1'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.PermutationsSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.PrependToAllSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.PrependToAllSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NonEmptySubsequencesSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.SubsequencesSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersperseSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntersperseSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntercalateSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IntercalateSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.ReverseSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsSuffixOfSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.IsSuffixOfSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.NullSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropWhileEndSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.DropWhileEndSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.InitSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TailSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.LastSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.HeadSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.TransposeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Any_Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Singletons.Prelude.List.Any_Sym0


-- | Mimics the Haskell Prelude, but with singleton types. Includes the
--   basic singleton definitions. Note: This is currently very incomplete!
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Also, please
--   excuse the apparent repeated variable names. This is due to an
--   interaction between Template Haskell and Haddock.
module Data.Singletons.Prelude

-- | The singleton kind-indexed data family.
type SBool = (Sing :: Bool -> *)
type SList = (Sing :: [a_12] -> *)
type SMaybe = (Sing :: Maybe a_a7tJ -> *)
type SEither = (Sing :: Either a_a9Wj b_a9Wk -> *)
type SOrdering = (Sing :: Ordering -> *)
type STuple0 = (Sing :: () -> *)
type STuple2 = (Sing :: (a_12, b_13) -> *)
type STuple3 = (Sing :: (a_12, b_13, c_14) -> *)
type STuple4 = (Sing :: (a_12, b_13, c_14, d_15) -> *)
type STuple5 = (Sing :: (a_12, b_13, c_14, d_15, e_16) -> *)
type STuple6 = (Sing :: (a_12, b_13, c_14, d_15, e_16, f_17) -> *)
type STuple7 = (Sing :: (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *)

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>

-- | Conditional over singletons
sIf :: Sing a -> Sing b -> Sing c -> Sing (If a b c)
sNot :: Sing t_a1EWL -> Sing (Apply NotSym0 t_a1EWL :: Bool)
(%:&&) :: Sing t_a1EWO -> Sing t_a1EWP -> Sing (Apply (Apply (:&&$) t_a1EWO) t_a1EWP :: Bool)
(%:||) :: Sing t_a1EWM -> Sing t_a1EWN -> Sing (Apply (Apply (:||$) t_a1EWM) t_a1EWN :: Bool)
sOtherwise :: Sing (OtherwiseSym0 :: Bool)

-- | The promotion of <a>error</a>. This version is more poly-kinded for
--   easier use.
data ErrorSym0 (l_a27XX :: TyFun k0_a27Iz k_a27Iy)

-- | The singleton for <a>error</a>
sError :: Sing (str :: Symbol) -> a
sId :: Sing t_a24uz -> Sing (Apply IdSym0 t_a24uz :: a_a24rc)
sConst :: Sing t_a24uv -> Sing t_a24uw -> Sing (Apply (Apply ConstSym0 t_a24uv) t_a24uw :: a_a24re)
(%:.) :: Sing t_a24us -> Sing t_a24ut -> Sing t_a24uu -> Sing (Apply (Apply (Apply (:.$) t_a24us) t_a24ut) t_a24uu :: c_a24ri)
(%$) :: Sing f -> Sing x -> Sing ((($$) @@ f) @@ x)
(%$!) :: Sing f -> Sing x -> Sing ((($!$) @@ f) @@ x)
sFlip :: Sing t_a24up -> Sing t_a24uq -> Sing t_a24ur -> Sing (Apply (Apply (Apply FlipSym0 t_a24up) t_a24uq) t_a24ur :: c_a24rp)
sAsTypeOf :: Sing t_a24ux -> Sing t_a24uy -> Sing (Apply (Apply AsTypeOfSym0 t_a24ux) t_a24uy :: a_a24rt)
sSeq :: Sing t_a24un -> Sing t_a24uo -> Sing (Apply (Apply SeqSym0 t_a24un) t_a24uo :: b_a24rv)
sMap :: Sing t_a24uC -> Sing t_a24uD -> Sing (Apply (Apply MapSym0 t_a24uC) t_a24uD :: [b_a24r3])
(%:++) :: Sing t_a24uA -> Sing t_a24uB -> Sing (Apply (Apply (:++$) t_a24uA) t_a24uB :: [a_a24r7])
sHead :: Sing t_a2Gnx -> Sing (Apply HeadSym0 t_a2Gnx :: a_a2Fj2)
sLast :: Sing t_a2Gnw -> Sing (Apply LastSym0 t_a2Gnw :: a_a2Fj4)
sTail :: Sing t_a2Gnv -> Sing (Apply TailSym0 t_a2Gnv :: [a_a2Fj8])
sInit :: Sing t_a2Gnu -> Sing (Apply InitSym0 t_a2Gnu :: [a_a2Fja])
sNull :: Sing t_a2Gnr -> Sing (Apply NullSym0 t_a2Gnr :: Bool)
sReverse :: Sing t_a2Gno -> Sing (Apply ReverseSym0 t_a2Gno :: [a_a2Fjj])
sFoldl :: Sing t_a1w3y -> Sing t_a1w3z -> Sing t_a1w3A -> Sing (Apply (Apply (Apply FoldlSym0 t_a1w3y) t_a1w3z) t_a1w3A :: b_a1w2A)
sFoldl1 :: Sing t_a2Gn2 -> Sing t_a2Gn3 -> Sing (Apply (Apply Foldl1Sym0 t_a2Gn2) t_a2Gn3 :: a_a2Fkb)
sFoldr :: Sing t_a24uE -> Sing t_a24uF -> Sing t_a24uG -> Sing (Apply (Apply (Apply FoldrSym0 t_a24uE) t_a24uF) t_a24uG :: b_a24qW)
sFoldr1 :: Sing t_a2Gn0 -> Sing t_a2Gn1 -> Sing (Apply (Apply Foldr1Sym0 t_a2Gn0) t_a2Gn1 :: a_a2Fkj)
sAnd :: Sing t_a2GmW -> Sing (Apply AndSym0 t_a2GmW :: Bool)
sOr :: Sing t_a2GmV -> Sing (Apply OrSym0 t_a2GmV :: Bool)
sAny_ :: Sing t_a2CvR -> Sing t_a2CvS -> Sing (Apply (Apply Any_Sym0 t_a2CvR) t_a2CvS :: Bool)
sAll :: Sing t_a2GmT -> Sing t_a2GmU -> Sing (Apply (Apply AllSym0 t_a2GmT) t_a2GmU :: Bool)
sConcat :: Sing t_a2GmZ -> Sing (Apply ConcatSym0 t_a2GmZ :: [a_a2Fko])
sConcatMap :: Sing t_a2GmX -> Sing t_a2GmY -> Sing (Apply (Apply ConcatMapSym0 t_a2GmX) t_a2GmY :: [b_a2Fkq])
sScanl :: Sing t_a2GmO -> Sing t_a2GmP -> Sing t_a2GmQ -> Sing (Apply (Apply (Apply ScanlSym0 t_a2GmO) t_a2GmP) t_a2GmQ :: [b_a2FkA])
sScanl1 :: Sing t_a2GmR -> Sing t_a2GmS -> Sing (Apply (Apply Scanl1Sym0 t_a2GmR) t_a2GmS :: [a_a2FkH])
sScanr :: Sing t_a2GmL -> Sing t_a2GmM -> Sing t_a2GmN -> Sing (Apply (Apply (Apply ScanrSym0 t_a2GmL) t_a2GmM) t_a2GmN :: [b_a2FkM])
sScanr1 :: Sing t_a2GmJ -> Sing t_a2GmK -> Sing (Apply (Apply Scanr1Sym0 t_a2GmJ) t_a2GmK :: [a_a2FkU])
sElem :: SEq (KProxy :: KProxy a_a2FlN) => Sing t_a2Gms -> Sing t_a2Gmt -> Sing (Apply (Apply ElemSym0 t_a2Gms) t_a2Gmt :: Bool)
sNotElem :: SEq (KProxy :: KProxy a_a2FlR) => Sing t_a2Gmq -> Sing t_a2Gmr -> Sing (Apply (Apply NotElemSym0 t_a2Gmq) t_a2Gmr :: Bool)
sZip :: Sing t_a2Gmg -> Sing t_a2Gmh -> Sing (Apply (Apply ZipSym0 t_a2Gmg) t_a2Gmh :: [(a_a2FlV, b_a2FlW)])
sZip3 :: Sing t_a2Gmd -> Sing t_a2Gme -> Sing t_a2Gmf -> Sing (Apply (Apply (Apply Zip3Sym0 t_a2Gmd) t_a2Gme) t_a2Gmf :: [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
sZipWith :: Sing t_a2Gma -> Sing t_a2Gmb -> Sing t_a2Gmc -> Sing (Apply (Apply (Apply ZipWithSym0 t_a2Gma) t_a2Gmb) t_a2Gmc :: [c_a2Fmc])
sZipWith3 :: Sing t_a2Gm6 -> Sing t_a2Gm7 -> Sing t_a2Gm8 -> Sing t_a2Gm9 -> Sing (Apply (Apply (Apply (Apply ZipWith3Sym0 t_a2Gm6) t_a2Gm7) t_a2Gm8) t_a2Gm9 :: [d_a2Fml])
sUnzip :: Sing t_a2Gm5 -> Sing (Apply UnzipSym0 t_a2Gm5 :: ([a_a2Fmt], [b_a2Fmu]))
sUnzip3 :: Sing t_a2Gm4 -> Sing (Apply Unzip3Sym0 t_a2Gm4 :: ([a_a2FmA], [b_a2FmB], [c_a2FmC]))
sMaybe_ :: Sing t_a2hlR -> Sing t_a2hlS -> Sing t_a2hlT -> Sing (Apply (Apply (Apply Maybe_Sym0 t_a2hlR) t_a2hlS) t_a2hlT :: b_a2hlg)
sEither_ :: Sing t_a2cSO -> Sing t_a2cSP -> Sing t_a2cSQ -> Sing (Apply (Apply (Apply Either_Sym0 t_a2cSO) t_a2cSP) t_a2cSQ :: c_a2cSi)
sFst :: Sing t_a2fDt -> Sing (Apply FstSym0 t_a2fDt :: a_a2fCd)
sSnd :: Sing t_a2fDs -> Sing (Apply SndSym0 t_a2fDs :: b_a2fCh)
sCurry :: Sing t_a2fDp -> Sing t_a2fDq -> Sing t_a2fDr -> Sing (Apply (Apply (Apply CurrySym0 t_a2fDp) t_a2fDq) t_a2fDr :: c_a2fCl)
sUncurry :: Sing t_a2fDu -> Sing t_a2fDv -> Sing (Apply (Apply UncurrySym0 t_a2fDu) t_a2fDv :: c_a2fCr)

-- | (Kind) This is the kind of type-level symbols.
data Symbol :: *
either_ :: (a_a2cSh -> c_a2cSi) -> (b_a2cSj -> c_a2cSi) -> Either a_a2cSh b_a2cSj -> c_a2cSi
maybe_ :: b_a2hlg -> (a_a2hlh -> b_a2hlg) -> Maybe a_a2hlh -> b_a2hlg
bool_ :: a_a1EJT -> a_a1EJT -> Bool -> a_a1EJT
any_ :: (a_a2Cvx -> Bool) -> [a_a2Cvx] -> Bool
type FalseSym0 = False
type TrueSym0 = True
data NotSym0 (l_a1EWi :: TyFun Bool Bool)
type NotSym1 (t_a1EWh :: Bool) = Not t_a1EWh
data (:&&$) (l_a1EWA :: TyFun Bool (TyFun Bool Bool -> *))
data (:&&$$) (l_a1EWD :: Bool) (l_a1EWC :: TyFun Bool Bool)
type (:&&$$$) (t_a1EWy :: Bool) (t_a1EWz :: Bool) = (:&&) t_a1EWy t_a1EWz
data (:||$) (l_a1EWn :: TyFun Bool (TyFun Bool Bool -> *))
data (:||$$) (l_a1EWq :: Bool) (l_a1EWp :: TyFun Bool Bool)
type (:||$$$) (t_a1EWl :: Bool) (t_a1EWm :: Bool) = (:||) t_a1EWl t_a1EWm
type OtherwiseSym0 = Otherwise
type NothingSym0 = Nothing
data JustSym0 (l_a1sR7 :: TyFun a_a7tJ (Maybe a_a7tJ))
type JustSym1 (t_a1sR6 :: a_a7tJ) = Just t_a1sR6
data Maybe_Sym0 (l_a2hlw :: TyFun b_a2hlg (TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *) -> *))
data Maybe_Sym1 (l_a2hlz :: b_a2hlg) (l_a2hly :: TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *))
data Maybe_Sym2 (l_a2hlC :: b_a2hlg) (l_a2hlD :: TyFun a_a2hlh b_a2hlg -> *) (l_a2hlB :: TyFun (Maybe a_a2hlh) b_a2hlg)
type Maybe_Sym3 (t_a2hlt :: b_a2hlg) (t_a2hlu :: TyFun a_a2hlh b_a2hlg -> *) (t_a2hlv :: Maybe a_a2hlh) = Maybe_ t_a2hlt t_a2hlu t_a2hlv
data LeftSym0 (l_a1sRy :: TyFun a_a9Wj (Either a_a9Wj b_a9Wk))
type LeftSym1 (t_a1sRx :: a_a9Wj) = Left t_a1sRx
data RightSym0 (l_a1sRB :: TyFun b_a9Wk (Either a_a9Wj b_a9Wk))
type RightSym1 (t_a1sRA :: b_a9Wk) = Right t_a1sRA
data Either_Sym0 (l_a2cSs :: TyFun (TyFun a_a2cSh c_a2cSi -> *) (TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *) -> *))
data Either_Sym1 (l_a2cSv :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSu :: TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *))
data Either_Sym2 (l_a2cSy :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSz :: TyFun b_a2cSj c_a2cSi -> *) (l_a2cSx :: TyFun (Either a_a2cSh b_a2cSj) c_a2cSi)
type Either_Sym3 (t_a2cSp :: TyFun a_a2cSh c_a2cSi -> *) (t_a2cSq :: TyFun b_a2cSj c_a2cSi -> *) (t_a2cSr :: Either a_a2cSh b_a2cSj) = Either_ t_a2cSp t_a2cSq t_a2cSr
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data FstSym0 (l_a2fD6 :: TyFun (a_a2fCd, b_a2fCe) a_a2fCd)
type FstSym1 (t_a2fD5 :: (a_a2fCd, b_a2fCe)) = Fst t_a2fD5
data SndSym0 (l_a2fCY :: TyFun (a_a2fCg, b_a2fCh) b_a2fCh)
type SndSym1 (t_a2fCX :: (a_a2fCg, b_a2fCh)) = Snd t_a2fCX
data CurrySym0 (l_a2fCI :: TyFun (TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *) -> *))
data CurrySym1 (l_a2fCL :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCK :: TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *))
data CurrySym2 (l_a2fCO :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCP :: a_a2fCj) (l_a2fCN :: TyFun b_a2fCk c_a2fCl)
type CurrySym3 (t_a2fCF :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (t_a2fCG :: a_a2fCj) (t_a2fCH :: b_a2fCk) = Curry t_a2fCF t_a2fCG t_a2fCH
data UncurrySym0 (l_a2fDf :: TyFun (TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (TyFun (a_a2fCp, b_a2fCq) c_a2fCr -> *))
data UncurrySym1 (l_a2fDi :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (l_a2fDh :: TyFun (a_a2fCp, b_a2fCq) c_a2fCr)
type UncurrySym2 (t_a2fDd :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (t_a2fDe :: (a_a2fCp, b_a2fCq)) = Uncurry t_a2fDd t_a2fDe
data IdSym0 (l_a24tb :: TyFun a_a24rc a_a24rc)
type IdSym1 (t_a24ta :: a_a24rc) = Id t_a24ta
data ConstSym0 (l_a24sK :: TyFun a_a24re (TyFun b_a24rf a_a24re -> *))
data ConstSym1 (l_a24sN :: a_a24re) (l_a24sM :: TyFun b_a24rf a_a24re)
type ConstSym2 (t_a24sI :: a_a24re) (t_a24sJ :: b_a24rf) = Const t_a24sI t_a24sJ
data (:.$) (l_a24s5 :: TyFun (TyFun b_a24rh c_a24ri -> *) (TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *) -> *))
data (:.$$) (l_a24s8 :: TyFun b_a24rh c_a24ri -> *) (l_a24s7 :: TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *))
data (:.$$$) (l_a24sb :: TyFun b_a24rh c_a24ri -> *) (l_a24sc :: TyFun a_a24rj b_a24rh -> *) (l_a24sa :: TyFun a_a24rj c_a24ri)
data ($$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($$$$) a b = ($) a b
data ($!$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($!$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($!$$$) a b = ($!) a b
data FlipSym0 (l_a24rN :: TyFun (TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *) -> *))
data FlipSym1 (l_a24rQ :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rP :: TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *))
data FlipSym2 (l_a24rT :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rU :: b_a24ro) (l_a24rS :: TyFun a_a24rn c_a24rp)
data AsTypeOfSym0 (l_a24t1 :: TyFun a_a24rt (TyFun a_a24rt a_a24rt -> *))
data AsTypeOfSym1 (l_a24t4 :: a_a24rt) (l_a24t3 :: TyFun a_a24rt a_a24rt)
type AsTypeOfSym2 (t_a24sZ :: a_a24rt) (t_a24t0 :: a_a24rt) = AsTypeOf t_a24sZ t_a24t0
data SeqSym0 (l_a24rz :: TyFun a_a24ru (TyFun b_a24rv b_a24rv -> *))
data SeqSym1 (l_a24rC :: a_a24ru) (l_a24rB :: TyFun b_a24rv b_a24rv)
type SeqSym2 (t_a24rx :: a_a24ru) (t_a24ry :: b_a24rv) = Seq t_a24rx t_a24ry
data (:$) (l_a1sRh :: TyFun a_12 (TyFun [a_12] [a_12] -> *))
data (:$$) (l_a1sRk :: a_12) (l_a1sRj :: TyFun [a_12] [a_12])
type (:$$$) (t_a1sRf :: a_12) (t_a1sRg :: [a_12]) = (:) t_a1sRf t_a1sRg
type NilSym0 = '[]
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data ReverseSym0 (l_a2Gi9 :: TyFun [a_a2Fjj] [a_a2Fjj])
type ReverseSym1 (t_a2Gi8 :: [a_a2Fjj]) = Reverse t_a2Gi8
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data HeadSym0 (l_a2GkE :: TyFun [a_a2Fj2] a_a2Fj2)
type HeadSym1 (t_a2GkD :: [a_a2Fj2]) = Head t_a2GkD
data LastSym0 (l_a2Gku :: TyFun [a_a2Fj4] a_a2Fj4)
type LastSym1 (t_a2Gkt :: [a_a2Fj4]) = Last t_a2Gkt
data TailSym0 (l_a2Gkm :: TyFun [a_a2Fj8] [a_a2Fj8])
type TailSym1 (t_a2Gkl :: [a_a2Fj8]) = Tail t_a2Gkl
data InitSym0 (l_a2GjP :: TyFun [a_a2Fja] [a_a2Fja])
type InitSym1 (t_a2GjO :: [a_a2Fja]) = Init t_a2GjO
data NullSym0 (l_a2GiI :: TyFun [a_a2Fji] Bool)
type NullSym1 (t_a2GiH :: [a_a2Fji]) = Null t_a2GiH
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))
data FoldlSym1 (l_a1w2Q :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2P :: TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *))
data FoldlSym2 (l_a1w2T :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2U :: b_a1w2A) (l_a1w2S :: TyFun [a_a1w2z] b_a1w2A)
type FoldlSym3 (t_a1w2K :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (t_a1w2L :: b_a1w2A) (t_a1w2M :: [a_a1w2z]) = Foldl t_a1w2K t_a1w2L t_a1w2M
data Foldl1Sym0 (l_a2G5R :: TyFun (TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (TyFun [a_a2Fkb] a_a2Fkb -> *))
data Foldl1Sym1 (l_a2G5U :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (l_a2G5T :: TyFun [a_a2Fkb] a_a2Fkb)
type Foldl1Sym2 (t_a2G5P :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (t_a2G5Q :: [a_a2Fkb]) = Foldl1 t_a2G5P t_a2G5Q
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data Foldr1Sym0 (l_a2G5e :: TyFun (TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (TyFun [a_a2Fkj] a_a2Fkj -> *))
data Foldr1Sym1 (l_a2G5h :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (l_a2G5g :: TyFun [a_a2Fkj] a_a2Fkj)
type Foldr1Sym2 (t_a2G5c :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (t_a2G5d :: [a_a2Fkj]) = Foldr1 t_a2G5c t_a2G5d
data ConcatSym0 (l_a2G58 :: TyFun [[a_a2Fko]] [a_a2Fko])
type ConcatSym1 (t_a2G57 :: [[a_a2Fko]]) = Concat t_a2G57
data ConcatMapSym0 (l_a2G4U :: TyFun (TyFun a_a2Fkp [b_a2Fkq] -> *) (TyFun [a_a2Fkp] [b_a2Fkq] -> *))
data ConcatMapSym1 (l_a2G4X :: TyFun a_a2Fkp [b_a2Fkq] -> *) (l_a2G4W :: TyFun [a_a2Fkp] [b_a2Fkq])
type ConcatMapSym2 (t_a2G4S :: TyFun a_a2Fkp [b_a2Fkq] -> *) (t_a2G4T :: [a_a2Fkp]) = ConcatMap t_a2G4S t_a2G4T
data AndSym0 (l_a2G4N :: TyFun [Bool] Bool)
type AndSym1 (t_a2G4M :: [Bool]) = And t_a2G4M
data OrSym0 (l_a2G4H :: TyFun [Bool] Bool)
type OrSym1 (t_a2G4G :: [Bool]) = Or t_a2G4G
data Any_Sym0 (l_a2CvE :: TyFun (TyFun a_a2Cvx Bool -> *) (TyFun [a_a2Cvx] Bool -> *))
data Any_Sym1 (l_a2CvH :: TyFun a_a2Cvx Bool -> *) (l_a2CvG :: TyFun [a_a2Cvx] Bool)
type Any_Sym2 (t_a2CvC :: TyFun a_a2Cvx Bool -> *) (t_a2CvD :: [a_a2Cvx]) = Any_ t_a2CvC t_a2CvD
data AllSym0 (l_a2G4t :: TyFun (TyFun a_a2Fkw Bool -> *) (TyFun [a_a2Fkw] Bool -> *))
data AllSym1 (l_a2G4w :: TyFun a_a2Fkw Bool -> *) (l_a2G4v :: TyFun [a_a2Fkw] Bool)
type AllSym2 (t_a2G4r :: TyFun a_a2Fkw Bool -> *) (t_a2G4s :: [a_a2Fkw]) = All t_a2G4r t_a2G4s
data ScanlSym0 (l_a2G3S :: TyFun (TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *) -> *))
data ScanlSym1 (l_a2G3V :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3U :: TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *))
data ScanlSym2 (l_a2G3Y :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3Z :: b_a2FkA) (l_a2G3X :: TyFun [a_a2FkB] [b_a2FkA])
type ScanlSym3 (t_a2G3P :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (t_a2G3Q :: b_a2FkA) (t_a2G3R :: [a_a2FkB]) = Scanl t_a2G3P t_a2G3Q t_a2G3R
data Scanl1Sym0 (l_a2G4e :: TyFun (TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (TyFun [a_a2FkH] [a_a2FkH] -> *))
data Scanl1Sym1 (l_a2G4h :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (l_a2G4g :: TyFun [a_a2FkH] [a_a2FkH])
type Scanl1Sym2 (t_a2G4c :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (t_a2G4d :: [a_a2FkH]) = Scanl1 t_a2G4c t_a2G4d
data ScanrSym0 (l_a2G37 :: TyFun (TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *) -> *))
data ScanrSym1 (l_a2G3a :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G39 :: TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *))
data ScanrSym2 (l_a2G3d :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G3e :: b_a2FkM) (l_a2G3c :: TyFun [a_a2FkL] [b_a2FkM])
type ScanrSym3 (t_a2G34 :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (t_a2G35 :: b_a2FkM) (t_a2G36 :: [a_a2FkL]) = Scanr t_a2G34 t_a2G35 t_a2G36
data Scanr1Sym0 (l_a2G25 :: TyFun (TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (TyFun [a_a2FkU] [a_a2FkU] -> *))
data Scanr1Sym1 (l_a2G28 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (l_a2G27 :: TyFun [a_a2FkU] [a_a2FkU])
type Scanr1Sym2 (t_a2G23 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (t_a2G24 :: [a_a2FkU]) = Scanr1 t_a2G23 t_a2G24
data ElemSym0 (l_a2FUc :: TyFun a_a2FlN (TyFun [a_a2FlN] Bool -> *))
data ElemSym1 (l_a2FUf :: a_a2FlN) (l_a2FUe :: TyFun [a_a2FlN] Bool)
type ElemSym2 (t_a2FUa :: a_a2FlN) (t_a2FUb :: [a_a2FlN]) = Elem t_a2FUa t_a2FUb
data NotElemSym0 (l_a2FTX :: TyFun a_a2FlR (TyFun [a_a2FlR] Bool -> *))
data NotElemSym1 (l_a2FU0 :: a_a2FlR) (l_a2FTZ :: TyFun [a_a2FlR] Bool)
type NotElemSym2 (t_a2FTV :: a_a2FlR) (t_a2FTW :: [a_a2FlR]) = NotElem t_a2FTV t_a2FTW
data ZipSym0 (l_a2FRU :: TyFun [a_a2FlV] (TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)] -> *))
data ZipSym1 (l_a2FRX :: [a_a2FlV]) (l_a2FRW :: TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)])
type ZipSym2 (t_a2FRS :: [a_a2FlV]) (t_a2FRT :: [b_a2FlW]) = Zip t_a2FRS t_a2FRT
data Zip3Sym0 (l_a2FQI :: TyFun [a_a2Fm1] (TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *) -> *))
data Zip3Sym1 (l_a2FQL :: [a_a2Fm1]) (l_a2FQK :: TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *))
data Zip3Sym2 (l_a2FQO :: [a_a2Fm1]) (l_a2FQP :: [b_a2Fm2]) (l_a2FQN :: TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
type Zip3Sym3 (t_a2FQF :: [a_a2Fm1]) (t_a2FQG :: [b_a2Fm2]) (t_a2FQH :: [c_a2Fm3]) = Zip3 t_a2FQF t_a2FQG t_a2FQH
data ZipWithSym0 (l_a2FQ3 :: TyFun (TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *) -> *))
data ZipWithSym1 (l_a2FQ6 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQ5 :: TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *))
data ZipWithSym2 (l_a2FQ9 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQa :: [a_a2Fma]) (l_a2FQ8 :: TyFun [b_a2Fmb] [c_a2Fmc])
type ZipWithSym3 (t_a2FQ0 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (t_a2FQ1 :: [a_a2Fma]) (t_a2FQ2 :: [b_a2Fmb]) = ZipWith t_a2FQ0 t_a2FQ1 t_a2FQ2
data ZipWith3Sym0 (l_a2FOo :: TyFun (TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *) -> *))
data ZipWith3Sym1 (l_a2FOr :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOq :: TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *))
data ZipWith3Sym2 (l_a2FOu :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOv :: [a_a2Fmi]) (l_a2FOt :: TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *))
data ZipWith3Sym3 (l_a2FOy :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOz :: [a_a2Fmi]) (l_a2FOA :: [b_a2Fmj]) (l_a2FOx :: TyFun [c_a2Fmk] [d_a2Fml])
data UnzipSym0 (l_a2FNR :: TyFun [(a_a2Fmt, b_a2Fmu)] ([a_a2Fmt], [b_a2Fmu]))
type UnzipSym1 (t_a2FNQ :: [(a_a2Fmt, b_a2Fmu)]) = Unzip t_a2FNQ


-- | Defines promoted functions and datatypes relating to <tt>List</tt>,
--   including a promoted version of all the definitions in
--   <tt>Data.List</tt>.
--   
--   Because many of these definitions are produced by Template Haskell, it
--   is not possible to create proper Haddock documentation. Please look up
--   the corresponding operation in <tt>Data.List</tt>. Also, please excuse
--   the apparent repeated variable names. This is due to an interaction
--   between Template Haskell and Haddock.
module Data.Promotion.Prelude.List
any_ :: (a_a2Cvx -> Bool) -> [a_a2Cvx] -> Bool
type NilSym0 = '[]
data (:$) (l_a1sRh :: TyFun a_12 (TyFun [a_12] [a_12] -> *))
data (:$$) (l_a1sRk :: a_12) (l_a1sRj :: TyFun [a_12] [a_12])
type (:$$$) (t_a1sRf :: a_12) (t_a1sRg :: [a_12]) = (:) t_a1sRf t_a1sRg
type (:++$$$) (t_a24tf :: [a_a24r7]) (t_a24tg :: [a_a24r7]) = (:++) t_a24tf t_a24tg
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data HeadSym0 (l_a2GkE :: TyFun [a_a2Fj2] a_a2Fj2)
type HeadSym1 (t_a2GkD :: [a_a2Fj2]) = Head t_a2GkD
data LastSym0 (l_a2Gku :: TyFun [a_a2Fj4] a_a2Fj4)
type LastSym1 (t_a2Gkt :: [a_a2Fj4]) = Last t_a2Gkt
data TailSym0 (l_a2Gkm :: TyFun [a_a2Fj8] [a_a2Fj8])
type TailSym1 (t_a2Gkl :: [a_a2Fj8]) = Tail t_a2Gkl
data InitSym0 (l_a2GjP :: TyFun [a_a2Fja] [a_a2Fja])
type InitSym1 (t_a2GjO :: [a_a2Fja]) = Init t_a2GjO
data NullSym0 (l_a2GiI :: TyFun [a_a2Fji] Bool)
type NullSym1 (t_a2GiH :: [a_a2Fji]) = Null t_a2GiH
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data ReverseSym0 (l_a2Gi9 :: TyFun [a_a2Fjj] [a_a2Fjj])
type ReverseSym1 (t_a2Gi8 :: [a_a2Fjj]) = Reverse t_a2Gi8
data IntersperseSym0 (l_a2GhK :: TyFun a_a2Fjr (TyFun [a_a2Fjr] [a_a2Fjr] -> *))
data IntersperseSym1 (l_a2GhN :: a_a2Fjr) (l_a2GhM :: TyFun [a_a2Fjr] [a_a2Fjr])
type IntersperseSym2 (t_a2GhI :: a_a2Fjr) (t_a2GhJ :: [a_a2Fjr]) = Intersperse t_a2GhI t_a2GhJ
data IntercalateSym0 (l_a2GhZ :: TyFun [a_a2Fjv] (TyFun [[a_a2Fjv]] [a_a2Fjv] -> *))
data IntercalateSym1 (l_a2Gi2 :: [a_a2Fjv]) (l_a2Gi1 :: TyFun [[a_a2Fjv]] [a_a2Fjv])
type IntercalateSym2 (t_a2GhX :: [a_a2Fjv]) (t_a2GhY :: [[a_a2Fjv]]) = Intercalate t_a2GhX t_a2GhY
data SubsequencesSym0 (l_a2GhE :: TyFun [a_a2Fjy] [[a_a2Fjy]])
type SubsequencesSym1 (t_a2GhD :: [a_a2Fjy]) = Subsequences t_a2GhD
data PermutationsSym0 (l_a2GaW :: TyFun [a_a2FjK] [[a_a2FjK]])
type PermutationsSym1 (t_a2GaV :: [a_a2FjK]) = Permutations t_a2GaV
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))
data FoldlSym1 (l_a1w2Q :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2P :: TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *))
data FoldlSym2 (l_a1w2T :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2U :: b_a1w2A) (l_a1w2S :: TyFun [a_a1w2z] b_a1w2A)
type FoldlSym3 (t_a1w2K :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (t_a1w2L :: b_a1w2A) (t_a1w2M :: [a_a1w2z]) = Foldl t_a1w2K t_a1w2L t_a1w2M
data Foldl'Sym0 (l_a2G9n :: TyFun (TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (TyFun b_a2Fhz (TyFun [a_a2Fhy] b_a2Fhz -> *) -> *))
data Foldl'Sym1 (l_a2G9q :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (l_a2G9p :: TyFun b_a2Fhz (TyFun [a_a2Fhy] b_a2Fhz -> *))
data Foldl'Sym2 (l_a2G9t :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (l_a2G9u :: b_a2Fhz) (l_a2G9s :: TyFun [a_a2Fhy] b_a2Fhz)
type Foldl'Sym3 (t_a2G9k :: TyFun b_a2Fhz (TyFun a_a2Fhy b_a2Fhz -> *) -> *) (t_a2G9l :: b_a2Fhz) (t_a2G9m :: [a_a2Fhy]) = Foldl' t_a2G9k t_a2G9l t_a2G9m
data Foldl1Sym0 (l_a2G5R :: TyFun (TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (TyFun [a_a2Fkb] a_a2Fkb -> *))
data Foldl1Sym1 (l_a2G5U :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (l_a2G5T :: TyFun [a_a2Fkb] a_a2Fkb)
type Foldl1Sym2 (t_a2G5P :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (t_a2G5Q :: [a_a2Fkb]) = Foldl1 t_a2G5P t_a2G5Q
data Foldl1'Sym0 (l_a2GaI :: TyFun (TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (TyFun [a_a2Fkf] a_a2Fkf -> *))
data Foldl1'Sym1 (l_a2GaL :: TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (l_a2GaK :: TyFun [a_a2Fkf] a_a2Fkf)
type Foldl1'Sym2 (t_a2GaG :: TyFun a_a2Fkf (TyFun a_a2Fkf a_a2Fkf -> *) -> *) (t_a2GaH :: [a_a2Fkf]) = Foldl1' t_a2GaG t_a2GaH
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data Foldr1Sym0 (l_a2G5e :: TyFun (TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (TyFun [a_a2Fkj] a_a2Fkj -> *))
data Foldr1Sym1 (l_a2G5h :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (l_a2G5g :: TyFun [a_a2Fkj] a_a2Fkj)
type Foldr1Sym2 (t_a2G5c :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (t_a2G5d :: [a_a2Fkj]) = Foldr1 t_a2G5c t_a2G5d
data ConcatSym0 (l_a2G58 :: TyFun [[a_a2Fko]] [a_a2Fko])
type ConcatSym1 (t_a2G57 :: [[a_a2Fko]]) = Concat t_a2G57
data ConcatMapSym0 (l_a2G4U :: TyFun (TyFun a_a2Fkp [b_a2Fkq] -> *) (TyFun [a_a2Fkp] [b_a2Fkq] -> *))
data ConcatMapSym1 (l_a2G4X :: TyFun a_a2Fkp [b_a2Fkq] -> *) (l_a2G4W :: TyFun [a_a2Fkp] [b_a2Fkq])
type ConcatMapSym2 (t_a2G4S :: TyFun a_a2Fkp [b_a2Fkq] -> *) (t_a2G4T :: [a_a2Fkp]) = ConcatMap t_a2G4S t_a2G4T
data AndSym0 (l_a2G4N :: TyFun [Bool] Bool)
type AndSym1 (t_a2G4M :: [Bool]) = And t_a2G4M
data OrSym0 (l_a2G4H :: TyFun [Bool] Bool)
type OrSym1 (t_a2G4G :: [Bool]) = Or t_a2G4G
data Any_Sym0 (l_a2CvE :: TyFun (TyFun a_a2Cvx Bool -> *) (TyFun [a_a2Cvx] Bool -> *))
data Any_Sym1 (l_a2CvH :: TyFun a_a2Cvx Bool -> *) (l_a2CvG :: TyFun [a_a2Cvx] Bool)
type Any_Sym2 (t_a2CvC :: TyFun a_a2Cvx Bool -> *) (t_a2CvD :: [a_a2Cvx]) = Any_ t_a2CvC t_a2CvD
data AllSym0 (l_a2G4t :: TyFun (TyFun a_a2Fkw Bool -> *) (TyFun [a_a2Fkw] Bool -> *))
data AllSym1 (l_a2G4w :: TyFun a_a2Fkw Bool -> *) (l_a2G4v :: TyFun [a_a2Fkw] Bool)
type AllSym2 (t_a2G4r :: TyFun a_a2Fkw Bool -> *) (t_a2G4s :: [a_a2Fkw]) = All t_a2G4r t_a2G4s
data ScanlSym0 (l_a2G3S :: TyFun (TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *) -> *))
data ScanlSym1 (l_a2G3V :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3U :: TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *))
data ScanlSym2 (l_a2G3Y :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3Z :: b_a2FkA) (l_a2G3X :: TyFun [a_a2FkB] [b_a2FkA])
type ScanlSym3 (t_a2G3P :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (t_a2G3Q :: b_a2FkA) (t_a2G3R :: [a_a2FkB]) = Scanl t_a2G3P t_a2G3Q t_a2G3R
data Scanl1Sym0 (l_a2G4e :: TyFun (TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (TyFun [a_a2FkH] [a_a2FkH] -> *))
data Scanl1Sym1 (l_a2G4h :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (l_a2G4g :: TyFun [a_a2FkH] [a_a2FkH])
type Scanl1Sym2 (t_a2G4c :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (t_a2G4d :: [a_a2FkH]) = Scanl1 t_a2G4c t_a2G4d
data ScanrSym0 (l_a2G37 :: TyFun (TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *) -> *))
data ScanrSym1 (l_a2G3a :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G39 :: TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *))
data ScanrSym2 (l_a2G3d :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G3e :: b_a2FkM) (l_a2G3c :: TyFun [a_a2FkL] [b_a2FkM])
type ScanrSym3 (t_a2G34 :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (t_a2G35 :: b_a2FkM) (t_a2G36 :: [a_a2FkL]) = Scanr t_a2G34 t_a2G35 t_a2G36
data Scanr1Sym0 (l_a2G25 :: TyFun (TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (TyFun [a_a2FkU] [a_a2FkU] -> *))
data Scanr1Sym1 (l_a2G28 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (l_a2G27 :: TyFun [a_a2FkU] [a_a2FkU])
type Scanr1Sym2 (t_a2G23 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (t_a2G24 :: [a_a2FkU]) = Scanr1 t_a2G23 t_a2G24
data MapAccumLSym0 (l_a2FZk :: TyFun (TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (TyFun acc_a2Fl1 (TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]) -> *) -> *))
data MapAccumLSym1 (l_a2FZn :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (l_a2FZm :: TyFun acc_a2Fl1 (TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]) -> *))
data MapAccumLSym2 (l_a2FZq :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (l_a2FZr :: acc_a2Fl1) (l_a2FZp :: TyFun [x_a2Fl2] (acc_a2Fl1, [y_a2Fl3]))
type MapAccumLSym3 (t_a2FZh :: TyFun acc_a2Fl1 (TyFun x_a2Fl2 (acc_a2Fl1, y_a2Fl3) -> *) -> *) (t_a2FZi :: acc_a2Fl1) (t_a2FZj :: [x_a2Fl2]) = MapAccumL t_a2FZh t_a2FZi t_a2FZj
data MapAccumRSym0 (l_a2FWy :: TyFun (TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (TyFun acc_a2Fld (TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]) -> *) -> *))
data MapAccumRSym1 (l_a2FWB :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (l_a2FWA :: TyFun acc_a2Fld (TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]) -> *))
data MapAccumRSym2 (l_a2FWE :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (l_a2FWF :: acc_a2Fld) (l_a2FWD :: TyFun [x_a2Fle] (acc_a2Fld, [y_a2Flf]))
type MapAccumRSym3 (t_a2FWv :: TyFun acc_a2Fld (TyFun x_a2Fle (acc_a2Fld, y_a2Flf) -> *) -> *) (t_a2FWw :: acc_a2Fld) (t_a2FWx :: [x_a2Fle]) = MapAccumR t_a2FWv t_a2FWw t_a2FWx
data UnfoldrSym0 (l_a2FW9 :: TyFun (TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (TyFun b_a2Flp [a_a2Flq] -> *))
data UnfoldrSym1 (l_a2FWc :: TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (l_a2FWb :: TyFun b_a2Flp [a_a2Flq])
type UnfoldrSym2 (t_a2FW7 :: TyFun b_a2Flp (Maybe (a_a2Flq, b_a2Flp)) -> *) (t_a2FW8 :: b_a2Flp) = Unfoldr t_a2FW7 t_a2FW8
data InitsSym0 (l_a2FVY :: TyFun [a_a2Flv] [[a_a2Flv]])
type InitsSym1 (t_a2FVX :: [a_a2Flv]) = Inits t_a2FVX
data TailsSym0 (l_a2FVB :: TyFun [a_a2Flz] [[a_a2Flz]])
type TailsSym1 (t_a2FVA :: [a_a2Flz]) = Tails t_a2FVA
data IsPrefixOfSym0 (l_a2FVd :: TyFun [a_a2FlC] (TyFun [a_a2FlC] Bool -> *))
data IsPrefixOfSym1 (l_a2FVg :: [a_a2FlC]) (l_a2FVf :: TyFun [a_a2FlC] Bool)
type IsPrefixOfSym2 (t_a2FVb :: [a_a2FlC]) (t_a2FVc :: [a_a2FlC]) = IsPrefixOf t_a2FVb t_a2FVc
data IsSuffixOfSym0 (l_a2Giy :: TyFun [a_a2FlH] (TyFun [a_a2FlH] Bool -> *))
data IsSuffixOfSym1 (l_a2GiB :: [a_a2FlH]) (l_a2GiA :: TyFun [a_a2FlH] Bool)
type IsSuffixOfSym2 (t_a2Giw :: [a_a2FlH]) (t_a2Gix :: [a_a2FlH]) = IsSuffixOf t_a2Giw t_a2Gix
data IsInfixOfSym0 (l_a2FVO :: TyFun [a_a2FlK] (TyFun [a_a2FlK] Bool -> *))
data IsInfixOfSym1 (l_a2FVR :: [a_a2FlK]) (l_a2FVQ :: TyFun [a_a2FlK] Bool)
type IsInfixOfSym2 (t_a2FVM :: [a_a2FlK]) (t_a2FVN :: [a_a2FlK]) = IsInfixOf t_a2FVM t_a2FVN
data ElemSym0 (l_a2FUc :: TyFun a_a2FlN (TyFun [a_a2FlN] Bool -> *))
data ElemSym1 (l_a2FUf :: a_a2FlN) (l_a2FUe :: TyFun [a_a2FlN] Bool)
type ElemSym2 (t_a2FUa :: a_a2FlN) (t_a2FUb :: [a_a2FlN]) = Elem t_a2FUa t_a2FUb
data NotElemSym0 (l_a2FTX :: TyFun a_a2FlR (TyFun [a_a2FlR] Bool -> *))
data NotElemSym1 (l_a2FU0 :: a_a2FlR) (l_a2FTZ :: TyFun [a_a2FlR] Bool)
type NotElemSym2 (t_a2FTV :: a_a2FlR) (t_a2FTW :: [a_a2FlR]) = NotElem t_a2FTV t_a2FTW
data ZipSym0 (l_a2FRU :: TyFun [a_a2FlV] (TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)] -> *))
data ZipSym1 (l_a2FRX :: [a_a2FlV]) (l_a2FRW :: TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)])
type ZipSym2 (t_a2FRS :: [a_a2FlV]) (t_a2FRT :: [b_a2FlW]) = Zip t_a2FRS t_a2FRT
data Zip3Sym0 (l_a2FQI :: TyFun [a_a2Fm1] (TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *) -> *))
data Zip3Sym1 (l_a2FQL :: [a_a2Fm1]) (l_a2FQK :: TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *))
data Zip3Sym2 (l_a2FQO :: [a_a2Fm1]) (l_a2FQP :: [b_a2Fm2]) (l_a2FQN :: TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
type Zip3Sym3 (t_a2FQF :: [a_a2Fm1]) (t_a2FQG :: [b_a2Fm2]) (t_a2FQH :: [c_a2Fm3]) = Zip3 t_a2FQF t_a2FQG t_a2FQH
data ZipWithSym0 (l_a2FQ3 :: TyFun (TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *) -> *))
data ZipWithSym1 (l_a2FQ6 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQ5 :: TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *))
data ZipWithSym2 (l_a2FQ9 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQa :: [a_a2Fma]) (l_a2FQ8 :: TyFun [b_a2Fmb] [c_a2Fmc])
type ZipWithSym3 (t_a2FQ0 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (t_a2FQ1 :: [a_a2Fma]) (t_a2FQ2 :: [b_a2Fmb]) = ZipWith t_a2FQ0 t_a2FQ1 t_a2FQ2
data ZipWith3Sym0 (l_a2FOo :: TyFun (TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *) -> *))
data ZipWith3Sym1 (l_a2FOr :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOq :: TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *))
data ZipWith3Sym2 (l_a2FOu :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOv :: [a_a2Fmi]) (l_a2FOt :: TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *))
data ZipWith3Sym3 (l_a2FOy :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOz :: [a_a2Fmi]) (l_a2FOA :: [b_a2Fmj]) (l_a2FOx :: TyFun [c_a2Fmk] [d_a2Fml])
type ZipWith3Sym4 (t_a2FOk :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (t_a2FOl :: [a_a2Fmi]) (t_a2FOm :: [b_a2Fmj]) (t_a2FOn :: [c_a2Fmk]) = ZipWith3 t_a2FOk t_a2FOl t_a2FOm t_a2FOn
data UnzipSym0 (l_a2FNR :: TyFun [(a_a2Fmt, b_a2Fmu)] ([a_a2Fmt], [b_a2Fmu]))
type UnzipSym1 (t_a2FNQ :: [(a_a2Fmt, b_a2Fmu)]) = Unzip t_a2FNQ
data Unzip3Sym0 (l_a2FNl :: TyFun [(a_a2FmA, b_a2FmB, c_a2FmC)] ([a_a2FmA], [b_a2FmB], [c_a2FmC]))
type Unzip3Sym1 (t_a2FNk :: [(a_a2FmA, b_a2FmB, c_a2FmC)]) = Unzip3 t_a2FNk
data Unzip4Sym0 (l_a2FMN :: TyFun [(a_a2FmK, b_a2FmL, c_a2FmM, d_a2FmN)] ([a_a2FmK], [b_a2FmL], [c_a2FmM], [d_a2FmN]))
type Unzip4Sym1 (t_a2FMM :: [(a_a2FmK, b_a2FmL, c_a2FmM, d_a2FmN)]) = Unzip4 t_a2FMM
data Unzip5Sym0 (l_a2FMd :: TyFun [(a_a2FmX, b_a2FmY, c_a2FmZ, d_a2Fn0, e_a2Fn1)] ([a_a2FmX], [b_a2FmY], [c_a2FmZ], [d_a2Fn0], [e_a2Fn1]))
type Unzip5Sym1 (t_a2FMc :: [(a_a2FmX, b_a2FmY, c_a2FmZ, d_a2Fn0, e_a2Fn1)]) = Unzip5 t_a2FMc
data Unzip6Sym0 (l_a2FLB :: TyFun [(a_a2Fnd, b_a2Fne, c_a2Fnf, d_a2Fng, e_a2Fnh, f_a2Fni)] ([a_a2Fnd], [b_a2Fne], [c_a2Fnf], [d_a2Fng], [e_a2Fnh], [f_a2Fni]))
type Unzip6Sym1 (t_a2FLA :: [(a_a2Fnd, b_a2Fne, c_a2Fnf, d_a2Fng, e_a2Fnh, f_a2Fni)]) = Unzip6 t_a2FLA
data Unzip7Sym0 (l_a2FKX :: TyFun [(a_a2Fnw, b_a2Fnx, c_a2Fny, d_a2Fnz, e_a2FnA, f_a2FnB, g_a2FnC)] ([a_a2Fnw], [b_a2Fnx], [c_a2Fny], [d_a2Fnz], [e_a2FnA], [f_a2FnB], [g_a2FnC]))
type Unzip7Sym1 (t_a2FKW :: [(a_a2Fnw, b_a2Fnx, c_a2Fny, d_a2Fnz, e_a2FnA, f_a2FnB, g_a2FnC)]) = Unzip7 t_a2FKW
data DeleteSym0 (l_a2FKy :: TyFun a_a2FnS (TyFun [a_a2FnS] [a_a2FnS] -> *))
data DeleteSym1 (l_a2FKB :: a_a2FnS) (l_a2FKA :: TyFun [a_a2FnS] [a_a2FnS])
type DeleteSym2 (t_a2FKw :: a_a2FnS) (t_a2FKx :: [a_a2FnS]) = Delete t_a2FKw t_a2FKx
data (:\\$) (l_a2FKN :: TyFun [a_a2FnT] (TyFun [a_a2FnT] [a_a2FnT] -> *))
data (:\\$$) (l_a2FKQ :: [a_a2FnT]) (l_a2FKP :: TyFun [a_a2FnT] [a_a2FnT])
type (:\\$$$) (t_a2FKL :: [a_a2FnT]) (t_a2FKM :: [a_a2FnT]) = (:\\) t_a2FKL t_a2FKM
data IntersectSym0 (l_a2FH8 :: TyFun [a_a2FoH] (TyFun [a_a2FoH] [a_a2FoH] -> *))
data IntersectSym1 (l_a2FHb :: [a_a2FoH]) (l_a2FHa :: TyFun [a_a2FoH] [a_a2FoH])
type IntersectSym2 (t_a2FH6 :: [a_a2FoH]) (t_a2FH7 :: [a_a2FoH]) = Intersect t_a2FH6 t_a2FH7
data InsertSym0 (l_a2FIl :: TyFun a_a2Fpx (TyFun [a_a2Fpx] [a_a2Fpx] -> *))
data InsertSym1 (l_a2FIo :: a_a2Fpx) (l_a2FIn :: TyFun [a_a2Fpx] [a_a2Fpx])
type InsertSym2 (t_a2FIj :: a_a2Fpx) (t_a2FIk :: [a_a2Fpx]) = Insert t_a2FIj t_a2FIk
data SortSym0 (l_a2FIK :: TyFun [a_a2FpA] [a_a2FpA])
type SortSym1 (t_a2FIJ :: [a_a2FpA]) = Sort t_a2FIJ
data DeleteBySym0 (l_a2FIR :: TyFun (TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (TyFun a_a2FnU (TyFun [a_a2FnU] [a_a2FnU] -> *) -> *))
data DeleteBySym1 (l_a2FIU :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (l_a2FIT :: TyFun a_a2FnU (TyFun [a_a2FnU] [a_a2FnU] -> *))
data DeleteBySym2 (l_a2FIX :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (l_a2FIY :: a_a2FnU) (l_a2FIW :: TyFun [a_a2FnU] [a_a2FnU])
type DeleteBySym3 (t_a2FIO :: TyFun a_a2FnU (TyFun a_a2FnU Bool -> *) -> *) (t_a2FIP :: a_a2FnU) (t_a2FIQ :: [a_a2FnU]) = DeleteBy t_a2FIO t_a2FIP t_a2FIQ
data DeleteFirstsBySym0 (l_a2FJC :: TyFun (TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (TyFun [a_a2FnZ] (TyFun [a_a2FnZ] [a_a2FnZ] -> *) -> *))
data DeleteFirstsBySym1 (l_a2FJF :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (l_a2FJE :: TyFun [a_a2FnZ] (TyFun [a_a2FnZ] [a_a2FnZ] -> *))
data DeleteFirstsBySym2 (l_a2FJI :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (l_a2FJJ :: [a_a2FnZ]) (l_a2FJH :: TyFun [a_a2FnZ] [a_a2FnZ])
type DeleteFirstsBySym3 (t_a2FJz :: TyFun a_a2FnZ (TyFun a_a2FnZ Bool -> *) -> *) (t_a2FJA :: [a_a2FnZ]) (t_a2FJB :: [a_a2FnZ]) = DeleteFirstsBy t_a2FJz t_a2FJA t_a2FJB
data IntersectBySym0 (l_a2FF0 :: TyFun (TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (TyFun [a_a2FoI] (TyFun [a_a2FoI] [a_a2FoI] -> *) -> *))
data IntersectBySym1 (l_a2FF3 :: TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (l_a2FF2 :: TyFun [a_a2FoI] (TyFun [a_a2FoI] [a_a2FoI] -> *))
data IntersectBySym2 (l_a2FF6 :: TyFun a_a2FoI (TyFun a_a2FoI Bool -> *) -> *) (l_a2FF7 :: [a_a2FoI]) (l_a2FF5 :: TyFun [a_a2FoI] [a_a2FoI])
data SortBySym0 (l_a2FIw :: TyFun (TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (TyFun [a_a2Fo1] [a_a2Fo1] -> *))
data SortBySym1 (l_a2FIz :: TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (l_a2FIy :: TyFun [a_a2Fo1] [a_a2Fo1])
type SortBySym2 (t_a2FIu :: TyFun a_a2Fo1 (TyFun a_a2Fo1 Ordering -> *) -> *) (t_a2FIv :: [a_a2Fo1]) = SortBy t_a2FIu t_a2FIv
data InsertBySym0 (l_a2FHk :: TyFun (TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (TyFun a_a2Fo3 (TyFun [a_a2Fo3] [a_a2Fo3] -> *) -> *))
data InsertBySym1 (l_a2FHn :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (l_a2FHm :: TyFun a_a2Fo3 (TyFun [a_a2Fo3] [a_a2Fo3] -> *))
data InsertBySym2 (l_a2FHq :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (l_a2FHr :: a_a2Fo3) (l_a2FHp :: TyFun [a_a2Fo3] [a_a2Fo3])
type InsertBySym3 (t_a2FHh :: TyFun a_a2Fo3 (TyFun a_a2Fo3 Ordering -> *) -> *) (t_a2FHi :: a_a2Fo3) (t_a2FHj :: [a_a2Fo3]) = InsertBy t_a2FHh t_a2FHi t_a2FHj
data MaximumBySym0 (l_a2G66 :: TyFun (TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (TyFun [a_a2Foa] a_a2Foa -> *))
data MaximumBySym1 (l_a2G69 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (l_a2G68 :: TyFun [a_a2Foa] a_a2Foa)
type MaximumBySym2 (t_a2G64 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (t_a2G65 :: [a_a2Foa]) = MaximumBy t_a2G64 t_a2G65
data MinimumBySym0 (l_a2G7v :: TyFun (TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (TyFun [a_a2Fog] a_a2Fog -> *))
data MinimumBySym1 (l_a2G7y :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (l_a2G7x :: TyFun [a_a2Fog] a_a2Fog)
type MinimumBySym2 (t_a2G7t :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (t_a2G7u :: [a_a2Fog]) = MinimumBy t_a2G7t t_a2G7u
data LengthSym0 (l_a2FuX :: TyFun [a_a2Fq8] Nat)
type LengthSym1 (t_a2FuW :: [a_a2Fq8]) = Length t_a2FuW
data SumSym0 (l_a2Fvt :: TyFun [a_a2Fhx] a_a2Fhx)
type SumSym1 (t_a2Fvs :: [a_a2Fhx]) = Sum t_a2Fvs
data ProductSym0 (l_a2Fv5 :: TyFun [a_a2Fhw] a_a2Fhw)
type ProductSym1 (t_a2Fv4 :: [a_a2Fhw]) = Product t_a2Fv4
data ReplicateSym0 (l_a2FuC :: TyFun Nat (TyFun a_a2Fqa [a_a2Fqa] -> *))
data ReplicateSym1 (l_a2FuF :: Nat) (l_a2FuE :: TyFun a_a2Fqa [a_a2Fqa])
type ReplicateSym2 (t_a2FuA :: Nat) (t_a2FuB :: a_a2Fqa) = Replicate t_a2FuA t_a2FuB
data TransposeSym0 (l_a2GkM :: TyFun [[a_a2Fqd]] [[a_a2Fqd]])
type TransposeSym1 (t_a2GkL :: [[a_a2Fqd]]) = Transpose t_a2GkL
data TakeSym0 (l_a2FxN :: TyFun Nat (TyFun [a_a2Fpg] [a_a2Fpg] -> *))
data TakeSym1 (l_a2FxQ :: Nat) (l_a2FxP :: TyFun [a_a2Fpg] [a_a2Fpg])
type TakeSym2 (t_a2FxL :: Nat) (t_a2FxM :: [a_a2Fpg]) = Take t_a2FxL t_a2FxM
data DropSym0 (l_a2Fxi :: TyFun Nat (TyFun [a_a2Fpk] [a_a2Fpk] -> *))
data DropSym1 (l_a2Fxl :: Nat) (l_a2Fxk :: TyFun [a_a2Fpk] [a_a2Fpk])
type DropSym2 (t_a2Fxg :: Nat) (t_a2Fxh :: [a_a2Fpk]) = Drop t_a2Fxg t_a2Fxh
data SplitAtSym0 (l_a2Fyi :: TyFun Nat (TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]) -> *))
data SplitAtSym1 (l_a2Fyl :: Nat) (l_a2Fyk :: TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]))
type SplitAtSym2 (t_a2Fyg :: Nat) (t_a2Fyh :: [a_a2Fpo]) = SplitAt t_a2Fyg t_a2Fyh
data TakeWhileSym0 (l_a2FDO :: TyFun (TyFun a_a2FoN Bool -> *) (TyFun [a_a2FoN] [a_a2FoN] -> *))
data TakeWhileSym1 (l_a2FDR :: TyFun a_a2FoN Bool -> *) (l_a2FDQ :: TyFun [a_a2FoN] [a_a2FoN])
type TakeWhileSym2 (t_a2FDM :: TyFun a_a2FoN Bool -> *) (t_a2FDN :: [a_a2FoN]) = TakeWhile t_a2FDM t_a2FDN
data DropWhileSym0 (l_a2FD6 :: TyFun (TyFun a_a2FoR Bool -> *) (TyFun [a_a2FoR] [a_a2FoR] -> *))
data DropWhileSym1 (l_a2FD9 :: TyFun a_a2FoR Bool -> *) (l_a2FD8 :: TyFun [a_a2FoR] [a_a2FoR])
type DropWhileSym2 (t_a2FD4 :: TyFun a_a2FoR Bool -> *) (t_a2FD5 :: [a_a2FoR]) = DropWhile t_a2FD4 t_a2FD5
data DropWhileEndSym0 (l_a2GiT :: TyFun (TyFun a_a2FoW Bool -> *) (TyFun [a_a2FoW] [a_a2FoW] -> *))
data DropWhileEndSym1 (l_a2GiW :: TyFun a_a2FoW Bool -> *) (l_a2GiV :: TyFun [a_a2FoW] [a_a2FoW])
type DropWhileEndSym2 (t_a2GiR :: TyFun a_a2FoW Bool -> *) (t_a2GiS :: [a_a2FoW]) = DropWhileEnd t_a2GiR t_a2GiS
data SpanSym0 (l_a2FAa :: TyFun (TyFun a_a2Fp0 Bool -> *) (TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]) -> *))
data SpanSym1 (l_a2FAd :: TyFun a_a2Fp0 Bool -> *) (l_a2FAc :: TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]))
type SpanSym2 (t_a2FA8 :: TyFun a_a2Fp0 Bool -> *) (t_a2FA9 :: [a_a2Fp0]) = Span t_a2FA8 t_a2FA9
data BreakSym0 (l_a2Fyt :: TyFun (TyFun a_a2Fp8 Bool -> *) (TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]) -> *))
data BreakSym1 (l_a2Fyw :: TyFun a_a2Fp8 Bool -> *) (l_a2Fyv :: TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]))
type BreakSym2 (t_a2Fyr :: TyFun a_a2Fp8 Bool -> *) (t_a2Fys :: [a_a2Fp8]) = Break t_a2Fyr t_a2Fys
data StripPrefixSym0 (l_a3J0P :: TyFun [a_a3IPb] (TyFun [a_a3IPb] (Maybe [a_a3IPb]) -> *))
data StripPrefixSym1 (l_a3J0S :: [a_a3IPb]) (l_a3J0R :: TyFun [a_a3IPb] (Maybe [a_a3IPb]))
type StripPrefixSym2 (t_a3J0N :: [a_a3IPb]) (t_a3J0O :: [a_a3IPb]) = StripPrefix t_a3J0N t_a3J0O
data MaximumSym0 (l_a2G8T :: TyFun [a_a2Fpt] a_a2Fpt)
type MaximumSym1 (t_a2G8S :: [a_a2Fpt]) = Maximum t_a2G8S
data MinimumSym0 (l_a2G97 :: TyFun [a_a2Fpv] a_a2Fpv)
type MinimumSym1 (t_a2G96 :: [a_a2Fpv]) = Minimum t_a2G96
data GroupSym0 (l_a2FD0 :: TyFun [a_a2Fpr] [[a_a2Fpr]])
type GroupSym1 (t_a2FCZ :: [a_a2Fpr]) = Group t_a2FCZ
data GroupBySym0 (l_a2FBR :: TyFun (TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (TyFun [a_a2FpB] [[a_a2FpB]] -> *))
data GroupBySym1 (l_a2FBU :: TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (l_a2FBT :: TyFun [a_a2FpB] [[a_a2FpB]])
type GroupBySym2 (t_a2FBP :: TyFun a_a2FpB (TyFun a_a2FpB Bool -> *) -> *) (t_a2FBQ :: [a_a2FpB]) = GroupBy t_a2FBP t_a2FBQ
data LookupSym0 (l_a2FwI :: TyFun a_a2FpH (TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI) -> *))
data LookupSym1 (l_a2FwL :: a_a2FpH) (l_a2FwK :: TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI))
type LookupSym2 (t_a2FwG :: a_a2FpH) (t_a2FwH :: [(a_a2FpH, b_a2FpI)]) = Lookup t_a2FwG t_a2FwH
data FindSym0 (l_a2FEM :: TyFun (TyFun a_a2For Bool -> *) (TyFun [a_a2For] (Maybe a_a2For) -> *))
data FindSym1 (l_a2FEP :: TyFun a_a2For Bool -> *) (l_a2FEO :: TyFun [a_a2For] (Maybe a_a2For))
type FindSym2 (t_a2FEK :: TyFun a_a2For Bool -> *) (t_a2FEL :: [a_a2For]) = Find t_a2FEK t_a2FEL
data FilterSym0 (l_a2FEj :: TyFun (TyFun a_a2Fom Bool -> *) (TyFun [a_a2Fom] [a_a2Fom] -> *))
data FilterSym1 (l_a2FEm :: TyFun a_a2Fom Bool -> *) (l_a2FEl :: TyFun [a_a2Fom] [a_a2Fom])
type FilterSym2 (t_a2FEh :: TyFun a_a2Fom Bool -> *) (t_a2FEi :: [a_a2Fom]) = Filter t_a2FEh t_a2FEi
data PartitionSym0 (l_a2Fwx :: TyFun (TyFun a_a2FpO Bool -> *) (TyFun [a_a2FpO] ([a_a2FpO], [a_a2FpO]) -> *))
data PartitionSym1 (l_a2FwA :: TyFun a_a2FpO Bool -> *) (l_a2Fwz :: TyFun [a_a2FpO] ([a_a2FpO], [a_a2FpO]))
type PartitionSym2 (t_a2Fwv :: TyFun a_a2FpO Bool -> *) (t_a2Fww :: [a_a2FpO]) = Partition t_a2Fwv t_a2Fww
data (:!!$) (l_a2Fu7 :: TyFun [a_a2Fqi] (TyFun Nat a_a2Fqi -> *))
data (:!!$$) (l_a2Fua :: [a_a2Fqi]) (l_a2Fu9 :: TyFun Nat a_a2Fqi)
type (:!!$$$) (t_a2Fu5 :: [a_a2Fqi]) (t_a2Fu6 :: Nat) = (:!!) t_a2Fu5 t_a2Fu6
data ElemIndexSym0 (l_a2FTK :: TyFun a_a2Fot (TyFun [a_a2Fot] (Maybe Nat) -> *))
data ElemIndexSym1 (l_a2FTN :: a_a2Fot) (l_a2FTM :: TyFun [a_a2Fot] (Maybe Nat))
type ElemIndexSym2 (t_a2FTI :: a_a2Fot) (t_a2FTJ :: [a_a2Fot]) = ElemIndex t_a2FTI t_a2FTJ
data ElemIndicesSym0 (l_a2FTk :: TyFun a_a2Fov (TyFun [a_a2Fov] [Nat] -> *))
data ElemIndicesSym1 (l_a2FTn :: a_a2Fov) (l_a2FTm :: TyFun [a_a2Fov] [Nat])
type ElemIndicesSym2 (t_a2FTi :: a_a2Fov) (t_a2FTj :: [a_a2Fov]) = ElemIndices t_a2FTi t_a2FTj
data FindIndexSym0 (l_a2FTx :: TyFun (TyFun a_a2Fox Bool -> *) (TyFun [a_a2Fox] (Maybe Nat) -> *))
data FindIndexSym1 (l_a2FTA :: TyFun a_a2Fox Bool -> *) (l_a2FTz :: TyFun [a_a2Fox] (Maybe Nat))
type FindIndexSym2 (t_a2FTv :: TyFun a_a2Fox Bool -> *) (t_a2FTw :: [a_a2Fox]) = FindIndex t_a2FTv t_a2FTw
data FindIndicesSym0 (l_a2FSj :: TyFun (TyFun a_a2Foz Bool -> *) (TyFun [a_a2Foz] [Nat] -> *))
data FindIndicesSym1 (l_a2FSm :: TyFun a_a2Foz Bool -> *) (l_a2FSl :: TyFun [a_a2Foz] [Nat])
type FindIndicesSym2 (t_a2FSh :: TyFun a_a2Foz Bool -> *) (t_a2FSi :: [a_a2Foz]) = FindIndices t_a2FSh t_a2FSi
data Zip4Sym0 (l_a3J0r :: TyFun [a_a3IPh] (TyFun [b_a3IPi] (TyFun [c_a3IPj] (TyFun [d_a3IPk] [(a_a3IPh, b_a3IPi, c_a3IPj, d_a3IPk)] -> *) -> *) -> *))
data Zip4Sym1 (l_a3J0u :: [a_a3IPh]) (l_a3J0t :: TyFun [b_a3IPi] (TyFun [c_a3IPj] (TyFun [d_a3IPk] [(a_a3IPh, b_a3IPi, c_a3IPj, d_a3IPk)] -> *) -> *))
data Zip4Sym2 (l_a3J0x :: [a_a3IPh]) (l_a3J0y :: [b_a3IPi]) (l_a3J0w :: TyFun [c_a3IPj] (TyFun [d_a3IPk] [(a_a3IPh, b_a3IPi, c_a3IPj, d_a3IPk)] -> *))
data Zip4Sym3 (l_a3J0B :: [a_a3IPh]) (l_a3J0C :: [b_a3IPi]) (l_a3J0D :: [c_a3IPj]) (l_a3J0A :: TyFun [d_a3IPk] [(a_a3IPh, b_a3IPi, c_a3IPj, d_a3IPk)])
type Zip4Sym4 (t_a3J0n :: [a_a3IPh]) (t_a3J0o :: [b_a3IPi]) (t_a3J0p :: [c_a3IPj]) (t_a3J0q :: [d_a3IPk]) = Zip4 t_a3J0n t_a3J0o t_a3J0p t_a3J0q
data Zip5Sym0 (l_a3IZL :: TyFun [a_a3IPl] (TyFun [b_a3IPm] (TyFun [c_a3IPn] (TyFun [d_a3IPo] (TyFun [e_a3IPp] [(a_a3IPl, b_a3IPm, c_a3IPn, d_a3IPo, e_a3IPp)] -> *) -> *) -> *) -> *))
data Zip5Sym1 (l_a3IZO :: [a_a3IPl]) (l_a3IZN :: TyFun [b_a3IPm] (TyFun [c_a3IPn] (TyFun [d_a3IPo] (TyFun [e_a3IPp] [(a_a3IPl, b_a3IPm, c_a3IPn, d_a3IPo, e_a3IPp)] -> *) -> *) -> *))
data Zip5Sym2 (l_a3IZR :: [a_a3IPl]) (l_a3IZS :: [b_a3IPm]) (l_a3IZQ :: TyFun [c_a3IPn] (TyFun [d_a3IPo] (TyFun [e_a3IPp] [(a_a3IPl, b_a3IPm, c_a3IPn, d_a3IPo, e_a3IPp)] -> *) -> *))
data Zip5Sym3 (l_a3IZV :: [a_a3IPl]) (l_a3IZW :: [b_a3IPm]) (l_a3IZX :: [c_a3IPn]) (l_a3IZU :: TyFun [d_a3IPo] (TyFun [e_a3IPp] [(a_a3IPl, b_a3IPm, c_a3IPn, d_a3IPo, e_a3IPp)] -> *))
data Zip5Sym4 (l_a3J00 :: [a_a3IPl]) (l_a3J01 :: [b_a3IPm]) (l_a3J02 :: [c_a3IPn]) (l_a3J03 :: [d_a3IPo]) (l_a3IZZ :: TyFun [e_a3IPp] [(a_a3IPl, b_a3IPm, c_a3IPn, d_a3IPo, e_a3IPp)])
type Zip5Sym5 (t_a3IZG :: [a_a3IPl]) (t_a3IZH :: [b_a3IPm]) (t_a3IZI :: [c_a3IPn]) (t_a3IZJ :: [d_a3IPo]) (t_a3IZK :: [e_a3IPp]) = Zip5 t_a3IZG t_a3IZH t_a3IZI t_a3IZJ t_a3IZK
data Zip6Sym0 (l_a3IYT :: TyFun [a_a3IPq] (TyFun [b_a3IPr] (TyFun [c_a3IPs] (TyFun [d_a3IPt] (TyFun [e_a3IPu] (TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)] -> *) -> *) -> *) -> *) -> *))
data Zip6Sym1 (l_a3IYW :: [a_a3IPq]) (l_a3IYV :: TyFun [b_a3IPr] (TyFun [c_a3IPs] (TyFun [d_a3IPt] (TyFun [e_a3IPu] (TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)] -> *) -> *) -> *) -> *))
data Zip6Sym2 (l_a3IYZ :: [a_a3IPq]) (l_a3IZ0 :: [b_a3IPr]) (l_a3IYY :: TyFun [c_a3IPs] (TyFun [d_a3IPt] (TyFun [e_a3IPu] (TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)] -> *) -> *) -> *))
data Zip6Sym3 (l_a3IZ3 :: [a_a3IPq]) (l_a3IZ4 :: [b_a3IPr]) (l_a3IZ5 :: [c_a3IPs]) (l_a3IZ2 :: TyFun [d_a3IPt] (TyFun [e_a3IPu] (TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)] -> *) -> *))
data Zip6Sym4 (l_a3IZ8 :: [a_a3IPq]) (l_a3IZ9 :: [b_a3IPr]) (l_a3IZa :: [c_a3IPs]) (l_a3IZb :: [d_a3IPt]) (l_a3IZ7 :: TyFun [e_a3IPu] (TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)] -> *))
data Zip6Sym5 (l_a3IZe :: [a_a3IPq]) (l_a3IZf :: [b_a3IPr]) (l_a3IZg :: [c_a3IPs]) (l_a3IZh :: [d_a3IPt]) (l_a3IZi :: [e_a3IPu]) (l_a3IZd :: TyFun [f_a3IPv] [(a_a3IPq, b_a3IPr, c_a3IPs, d_a3IPt, e_a3IPu, f_a3IPv)])
type Zip6Sym6 (t_a3IYN :: [a_a3IPq]) (t_a3IYO :: [b_a3IPr]) (t_a3IYP :: [c_a3IPs]) (t_a3IYQ :: [d_a3IPt]) (t_a3IYR :: [e_a3IPu]) (t_a3IYS :: [f_a3IPv]) = Zip6 t_a3IYN t_a3IYO t_a3IYP t_a3IYQ t_a3IYR t_a3IYS
data Zip7Sym0 (l_a3IXO :: TyFun [a_a3IPw] (TyFun [b_a3IPx] (TyFun [c_a3IPy] (TyFun [d_a3IPz] (TyFun [e_a3IPA] (TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *) -> *) -> *) -> *) -> *) -> *))
data Zip7Sym1 (l_a3IXR :: [a_a3IPw]) (l_a3IXQ :: TyFun [b_a3IPx] (TyFun [c_a3IPy] (TyFun [d_a3IPz] (TyFun [e_a3IPA] (TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *) -> *) -> *) -> *) -> *))
data Zip7Sym2 (l_a3IXU :: [a_a3IPw]) (l_a3IXV :: [b_a3IPx]) (l_a3IXT :: TyFun [c_a3IPy] (TyFun [d_a3IPz] (TyFun [e_a3IPA] (TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *) -> *) -> *) -> *))
data Zip7Sym3 (l_a3IXY :: [a_a3IPw]) (l_a3IXZ :: [b_a3IPx]) (l_a3IY0 :: [c_a3IPy]) (l_a3IXX :: TyFun [d_a3IPz] (TyFun [e_a3IPA] (TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *) -> *) -> *))
data Zip7Sym4 (l_a3IY3 :: [a_a3IPw]) (l_a3IY4 :: [b_a3IPx]) (l_a3IY5 :: [c_a3IPy]) (l_a3IY6 :: [d_a3IPz]) (l_a3IY2 :: TyFun [e_a3IPA] (TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *) -> *))
data Zip7Sym5 (l_a3IY9 :: [a_a3IPw]) (l_a3IYa :: [b_a3IPx]) (l_a3IYb :: [c_a3IPy]) (l_a3IYc :: [d_a3IPz]) (l_a3IYd :: [e_a3IPA]) (l_a3IY8 :: TyFun [f_a3IPB] (TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)] -> *))
data Zip7Sym6 (l_a3IYg :: [a_a3IPw]) (l_a3IYh :: [b_a3IPx]) (l_a3IYi :: [c_a3IPy]) (l_a3IYj :: [d_a3IPz]) (l_a3IYk :: [e_a3IPA]) (l_a3IYl :: [f_a3IPB]) (l_a3IYf :: TyFun [g_a3IPC] [(a_a3IPw, b_a3IPx, c_a3IPy, d_a3IPz, e_a3IPA, f_a3IPB, g_a3IPC)])
type Zip7Sym7 (t_a3IXH :: [a_a3IPw]) (t_a3IXI :: [b_a3IPx]) (t_a3IXJ :: [c_a3IPy]) (t_a3IXK :: [d_a3IPz]) (t_a3IXL :: [e_a3IPA]) (t_a3IXM :: [f_a3IPB]) (t_a3IXN :: [g_a3IPC]) = Zip7 t_a3IXH t_a3IXI t_a3IXJ t_a3IXK t_a3IXL t_a3IXM t_a3IXN
data ZipWith4Sym0 (l_a3IWG :: TyFun (TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (TyFun [a_a3IPD] (TyFun [b_a3IPE] (TyFun [c_a3IPF] (TyFun [d_a3IPG] [e_a3IPH] -> *) -> *) -> *) -> *))
data ZipWith4Sym1 (l_a3IWJ :: TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (l_a3IWI :: TyFun [a_a3IPD] (TyFun [b_a3IPE] (TyFun [c_a3IPF] (TyFun [d_a3IPG] [e_a3IPH] -> *) -> *) -> *))
data ZipWith4Sym2 (l_a3IWM :: TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (l_a3IWN :: [a_a3IPD]) (l_a3IWL :: TyFun [b_a3IPE] (TyFun [c_a3IPF] (TyFun [d_a3IPG] [e_a3IPH] -> *) -> *))
data ZipWith4Sym3 (l_a3IWQ :: TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (l_a3IWR :: [a_a3IPD]) (l_a3IWS :: [b_a3IPE]) (l_a3IWP :: TyFun [c_a3IPF] (TyFun [d_a3IPG] [e_a3IPH] -> *))
data ZipWith4Sym4 (l_a3IWV :: TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (l_a3IWW :: [a_a3IPD]) (l_a3IWX :: [b_a3IPE]) (l_a3IWY :: [c_a3IPF]) (l_a3IWU :: TyFun [d_a3IPG] [e_a3IPH])
type ZipWith4Sym5 (t_a3IWB :: TyFun a_a3IPD (TyFun b_a3IPE (TyFun c_a3IPF (TyFun d_a3IPG e_a3IPH -> *) -> *) -> *) -> *) (t_a3IWC :: [a_a3IPD]) (t_a3IWD :: [b_a3IPE]) (t_a3IWE :: [c_a3IPF]) (t_a3IWF :: [d_a3IPG]) = ZipWith4 t_a3IWB t_a3IWC t_a3IWD t_a3IWE t_a3IWF
data ZipWith5Sym0 (l_a3IVB :: TyFun (TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (TyFun [a_a3IPR] (TyFun [b_a3IPS] (TyFun [c_a3IPT] (TyFun [d_a3IPU] (TyFun [e_a3IPV] [f_a3IPW] -> *) -> *) -> *) -> *) -> *))
data ZipWith5Sym1 (l_a3IVE :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (l_a3IVD :: TyFun [a_a3IPR] (TyFun [b_a3IPS] (TyFun [c_a3IPT] (TyFun [d_a3IPU] (TyFun [e_a3IPV] [f_a3IPW] -> *) -> *) -> *) -> *))
data ZipWith5Sym2 (l_a3IVH :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (l_a3IVI :: [a_a3IPR]) (l_a3IVG :: TyFun [b_a3IPS] (TyFun [c_a3IPT] (TyFun [d_a3IPU] (TyFun [e_a3IPV] [f_a3IPW] -> *) -> *) -> *))
data ZipWith5Sym3 (l_a3IVL :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (l_a3IVM :: [a_a3IPR]) (l_a3IVN :: [b_a3IPS]) (l_a3IVK :: TyFun [c_a3IPT] (TyFun [d_a3IPU] (TyFun [e_a3IPV] [f_a3IPW] -> *) -> *))
data ZipWith5Sym4 (l_a3IVQ :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (l_a3IVR :: [a_a3IPR]) (l_a3IVS :: [b_a3IPS]) (l_a3IVT :: [c_a3IPT]) (l_a3IVP :: TyFun [d_a3IPU] (TyFun [e_a3IPV] [f_a3IPW] -> *))
data ZipWith5Sym5 (l_a3IVW :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (l_a3IVX :: [a_a3IPR]) (l_a3IVY :: [b_a3IPS]) (l_a3IVZ :: [c_a3IPT]) (l_a3IW0 :: [d_a3IPU]) (l_a3IVV :: TyFun [e_a3IPV] [f_a3IPW])
type ZipWith5Sym6 (t_a3IVv :: TyFun a_a3IPR (TyFun b_a3IPS (TyFun c_a3IPT (TyFun d_a3IPU (TyFun e_a3IPV f_a3IPW -> *) -> *) -> *) -> *) -> *) (t_a3IVw :: [a_a3IPR]) (t_a3IVx :: [b_a3IPS]) (t_a3IVy :: [c_a3IPT]) (t_a3IVz :: [d_a3IPU]) (t_a3IVA :: [e_a3IPV]) = ZipWith5 t_a3IVv t_a3IVw t_a3IVx t_a3IVy t_a3IVz t_a3IVA
data ZipWith6Sym0 (l_a3IUh :: TyFun (TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (TyFun [a_a3IQ8] (TyFun [b_a3IQ9] (TyFun [c_a3IQa] (TyFun [d_a3IQb] (TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *) -> *) -> *) -> *) -> *) -> *))
data ZipWith6Sym1 (l_a3IUk :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUj :: TyFun [a_a3IQ8] (TyFun [b_a3IQ9] (TyFun [c_a3IQa] (TyFun [d_a3IQb] (TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *) -> *) -> *) -> *) -> *))
data ZipWith6Sym2 (l_a3IUn :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUo :: [a_a3IQ8]) (l_a3IUm :: TyFun [b_a3IQ9] (TyFun [c_a3IQa] (TyFun [d_a3IQb] (TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *) -> *) -> *) -> *))
data ZipWith6Sym3 (l_a3IUr :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUs :: [a_a3IQ8]) (l_a3IUt :: [b_a3IQ9]) (l_a3IUq :: TyFun [c_a3IQa] (TyFun [d_a3IQb] (TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *) -> *) -> *))
data ZipWith6Sym4 (l_a3IUw :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUx :: [a_a3IQ8]) (l_a3IUy :: [b_a3IQ9]) (l_a3IUz :: [c_a3IQa]) (l_a3IUv :: TyFun [d_a3IQb] (TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *) -> *))
data ZipWith6Sym5 (l_a3IUC :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUD :: [a_a3IQ8]) (l_a3IUE :: [b_a3IQ9]) (l_a3IUF :: [c_a3IQa]) (l_a3IUG :: [d_a3IQb]) (l_a3IUB :: TyFun [e_a3IQc] (TyFun [f_a3IQd] [g_a3IQe] -> *))
data ZipWith6Sym6 (l_a3IUJ :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IUK :: [a_a3IQ8]) (l_a3IUL :: [b_a3IQ9]) (l_a3IUM :: [c_a3IQa]) (l_a3IUN :: [d_a3IQb]) (l_a3IUO :: [e_a3IQc]) (l_a3IUI :: TyFun [f_a3IQd] [g_a3IQe])
type ZipWith6Sym7 (t_a3IUa :: TyFun a_a3IQ8 (TyFun b_a3IQ9 (TyFun c_a3IQa (TyFun d_a3IQb (TyFun e_a3IQc (TyFun f_a3IQd g_a3IQe -> *) -> *) -> *) -> *) -> *) -> *) (t_a3IUb :: [a_a3IQ8]) (t_a3IUc :: [b_a3IQ9]) (t_a3IUd :: [c_a3IQa]) (t_a3IUe :: [d_a3IQb]) (t_a3IUf :: [e_a3IQc]) (t_a3IUg :: [f_a3IQd]) = ZipWith6 t_a3IUa t_a3IUb t_a3IUc t_a3IUd t_a3IUe t_a3IUf t_a3IUg
data ZipWith7Sym0 (l_a3ISH :: TyFun (TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (TyFun [a_a3IQs] (TyFun [b_a3IQt] (TyFun [c_a3IQu] (TyFun [d_a3IQv] (TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *) -> *) -> *) -> *) -> *) -> *))
data ZipWith7Sym1 (l_a3ISK :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ISJ :: TyFun [a_a3IQs] (TyFun [b_a3IQt] (TyFun [c_a3IQu] (TyFun [d_a3IQv] (TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *) -> *) -> *) -> *) -> *))
data ZipWith7Sym2 (l_a3ISN :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ISO :: [a_a3IQs]) (l_a3ISM :: TyFun [b_a3IQt] (TyFun [c_a3IQu] (TyFun [d_a3IQv] (TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *) -> *) -> *) -> *))
data ZipWith7Sym3 (l_a3ISR :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ISS :: [a_a3IQs]) (l_a3IST :: [b_a3IQt]) (l_a3ISQ :: TyFun [c_a3IQu] (TyFun [d_a3IQv] (TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *) -> *) -> *))
data ZipWith7Sym4 (l_a3ISW :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ISX :: [a_a3IQs]) (l_a3ISY :: [b_a3IQt]) (l_a3ISZ :: [c_a3IQu]) (l_a3ISV :: TyFun [d_a3IQv] (TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *) -> *))
data ZipWith7Sym5 (l_a3IT2 :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3IT3 :: [a_a3IQs]) (l_a3IT4 :: [b_a3IQt]) (l_a3IT5 :: [c_a3IQu]) (l_a3IT6 :: [d_a3IQv]) (l_a3IT1 :: TyFun [e_a3IQw] (TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *) -> *))
data ZipWith7Sym6 (l_a3IT9 :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ITa :: [a_a3IQs]) (l_a3ITb :: [b_a3IQt]) (l_a3ITc :: [c_a3IQu]) (l_a3ITd :: [d_a3IQv]) (l_a3ITe :: [e_a3IQw]) (l_a3IT8 :: TyFun [f_a3IQx] (TyFun [g_a3IQy] [h_a3IQz] -> *))
data ZipWith7Sym7 (l_a3ITh :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (l_a3ITi :: [a_a3IQs]) (l_a3ITj :: [b_a3IQt]) (l_a3ITk :: [c_a3IQu]) (l_a3ITl :: [d_a3IQv]) (l_a3ITm :: [e_a3IQw]) (l_a3ITn :: [f_a3IQx]) (l_a3ITg :: TyFun [g_a3IQy] [h_a3IQz])
type ZipWith7Sym8 (t_a3ISz :: TyFun a_a3IQs (TyFun b_a3IQt (TyFun c_a3IQu (TyFun d_a3IQv (TyFun e_a3IQw (TyFun f_a3IQx (TyFun g_a3IQy h_a3IQz -> *) -> *) -> *) -> *) -> *) -> *) -> *) (t_a3ISA :: [a_a3IQs]) (t_a3ISB :: [b_a3IQt]) (t_a3ISC :: [c_a3IQu]) (t_a3ISD :: [d_a3IQv]) (t_a3ISE :: [e_a3IQw]) (t_a3ISF :: [f_a3IQx]) (t_a3ISG :: [g_a3IQy]) = ZipWith7 t_a3ISz t_a3ISA t_a3ISB t_a3ISC t_a3ISD t_a3ISE t_a3ISF t_a3ISG
data NubSym0 (l_a2FUq :: TyFun [a_a2Fhv] [a_a2Fhv])
type NubSym1 (t_a2FUp :: [a_a2Fhv]) = Nub t_a2FUp
data NubBySym0 (l_a2Ft2 :: TyFun (TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (TyFun [a_a2Fqr] [a_a2Fqr] -> *))
data NubBySym1 (l_a2Ft5 :: TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (l_a2Ft4 :: TyFun [a_a2Fqr] [a_a2Fqr])
type NubBySym2 (t_a2Ft0 :: TyFun a_a2Fqr (TyFun a_a2Fqr Bool -> *) -> *) (t_a2Ft1 :: [a_a2Fqr]) = NubBy t_a2Ft0 t_a2Ft1
data UnionSym0 (l_a2FKj :: TyFun [a_a2FqH] (TyFun [a_a2FqH] [a_a2FqH] -> *))
data UnionSym1 (l_a2FKm :: [a_a2FqH]) (l_a2FKl :: TyFun [a_a2FqH] [a_a2FqH])
type UnionSym2 (t_a2FKh :: [a_a2FqH]) (t_a2FKi :: [a_a2FqH]) = Union t_a2FKh t_a2FKi
data UnionBySym0 (l_a2FJY :: TyFun (TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (TyFun [a_a2FqD] (TyFun [a_a2FqD] [a_a2FqD] -> *) -> *))
data UnionBySym1 (l_a2FK1 :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (l_a2FK0 :: TyFun [a_a2FqD] (TyFun [a_a2FqD] [a_a2FqD] -> *))
data UnionBySym2 (l_a2FK4 :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (l_a2FK5 :: [a_a2FqD]) (l_a2FK3 :: TyFun [a_a2FqD] [a_a2FqD])
type UnionBySym3 (t_a2FJV :: TyFun a_a2FqD (TyFun a_a2FqD Bool -> *) -> *) (t_a2FJW :: [a_a2FqD]) (t_a2FJX :: [a_a2FqD]) = UnionBy t_a2FJV t_a2FJW t_a2FJX
data GenericLengthSym0 (l_a2Fsu :: TyFun [a_a2FqI] i_a2FqJ)
type GenericLengthSym1 (t_a2Fst :: [a_a2FqI]) = GenericLength t_a2Fst
data GenericTakeSym0 (l_a3ISq :: TyFun i_a3IQP (TyFun [a_a3IQQ] [a_a3IQQ] -> *))
data GenericTakeSym1 (l_a3ISt :: i_a3IQP) (l_a3ISs :: TyFun [a_a3IQQ] [a_a3IQQ])
type GenericTakeSym2 (t_a3ISo :: i_a3IQP) (t_a3ISp :: [a_a3IQQ]) = GenericTake t_a3ISo t_a3ISp
data GenericDropSym0 (l_a3ISb :: TyFun i_a3IQR (TyFun [a_a3IQS] [a_a3IQS] -> *))
data GenericDropSym1 (l_a3ISe :: i_a3IQR) (l_a3ISd :: TyFun [a_a3IQS] [a_a3IQS])
type GenericDropSym2 (t_a3IS9 :: i_a3IQR) (t_a3ISa :: [a_a3IQS]) = GenericDrop t_a3IS9 t_a3ISa
data GenericSplitAtSym0 (l_a3IRW :: TyFun i_a3IQT (TyFun [a_a3IQU] ([a_a3IQU], [a_a3IQU]) -> *))
data GenericSplitAtSym1 (l_a3IRZ :: i_a3IQT) (l_a3IRY :: TyFun [a_a3IQU] ([a_a3IQU], [a_a3IQU]))
type GenericSplitAtSym2 (t_a3IRU :: i_a3IQT) (t_a3IRV :: [a_a3IQU]) = GenericSplitAt t_a3IRU t_a3IRV
data GenericIndexSym0 (l_a3IRH :: TyFun [a_a3IQV] (TyFun i_a3IQW a_a3IQV -> *))
data GenericIndexSym1 (l_a3IRK :: [a_a3IQV]) (l_a3IRJ :: TyFun i_a3IQW a_a3IQV)
type GenericIndexSym2 (t_a3IRF :: [a_a3IQV]) (t_a3IRG :: i_a3IQW) = GenericIndex t_a3IRF t_a3IRG
data GenericReplicateSym0 (l_a3IRs :: TyFun i_a3IQX (TyFun a_a3IQY [a_a3IQY] -> *))
data GenericReplicateSym1 (l_a3IRv :: i_a3IQX) (l_a3IRu :: TyFun a_a3IQY [a_a3IQY])
type GenericReplicateSym2 (t_a3IRq :: i_a3IQX) (t_a3IRr :: a_a3IQY) = GenericReplicate t_a3IRq t_a3IRr
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericReplicateSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericReplicateSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericIndexSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericIndexSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericSplitAtSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericSplitAtSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericDropSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericDropSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericTakeSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.GenericTakeSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym7
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith7Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith6Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith5Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith4Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith4Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith4Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith4Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.ZipWith4Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym6
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip7Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym5
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip6Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip5Sym4
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip5Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip5Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip5Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip5Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip4Sym3
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip4Sym2
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip4Sym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.Zip4Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.StripPrefixSym1
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Promotion.Prelude.List.StripPrefixSym0


-- | Defines and exports promoted and singleton versions of definitions
--   from GHC.Num.
module Data.Promotion.Prelude.Num
class kproxy_a29RR ~ KProxy => PNum (kproxy_a29RR :: KProxy a_a29RN) where type family (:+) (arg_a29RS :: a_a29RN) (arg_a29RT :: a_a29RN) :: a_a29RN type family (:-) (arg_a29S1 :: a_a29RN) (arg_a29S2 :: a_a29RN) :: a_a29RN type family (:*) (arg_a29Sa :: a_a29RN) (arg_a29Sb :: a_a29RN) :: a_a29RN type family Negate (arg_a29Sj :: a_a29RN) :: a_a29RN type family Abs (arg_a29Sn :: a_a29RN) :: a_a29RN type family Signum (arg_a29Sr :: a_a29RN) :: a_a29RN type family FromInteger (arg_a29Sv :: Nat) :: a_a29RN (:-) (a_a29SK :: a_a29RN) (a_a29SL :: a_a29RN) = Apply (Apply TFHelper_1627904600Sym0 a_a29SK) a_a29SL Negate (a_a29T0 :: a_a29RN) = Apply Negate_1627904615Sym0 a_a29T0
data (:+$) (l_a29RW :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:+$$) (l_a29RZ :: a_a29RN) (l_a29RY :: TyFun a_a29RN a_a29RN)
type (:+$$$) (t_a29RU :: a_a29RN) (t_a29RV :: a_a29RN) = (:+) t_a29RU t_a29RV
data (:-$) (l_a29S5 :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:-$$) (l_a29S8 :: a_a29RN) (l_a29S7 :: TyFun a_a29RN a_a29RN)
type (:-$$$) (t_a29S3 :: a_a29RN) (t_a29S4 :: a_a29RN) = (:-) t_a29S3 t_a29S4
data (:*$) (l_a29Se :: TyFun a_a29RN (TyFun a_a29RN a_a29RN -> *))
data (:*$$) (l_a29Sh :: a_a29RN) (l_a29Sg :: TyFun a_a29RN a_a29RN)
type (:*$$$) (t_a29Sc :: a_a29RN) (t_a29Sd :: a_a29RN) = (:*) t_a29Sc t_a29Sd
data NegateSym0 (l_a29Sl :: TyFun a_a29RN a_a29RN)
type NegateSym1 (t_a29Sk :: a_a29RN) = Negate t_a29Sk
data AbsSym0 (l_a29Sp :: TyFun a_a29RN a_a29RN)
type AbsSym1 (t_a29So :: a_a29RN) = Abs t_a29So
data SignumSym0 (l_a29St :: TyFun a_a29RN a_a29RN)
type SignumSym1 (t_a29Ss :: a_a29RN) = Signum t_a29Ss
data FromIntegerSym0 (l_a29Sx :: TyFun Nat a_a29RN)
type FromIntegerSym1 (t_a29Sw :: Nat) = FromInteger t_a29Sw
data SubtractSym0 (l_a2ayb :: TyFun a_a2axT (TyFun a_a2axT a_a2axT -> *))
data SubtractSym1 (l_a2aye :: a_a2axT) (l_a2ayd :: TyFun a_a2axT a_a2axT)
type SubtractSym2 (t_a2ay9 :: a_a2axT) (t_a2aya :: a_a2axT) = Subtract t_a2ay9 t_a2aya


-- | Mimics the Haskell Prelude, but with promoted types.
module Data.Promotion.Prelude

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>
maybe_ :: b_a2hlg -> (a_a2hlh -> b_a2hlg) -> Maybe a_a2hlh -> b_a2hlg
either_ :: (a_a2cSh -> c_a2cSi) -> (b_a2cSj -> c_a2cSi) -> Either a_a2cSh b_a2cSj -> c_a2cSi

-- | (Kind) This is the kind of type-level symbols.
data Symbol :: *

-- | The promotion of <a>error</a>. This version is more poly-kinded for
--   easier use.
data ErrorSym0 (l_a27XX :: TyFun k0_a27Iz k_a27Iy)
any_ :: (a_a2Cvx -> Bool) -> [a_a2Cvx] -> Bool

-- | A concrete, poly-kinded proxy type
data Proxy (t :: k) :: k -> *
Proxy :: Proxy

-- | A concrete, promotable proxy type, for use at the kind level There are
--   no instances for this because it is intended at the kind level only
data KProxy t :: * -> *
KProxy :: KProxy t
type FalseSym0 = False
type TrueSym0 = True
data NotSym0 (l_a1EWi :: TyFun Bool Bool)
type NotSym1 (t_a1EWh :: Bool) = Not t_a1EWh
data (:&&$) (l_a1EWA :: TyFun Bool (TyFun Bool Bool -> *))
data (:&&$$) (l_a1EWD :: Bool) (l_a1EWC :: TyFun Bool Bool)
type (:&&$$$) (t_a1EWy :: Bool) (t_a1EWz :: Bool) = (:&&) t_a1EWy t_a1EWz
data (:||$) (l_a1EWn :: TyFun Bool (TyFun Bool Bool -> *))
data (:||$$) (l_a1EWq :: Bool) (l_a1EWp :: TyFun Bool Bool)
type (:||$$$) (t_a1EWl :: Bool) (t_a1EWm :: Bool) = (:||) t_a1EWl t_a1EWm
type OtherwiseSym0 = Otherwise
type NothingSym0 = Nothing
data JustSym0 (l_a1sR7 :: TyFun a_a7tJ (Maybe a_a7tJ))
type JustSym1 (t_a1sR6 :: a_a7tJ) = Just t_a1sR6
data Maybe_Sym0 (l_a2hlw :: TyFun b_a2hlg (TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *) -> *))
data Maybe_Sym1 (l_a2hlz :: b_a2hlg) (l_a2hly :: TyFun (TyFun a_a2hlh b_a2hlg -> *) (TyFun (Maybe a_a2hlh) b_a2hlg -> *))
data Maybe_Sym2 (l_a2hlC :: b_a2hlg) (l_a2hlD :: TyFun a_a2hlh b_a2hlg -> *) (l_a2hlB :: TyFun (Maybe a_a2hlh) b_a2hlg)
type Maybe_Sym3 (t_a2hlt :: b_a2hlg) (t_a2hlu :: TyFun a_a2hlh b_a2hlg -> *) (t_a2hlv :: Maybe a_a2hlh) = Maybe_ t_a2hlt t_a2hlu t_a2hlv
data LeftSym0 (l_a1sRy :: TyFun a_a9Wj (Either a_a9Wj b_a9Wk))
type LeftSym1 (t_a1sRx :: a_a9Wj) = Left t_a1sRx
data RightSym0 (l_a1sRB :: TyFun b_a9Wk (Either a_a9Wj b_a9Wk))
type RightSym1 (t_a1sRA :: b_a9Wk) = Right t_a1sRA
data Either_Sym0 (l_a2cSs :: TyFun (TyFun a_a2cSh c_a2cSi -> *) (TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *) -> *))
data Either_Sym1 (l_a2cSv :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSu :: TyFun (TyFun b_a2cSj c_a2cSi -> *) (TyFun (Either a_a2cSh b_a2cSj) c_a2cSi -> *))
data Either_Sym2 (l_a2cSy :: TyFun a_a2cSh c_a2cSi -> *) (l_a2cSz :: TyFun b_a2cSj c_a2cSi -> *) (l_a2cSx :: TyFun (Either a_a2cSh b_a2cSj) c_a2cSi)
type Either_Sym3 (t_a2cSp :: TyFun a_a2cSh c_a2cSi -> *) (t_a2cSq :: TyFun b_a2cSj c_a2cSi -> *) (t_a2cSr :: Either a_a2cSh b_a2cSj) = Either_ t_a2cSp t_a2cSq t_a2cSr
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data FstSym0 (l_a2fD6 :: TyFun (a_a2fCd, b_a2fCe) a_a2fCd)
type FstSym1 (t_a2fD5 :: (a_a2fCd, b_a2fCe)) = Fst t_a2fD5
data SndSym0 (l_a2fCY :: TyFun (a_a2fCg, b_a2fCh) b_a2fCh)
type SndSym1 (t_a2fCX :: (a_a2fCg, b_a2fCh)) = Snd t_a2fCX
data CurrySym0 (l_a2fCI :: TyFun (TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *) -> *))
data CurrySym1 (l_a2fCL :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCK :: TyFun a_a2fCj (TyFun b_a2fCk c_a2fCl -> *))
data CurrySym2 (l_a2fCO :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (l_a2fCP :: a_a2fCj) (l_a2fCN :: TyFun b_a2fCk c_a2fCl)
type CurrySym3 (t_a2fCF :: TyFun (a_a2fCj, b_a2fCk) c_a2fCl -> *) (t_a2fCG :: a_a2fCj) (t_a2fCH :: b_a2fCk) = Curry t_a2fCF t_a2fCG t_a2fCH
data UncurrySym0 (l_a2fDf :: TyFun (TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (TyFun (a_a2fCp, b_a2fCq) c_a2fCr -> *))
data UncurrySym1 (l_a2fDi :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (l_a2fDh :: TyFun (a_a2fCp, b_a2fCq) c_a2fCr)
type UncurrySym2 (t_a2fDd :: TyFun a_a2fCp (TyFun b_a2fCq c_a2fCr -> *) -> *) (t_a2fDe :: (a_a2fCp, b_a2fCq)) = Uncurry t_a2fDd t_a2fDe
data (:^$) l_a280V
data (:^$$) (l_a280Y :: Nat) l_a280X
data IdSym0 (l_a24tb :: TyFun a_a24rc a_a24rc)
type IdSym1 (t_a24ta :: a_a24rc) = Id t_a24ta
data ConstSym0 (l_a24sK :: TyFun a_a24re (TyFun b_a24rf a_a24re -> *))
data ConstSym1 (l_a24sN :: a_a24re) (l_a24sM :: TyFun b_a24rf a_a24re)
type ConstSym2 (t_a24sI :: a_a24re) (t_a24sJ :: b_a24rf) = Const t_a24sI t_a24sJ
data (:.$) (l_a24s5 :: TyFun (TyFun b_a24rh c_a24ri -> *) (TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *) -> *))
data (:.$$) (l_a24s8 :: TyFun b_a24rh c_a24ri -> *) (l_a24s7 :: TyFun (TyFun a_a24rj b_a24rh -> *) (TyFun a_a24rj c_a24ri -> *))
data (:.$$$) (l_a24sb :: TyFun b_a24rh c_a24ri -> *) (l_a24sc :: TyFun a_a24rj b_a24rh -> *) (l_a24sa :: TyFun a_a24rj c_a24ri)
data ($$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($$$$) a b = ($) a b
data ($!$) :: TyFun (TyFun a b -> *) (TyFun a b -> *) -> *
data ($!$$) :: (TyFun a b -> *) -> TyFun a b -> *
type ($!$$$) a b = ($!) a b
data FlipSym0 (l_a24rN :: TyFun (TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *) -> *))
data FlipSym1 (l_a24rQ :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rP :: TyFun b_a24ro (TyFun a_a24rn c_a24rp -> *))
data FlipSym2 (l_a24rT :: TyFun a_a24rn (TyFun b_a24ro c_a24rp -> *) -> *) (l_a24rU :: b_a24ro) (l_a24rS :: TyFun a_a24rn c_a24rp)
data AsTypeOfSym0 (l_a24t1 :: TyFun a_a24rt (TyFun a_a24rt a_a24rt -> *))
data AsTypeOfSym1 (l_a24t4 :: a_a24rt) (l_a24t3 :: TyFun a_a24rt a_a24rt)
type AsTypeOfSym2 (t_a24sZ :: a_a24rt) (t_a24t0 :: a_a24rt) = AsTypeOf t_a24sZ t_a24t0
data SeqSym0 (l_a24rz :: TyFun a_a24ru (TyFun b_a24rv b_a24rv -> *))
data SeqSym1 (l_a24rC :: a_a24ru) (l_a24rB :: TyFun b_a24rv b_a24rv)
type SeqSym2 (t_a24rx :: a_a24ru) (t_a24ry :: b_a24rv) = Seq t_a24rx t_a24ry
data (:$) (l_a1sRh :: TyFun a_12 (TyFun [a_12] [a_12] -> *))
data (:$$) (l_a1sRk :: a_12) (l_a1sRj :: TyFun [a_12] [a_12])
type (:$$$) (t_a1sRf :: a_12) (t_a1sRg :: [a_12]) = (:) t_a1sRf t_a1sRg
type NilSym0 = '[]
data MapSym0 (l_a24tu :: TyFun (TyFun a_a24r2 b_a24r3 -> *) (TyFun [a_a24r2] [b_a24r3] -> *))
data MapSym1 (l_a24tx :: TyFun a_a24r2 b_a24r3 -> *) (l_a24tw :: TyFun [a_a24r2] [b_a24r3])
type MapSym2 (t_a24ts :: TyFun a_a24r2 b_a24r3 -> *) (t_a24tt :: [a_a24r2]) = Map t_a24ts t_a24tt
data ReverseSym0 (l_a2Gi9 :: TyFun [a_a2Fjj] [a_a2Fjj])
type ReverseSym1 (t_a2Gi8 :: [a_a2Fjj]) = Reverse t_a2Gi8
data (:++$$) (l_a24tk :: [a_a24r7]) (l_a24tj :: TyFun [a_a24r7] [a_a24r7])
data (:++$) (l_a24th :: TyFun [a_a24r7] (TyFun [a_a24r7] [a_a24r7] -> *))
data HeadSym0 (l_a2GkE :: TyFun [a_a2Fj2] a_a2Fj2)
type HeadSym1 (t_a2GkD :: [a_a2Fj2]) = Head t_a2GkD
data LastSym0 (l_a2Gku :: TyFun [a_a2Fj4] a_a2Fj4)
type LastSym1 (t_a2Gkt :: [a_a2Fj4]) = Last t_a2Gkt
data TailSym0 (l_a2Gkm :: TyFun [a_a2Fj8] [a_a2Fj8])
type TailSym1 (t_a2Gkl :: [a_a2Fj8]) = Tail t_a2Gkl
data InitSym0 (l_a2GjP :: TyFun [a_a2Fja] [a_a2Fja])
type InitSym1 (t_a2GjO :: [a_a2Fja]) = Init t_a2GjO
data NullSym0 (l_a2GiI :: TyFun [a_a2Fji] Bool)
type NullSym1 (t_a2GiH :: [a_a2Fji]) = Null t_a2GiH
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))
data FoldlSym1 (l_a1w2Q :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2P :: TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *))
data FoldlSym2 (l_a1w2T :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (l_a1w2U :: b_a1w2A) (l_a1w2S :: TyFun [a_a1w2z] b_a1w2A)
type FoldlSym3 (t_a1w2K :: TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (t_a1w2L :: b_a1w2A) (t_a1w2M :: [a_a1w2z]) = Foldl t_a1w2K t_a1w2L t_a1w2M
data Foldl1Sym0 (l_a2G5R :: TyFun (TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (TyFun [a_a2Fkb] a_a2Fkb -> *))
data Foldl1Sym1 (l_a2G5U :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (l_a2G5T :: TyFun [a_a2Fkb] a_a2Fkb)
type Foldl1Sym2 (t_a2G5P :: TyFun a_a2Fkb (TyFun a_a2Fkb a_a2Fkb -> *) -> *) (t_a2G5Q :: [a_a2Fkb]) = Foldl1 t_a2G5P t_a2G5Q
data FoldrSym0 (l_a24tK :: TyFun (TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *) -> *))
data FoldrSym1 (l_a24tN :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tM :: TyFun b_a24qW (TyFun [a_a24qV] b_a24qW -> *))
data FoldrSym2 (l_a24tQ :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (l_a24tR :: b_a24qW) (l_a24tP :: TyFun [a_a24qV] b_a24qW)
type FoldrSym3 (t_a24tH :: TyFun a_a24qV (TyFun b_a24qW b_a24qW -> *) -> *) (t_a24tI :: b_a24qW) (t_a24tJ :: [a_a24qV]) = Foldr t_a24tH t_a24tI t_a24tJ
data Foldr1Sym0 (l_a2G5e :: TyFun (TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (TyFun [a_a2Fkj] a_a2Fkj -> *))
data Foldr1Sym1 (l_a2G5h :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (l_a2G5g :: TyFun [a_a2Fkj] a_a2Fkj)
type Foldr1Sym2 (t_a2G5c :: TyFun a_a2Fkj (TyFun a_a2Fkj a_a2Fkj -> *) -> *) (t_a2G5d :: [a_a2Fkj]) = Foldr1 t_a2G5c t_a2G5d
data ConcatSym0 (l_a2G58 :: TyFun [[a_a2Fko]] [a_a2Fko])
type ConcatSym1 (t_a2G57 :: [[a_a2Fko]]) = Concat t_a2G57
data ConcatMapSym0 (l_a2G4U :: TyFun (TyFun a_a2Fkp [b_a2Fkq] -> *) (TyFun [a_a2Fkp] [b_a2Fkq] -> *))
data ConcatMapSym1 (l_a2G4X :: TyFun a_a2Fkp [b_a2Fkq] -> *) (l_a2G4W :: TyFun [a_a2Fkp] [b_a2Fkq])
type ConcatMapSym2 (t_a2G4S :: TyFun a_a2Fkp [b_a2Fkq] -> *) (t_a2G4T :: [a_a2Fkp]) = ConcatMap t_a2G4S t_a2G4T
data MaximumBySym0 (l_a2G66 :: TyFun (TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (TyFun [a_a2Foa] a_a2Foa -> *))
data MaximumBySym1 (l_a2G69 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (l_a2G68 :: TyFun [a_a2Foa] a_a2Foa)
type MaximumBySym2 (t_a2G64 :: TyFun a_a2Foa (TyFun a_a2Foa Ordering -> *) -> *) (t_a2G65 :: [a_a2Foa]) = MaximumBy t_a2G64 t_a2G65
data MinimumBySym0 (l_a2G7v :: TyFun (TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (TyFun [a_a2Fog] a_a2Fog -> *))
data MinimumBySym1 (l_a2G7y :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (l_a2G7x :: TyFun [a_a2Fog] a_a2Fog)
type MinimumBySym2 (t_a2G7t :: TyFun a_a2Fog (TyFun a_a2Fog Ordering -> *) -> *) (t_a2G7u :: [a_a2Fog]) = MinimumBy t_a2G7t t_a2G7u
data AndSym0 (l_a2G4N :: TyFun [Bool] Bool)
type AndSym1 (t_a2G4M :: [Bool]) = And t_a2G4M
data OrSym0 (l_a2G4H :: TyFun [Bool] Bool)
type OrSym1 (t_a2G4G :: [Bool]) = Or t_a2G4G
data Any_Sym0 (l_a2CvE :: TyFun (TyFun a_a2Cvx Bool -> *) (TyFun [a_a2Cvx] Bool -> *))
data Any_Sym1 (l_a2CvH :: TyFun a_a2Cvx Bool -> *) (l_a2CvG :: TyFun [a_a2Cvx] Bool)
type Any_Sym2 (t_a2CvC :: TyFun a_a2Cvx Bool -> *) (t_a2CvD :: [a_a2Cvx]) = Any_ t_a2CvC t_a2CvD
data AllSym0 (l_a2G4t :: TyFun (TyFun a_a2Fkw Bool -> *) (TyFun [a_a2Fkw] Bool -> *))
data AllSym1 (l_a2G4w :: TyFun a_a2Fkw Bool -> *) (l_a2G4v :: TyFun [a_a2Fkw] Bool)
type AllSym2 (t_a2G4r :: TyFun a_a2Fkw Bool -> *) (t_a2G4s :: [a_a2Fkw]) = All t_a2G4r t_a2G4s
data ScanlSym0 (l_a2G3S :: TyFun (TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *) -> *))
data ScanlSym1 (l_a2G3V :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3U :: TyFun b_a2FkA (TyFun [a_a2FkB] [b_a2FkA] -> *))
data ScanlSym2 (l_a2G3Y :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (l_a2G3Z :: b_a2FkA) (l_a2G3X :: TyFun [a_a2FkB] [b_a2FkA])
type ScanlSym3 (t_a2G3P :: TyFun b_a2FkA (TyFun a_a2FkB b_a2FkA -> *) -> *) (t_a2G3Q :: b_a2FkA) (t_a2G3R :: [a_a2FkB]) = Scanl t_a2G3P t_a2G3Q t_a2G3R
data Scanl1Sym0 (l_a2G4e :: TyFun (TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (TyFun [a_a2FkH] [a_a2FkH] -> *))
data Scanl1Sym1 (l_a2G4h :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (l_a2G4g :: TyFun [a_a2FkH] [a_a2FkH])
type Scanl1Sym2 (t_a2G4c :: TyFun a_a2FkH (TyFun a_a2FkH a_a2FkH -> *) -> *) (t_a2G4d :: [a_a2FkH]) = Scanl1 t_a2G4c t_a2G4d
data ScanrSym0 (l_a2G37 :: TyFun (TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *) -> *))
data ScanrSym1 (l_a2G3a :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G39 :: TyFun b_a2FkM (TyFun [a_a2FkL] [b_a2FkM] -> *))
data ScanrSym2 (l_a2G3d :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (l_a2G3e :: b_a2FkM) (l_a2G3c :: TyFun [a_a2FkL] [b_a2FkM])
type ScanrSym3 (t_a2G34 :: TyFun a_a2FkL (TyFun b_a2FkM b_a2FkM -> *) -> *) (t_a2G35 :: b_a2FkM) (t_a2G36 :: [a_a2FkL]) = Scanr t_a2G34 t_a2G35 t_a2G36
data Scanr1Sym0 (l_a2G25 :: TyFun (TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (TyFun [a_a2FkU] [a_a2FkU] -> *))
data Scanr1Sym1 (l_a2G28 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (l_a2G27 :: TyFun [a_a2FkU] [a_a2FkU])
type Scanr1Sym2 (t_a2G23 :: TyFun a_a2FkU (TyFun a_a2FkU a_a2FkU -> *) -> *) (t_a2G24 :: [a_a2FkU]) = Scanr1 t_a2G23 t_a2G24
data ElemSym0 (l_a2FUc :: TyFun a_a2FlN (TyFun [a_a2FlN] Bool -> *))
data ElemSym1 (l_a2FUf :: a_a2FlN) (l_a2FUe :: TyFun [a_a2FlN] Bool)
type ElemSym2 (t_a2FUa :: a_a2FlN) (t_a2FUb :: [a_a2FlN]) = Elem t_a2FUa t_a2FUb
data NotElemSym0 (l_a2FTX :: TyFun a_a2FlR (TyFun [a_a2FlR] Bool -> *))
data NotElemSym1 (l_a2FU0 :: a_a2FlR) (l_a2FTZ :: TyFun [a_a2FlR] Bool)
type NotElemSym2 (t_a2FTV :: a_a2FlR) (t_a2FTW :: [a_a2FlR]) = NotElem t_a2FTV t_a2FTW
data ZipSym0 (l_a2FRU :: TyFun [a_a2FlV] (TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)] -> *))
data ZipSym1 (l_a2FRX :: [a_a2FlV]) (l_a2FRW :: TyFun [b_a2FlW] [(a_a2FlV, b_a2FlW)])
type ZipSym2 (t_a2FRS :: [a_a2FlV]) (t_a2FRT :: [b_a2FlW]) = Zip t_a2FRS t_a2FRT
data Zip3Sym0 (l_a2FQI :: TyFun [a_a2Fm1] (TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *) -> *))
data Zip3Sym1 (l_a2FQL :: [a_a2Fm1]) (l_a2FQK :: TyFun [b_a2Fm2] (TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)] -> *))
data Zip3Sym2 (l_a2FQO :: [a_a2Fm1]) (l_a2FQP :: [b_a2Fm2]) (l_a2FQN :: TyFun [c_a2Fm3] [(a_a2Fm1, b_a2Fm2, c_a2Fm3)])
type Zip3Sym3 (t_a2FQF :: [a_a2Fm1]) (t_a2FQG :: [b_a2Fm2]) (t_a2FQH :: [c_a2Fm3]) = Zip3 t_a2FQF t_a2FQG t_a2FQH
data ZipWithSym0 (l_a2FQ3 :: TyFun (TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *) -> *))
data ZipWithSym1 (l_a2FQ6 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQ5 :: TyFun [a_a2Fma] (TyFun [b_a2Fmb] [c_a2Fmc] -> *))
data ZipWithSym2 (l_a2FQ9 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (l_a2FQa :: [a_a2Fma]) (l_a2FQ8 :: TyFun [b_a2Fmb] [c_a2Fmc])
type ZipWithSym3 (t_a2FQ0 :: TyFun a_a2Fma (TyFun b_a2Fmb c_a2Fmc -> *) -> *) (t_a2FQ1 :: [a_a2Fma]) (t_a2FQ2 :: [b_a2Fmb]) = ZipWith t_a2FQ0 t_a2FQ1 t_a2FQ2
data ZipWith3Sym0 (l_a2FOo :: TyFun (TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *) -> *))
data ZipWith3Sym1 (l_a2FOr :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOq :: TyFun [a_a2Fmi] (TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *) -> *))
data ZipWith3Sym2 (l_a2FOu :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOv :: [a_a2Fmi]) (l_a2FOt :: TyFun [b_a2Fmj] (TyFun [c_a2Fmk] [d_a2Fml] -> *))
data ZipWith3Sym3 (l_a2FOy :: TyFun a_a2Fmi (TyFun b_a2Fmj (TyFun c_a2Fmk d_a2Fml -> *) -> *) -> *) (l_a2FOz :: [a_a2Fmi]) (l_a2FOA :: [b_a2Fmj]) (l_a2FOx :: TyFun [c_a2Fmk] [d_a2Fml])
data UnzipSym0 (l_a2FNR :: TyFun [(a_a2Fmt, b_a2Fmu)] ([a_a2Fmt], [b_a2Fmu]))
type UnzipSym1 (t_a2FNQ :: [(a_a2Fmt, b_a2Fmu)]) = Unzip t_a2FNQ
data UntilSym0 (l_a2gKI :: TyFun (TyFun a_a2gKy Bool -> *) (TyFun (TyFun a_a2gKy a_a2gKy -> *) (TyFun a_a2gKy a_a2gKy -> *) -> *))
data UntilSym1 (l_a2gKL :: TyFun a_a2gKy Bool -> *) (l_a2gKK :: TyFun (TyFun a_a2gKy a_a2gKy -> *) (TyFun a_a2gKy a_a2gKy -> *))
data UntilSym2 (l_a2gKO :: TyFun a_a2gKy Bool -> *) (l_a2gKP :: TyFun a_a2gKy a_a2gKy -> *) (l_a2gKN :: TyFun a_a2gKy a_a2gKy)
type UntilSym3 (t_a2gKF :: TyFun a_a2gKy Bool -> *) (t_a2gKG :: TyFun a_a2gKy a_a2gKy -> *) (t_a2gKH :: a_a2gKy) = Until t_a2gKF t_a2gKG t_a2gKH
data LengthSym0 (l_a2FuX :: TyFun [a_a2Fq8] Nat)
type LengthSym1 (t_a2FuW :: [a_a2Fq8]) = Length t_a2FuW
data SumSym0 (l_a2Fvt :: TyFun [a_a2Fhx] a_a2Fhx)
type SumSym1 (t_a2Fvs :: [a_a2Fhx]) = Sum t_a2Fvs
data ProductSym0 (l_a2Fv5 :: TyFun [a_a2Fhw] a_a2Fhw)
type ProductSym1 (t_a2Fv4 :: [a_a2Fhw]) = Product t_a2Fv4
data ReplicateSym0 (l_a2FuC :: TyFun Nat (TyFun a_a2Fqa [a_a2Fqa] -> *))
data ReplicateSym1 (l_a2FuF :: Nat) (l_a2FuE :: TyFun a_a2Fqa [a_a2Fqa])
type ReplicateSym2 (t_a2FuA :: Nat) (t_a2FuB :: a_a2Fqa) = Replicate t_a2FuA t_a2FuB
data TakeSym0 (l_a2FxN :: TyFun Nat (TyFun [a_a2Fpg] [a_a2Fpg] -> *))
data TakeSym1 (l_a2FxQ :: Nat) (l_a2FxP :: TyFun [a_a2Fpg] [a_a2Fpg])
type TakeSym2 (t_a2FxL :: Nat) (t_a2FxM :: [a_a2Fpg]) = Take t_a2FxL t_a2FxM
data DropSym0 (l_a2Fxi :: TyFun Nat (TyFun [a_a2Fpk] [a_a2Fpk] -> *))
data DropSym1 (l_a2Fxl :: Nat) (l_a2Fxk :: TyFun [a_a2Fpk] [a_a2Fpk])
type DropSym2 (t_a2Fxg :: Nat) (t_a2Fxh :: [a_a2Fpk]) = Drop t_a2Fxg t_a2Fxh
data SplitAtSym0 (l_a2Fyi :: TyFun Nat (TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]) -> *))
data SplitAtSym1 (l_a2Fyl :: Nat) (l_a2Fyk :: TyFun [a_a2Fpo] ([a_a2Fpo], [a_a2Fpo]))
type SplitAtSym2 (t_a2Fyg :: Nat) (t_a2Fyh :: [a_a2Fpo]) = SplitAt t_a2Fyg t_a2Fyh
data TakeWhileSym0 (l_a2FDO :: TyFun (TyFun a_a2FoN Bool -> *) (TyFun [a_a2FoN] [a_a2FoN] -> *))
data TakeWhileSym1 (l_a2FDR :: TyFun a_a2FoN Bool -> *) (l_a2FDQ :: TyFun [a_a2FoN] [a_a2FoN])
type TakeWhileSym2 (t_a2FDM :: TyFun a_a2FoN Bool -> *) (t_a2FDN :: [a_a2FoN]) = TakeWhile t_a2FDM t_a2FDN
data DropWhileSym0 (l_a2FD6 :: TyFun (TyFun a_a2FoR Bool -> *) (TyFun [a_a2FoR] [a_a2FoR] -> *))
data DropWhileSym1 (l_a2FD9 :: TyFun a_a2FoR Bool -> *) (l_a2FD8 :: TyFun [a_a2FoR] [a_a2FoR])
type DropWhileSym2 (t_a2FD4 :: TyFun a_a2FoR Bool -> *) (t_a2FD5 :: [a_a2FoR]) = DropWhile t_a2FD4 t_a2FD5
data SpanSym0 (l_a2FAa :: TyFun (TyFun a_a2Fp0 Bool -> *) (TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]) -> *))
data SpanSym1 (l_a2FAd :: TyFun a_a2Fp0 Bool -> *) (l_a2FAc :: TyFun [a_a2Fp0] ([a_a2Fp0], [a_a2Fp0]))
type SpanSym2 (t_a2FA8 :: TyFun a_a2Fp0 Bool -> *) (t_a2FA9 :: [a_a2Fp0]) = Span t_a2FA8 t_a2FA9
data BreakSym0 (l_a2Fyt :: TyFun (TyFun a_a2Fp8 Bool -> *) (TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]) -> *))
data BreakSym1 (l_a2Fyw :: TyFun a_a2Fp8 Bool -> *) (l_a2Fyv :: TyFun [a_a2Fp8] ([a_a2Fp8], [a_a2Fp8]))
type BreakSym2 (t_a2Fyr :: TyFun a_a2Fp8 Bool -> *) (t_a2Fys :: [a_a2Fp8]) = Break t_a2Fyr t_a2Fys
data LookupSym0 (l_a2FwI :: TyFun a_a2FpH (TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI) -> *))
data LookupSym1 (l_a2FwL :: a_a2FpH) (l_a2FwK :: TyFun [(a_a2FpH, b_a2FpI)] (Maybe b_a2FpI))
type LookupSym2 (t_a2FwG :: a_a2FpH) (t_a2FwH :: [(a_a2FpH, b_a2FpI)]) = Lookup t_a2FwG t_a2FwH
data FilterSym0 (l_a2FEj :: TyFun (TyFun a_a2Fom Bool -> *) (TyFun [a_a2Fom] [a_a2Fom] -> *))
data FilterSym1 (l_a2FEm :: TyFun a_a2Fom Bool -> *) (l_a2FEl :: TyFun [a_a2Fom] [a_a2Fom])
type FilterSym2 (t_a2FEh :: TyFun a_a2Fom Bool -> *) (t_a2FEi :: [a_a2Fom]) = Filter t_a2FEh t_a2FEi
data (:!!$) (l_a2Fu7 :: TyFun [a_a2Fqi] (TyFun Nat a_a2Fqi -> *))
data (:!!$$) (l_a2Fua :: [a_a2Fqi]) (l_a2Fu9 :: TyFun Nat a_a2Fqi)
type (:!!$$$) (t_a2Fu5 :: [a_a2Fqi]) (t_a2Fu6 :: Nat) = (:!!) t_a2Fu5 t_a2Fu6


-- | This module contains everything you need to promote your own functions
--   via Template Haskell.
module Data.Promotion.TH

-- | Promote every declaration given to the type level, retaining the
--   originals.
promote :: DsMonad q => q [Dec] -> q [Dec]

-- | Promote each declaration, discarding the originals. Note that a
--   promoted datatype uses the same definition as an original datatype, so
--   this will not work with datatypes. Classes, instances, and functions
--   are all fine.
promoteOnly :: DsMonad q => q [Dec] -> q [Dec]

-- | Generate defunctionalization symbols for existing type family
genDefunSymbols :: DsMonad q => [Name] -> q [Dec]

-- | Generate promoted definitions from a type that is already defined.
--   This is generally only useful with classes.
genPromotions :: DsMonad q => [Name] -> q [Dec]

-- | Produce instances for '(:==)' (type-level equality) from the given
--   types
promoteEqInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for '(:==)' (type-level equality) from the given
--   type
promoteEqInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>POrd</tt> from the given types
promoteOrdInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>POrd</tt> from the given type
promoteOrdInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>PBounded</tt> from the given types
promoteBoundedInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>PBounded</tt> from the given type
promoteBoundedInstance :: DsMonad q => Name -> q [Dec]

-- | Produce instances for <tt>PEnum</tt> from the given types
promoteEnumInstances :: DsMonad q => [Name] -> q [Dec]

-- | Produce an instance for <tt>PEnum</tt> from the given type
promoteEnumInstance :: DsMonad q => Name -> q [Dec]

-- | Representation of the kind of a type-level function. The difference
--   between term-level arrows and this type-level arrow is that at the
--   term level applications can be unsaturated, whereas at the type level
--   all applications have to be fully saturated.
data TyFun :: * -> * -> *

-- | Type level function application

-- | An infix synonym for <a>Apply</a>
type (@@) a b = Apply a b

-- | The promoted analogue of <a>Eq</a>. If you supply no definition for
--   '(:==)', then it defaults to a use of '(==)', from
--   <tt>Data.Type.Equality</tt>.
class kproxy ~ KProxy => PEq (kproxy :: KProxy a) where type family (:==) (x :: a) (y :: a) :: Bool type family (:/=) (x :: a) (y :: a) :: Bool (:==) (x :: a) (y :: a) = x == y (:/=) (x :: a) (y :: a) = Not (x :== y)

-- | Type-level <a>If</a>. <tt>If True a b</tt> ==&gt; <tt>a</tt>; <tt>If
--   False a b</tt> ==&gt; <tt>b</tt>
class (PEq (KProxy :: KProxy a_a1LoX), kproxy_a1LxM ~ KProxy) => POrd (kproxy_a1LxM :: KProxy a_a1LoX) where type family Compare (arg_a1LxN :: a_a1LoX) (arg_a1LxO :: a_a1LoX) :: Ordering type family (:<) (arg_a1LxW :: a_a1LoX) (arg_a1LxX :: a_a1LoX) :: Bool type family (:<=) (arg_a1Ly5 :: a_a1LoX) (arg_a1Ly6 :: a_a1LoX) :: Bool type family (:>) (arg_a1Lye :: a_a1LoX) (arg_a1Lyf :: a_a1LoX) :: Bool type family (:>=) (arg_a1Lyn :: a_a1LoX) (arg_a1Lyo :: a_a1LoX) :: Bool type family Max (arg_a1Lyw :: a_a1LoX) (arg_a1Lyx :: a_a1LoX) :: a_a1LoX type family Min (arg_a1LyF :: a_a1LoX) (arg_a1LyG :: a_a1LoX) :: a_a1LoX Compare (a_a1Lzl :: a_a1LoX) (a_a1Lzm :: a_a1LoX) = Apply (Apply Compare_1627811141Sym0 a_a1Lzl) a_a1Lzm (:<) (a_a1LzS :: a_a1LoX) (a_a1LzT :: a_a1LoX) = Apply (Apply TFHelper_1627811174Sym0 a_a1LzS) a_a1LzT (:<=) (a_a1LAp :: a_a1LoX) (a_a1LAq :: a_a1LoX) = Apply (Apply TFHelper_1627811207Sym0 a_a1LAp) a_a1LAq (:>) (a_a1LAW :: a_a1LoX) (a_a1LAX :: a_a1LoX) = Apply (Apply TFHelper_1627811240Sym0 a_a1LAW) a_a1LAX (:>=) (a_a1LBt :: a_a1LoX) (a_a1LBu :: a_a1LoX) = Apply (Apply TFHelper_1627811273Sym0 a_a1LBt) a_a1LBu Max (a_a1LC0 :: a_a1LoX) (a_a1LC1 :: a_a1LoX) = Apply (Apply Max_1627811306Sym0 a_a1LC0) a_a1LC1 Min (a_a1LCx :: a_a1LoX) (a_a1LCy :: a_a1LoX) = Apply (Apply Min_1627811339Sym0 a_a1LCx) a_a1LCy

-- | The type constructor <tt>Any</tt> is type to which you can unsafely
--   coerce any lifted type, and back.
--   
--   <ul>
--   <li>It is lifted, and hence represented by a pointer</li>
--   <li>It does not claim to be a <i>data</i> type, and that's important
--   for the code generator, because the code gen may <i>enter</i> a data
--   value but never enters a function value.</li>
--   </ul>
--   
--   It's also used to instantiate un-constrained type variables after type
--   checking. For example, <tt>length</tt> has type
--   
--   <pre>
--   length :: forall a. [a] -&gt; Int
--   </pre>
--   
--   and the list datacon for the empty list has type
--   
--   <pre>
--   [] :: forall a. [a]
--   </pre>
--   
--   In order to compose these two terms as <tt>length []</tt> a type
--   application is required, but there is no constraint on the choice. In
--   this situation GHC uses <tt>Any</tt>:
--   
--   <pre>
--   length (Any *) ([] (Any *))
--   </pre>
--   
--   Above, we print kinds explicitly, as if with
--   <tt>-fprint-explicit-kinds</tt>.
--   
--   Note that <tt>Any</tt> is kind polymorphic; its kind is thus
--   <tt>forall k. k</tt>.

-- | A concrete, poly-kinded proxy type
data Proxy (t :: k) :: k -> *
Proxy :: Proxy

-- | A concrete, promotable proxy type, for use at the kind level There are
--   no instances for this because it is intended at the kind level only
data KProxy t :: * -> *
KProxy :: KProxy t

-- | The promotion of <a>error</a>. This version is more poly-kinded for
--   easier use.
data ErrorSym0 (l_a27XX :: TyFun k0_a27Iz k_a27Iy)
type TrueSym0 = True
type FalseSym0 = False
type LTSym0 = LT
type EQSym0 = EQ
type GTSym0 = GT
type Tuple0Sym0 = '()
data Tuple2Sym0 (l_a1sRQ :: TyFun a_12 (TyFun b_13 (a_12, b_13) -> *))
data Tuple2Sym1 (l_a1sRT :: a_12) (l_a1sRS :: TyFun b_13 (a_12, b_13))
type Tuple2Sym2 (t_a1sRO :: a_12) (t_a1sRP :: b_13) = '(t_a1sRO, t_a1sRP)
data Tuple3Sym0 (l_a1sSa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *) -> *))
data Tuple3Sym1 (l_a1sSd :: a_12) (l_a1sSc :: TyFun b_13 (TyFun c_14 (a_12, b_13, c_14) -> *))
data Tuple3Sym2 (l_a1sSg :: a_12) (l_a1sSh :: b_13) (l_a1sSf :: TyFun c_14 (a_12, b_13, c_14))
type Tuple3Sym3 (t_a1sS7 :: a_12) (t_a1sS8 :: b_13) (t_a1sS9 :: c_14) = '(t_a1sS7, t_a1sS8, t_a1sS9)
data Tuple4Sym0 (l_a1sSE :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *) -> *))
data Tuple4Sym1 (l_a1sSH :: a_12) (l_a1sSG :: TyFun b_13 (TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *) -> *))
data Tuple4Sym2 (l_a1sSK :: a_12) (l_a1sSL :: b_13) (l_a1sSJ :: TyFun c_14 (TyFun d_15 (a_12, b_13, c_14, d_15) -> *))
data Tuple4Sym3 (l_a1sSO :: a_12) (l_a1sSP :: b_13) (l_a1sSQ :: c_14) (l_a1sSN :: TyFun d_15 (a_12, b_13, c_14, d_15))
type Tuple4Sym4 (t_a1sSA :: a_12) (t_a1sSB :: b_13) (t_a1sSC :: c_14) (t_a1sSD :: d_15) = '(t_a1sSA, t_a1sSB, t_a1sSC, t_a1sSD)
data Tuple5Sym0 (l_a1sTj :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *) -> *))
data Tuple5Sym1 (l_a1sTm :: a_12) (l_a1sTl :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *) -> *))
data Tuple5Sym2 (l_a1sTp :: a_12) (l_a1sTq :: b_13) (l_a1sTo :: TyFun c_14 (TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *) -> *))
data Tuple5Sym3 (l_a1sTt :: a_12) (l_a1sTu :: b_13) (l_a1sTv :: c_14) (l_a1sTs :: TyFun d_15 (TyFun e_16 (a_12, b_13, c_14, d_15, e_16) -> *))
data Tuple5Sym4 (l_a1sTy :: a_12) (l_a1sTz :: b_13) (l_a1sTA :: c_14) (l_a1sTB :: d_15) (l_a1sTx :: TyFun e_16 (a_12, b_13, c_14, d_15, e_16))
type Tuple5Sym5 (t_a1sTe :: a_12) (t_a1sTf :: b_13) (t_a1sTg :: c_14) (t_a1sTh :: d_15) (t_a1sTi :: e_16) = '(t_a1sTe, t_a1sTf, t_a1sTg, t_a1sTh, t_a1sTi)
data Tuple6Sym0 (l_a1sUa :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *) -> *))
data Tuple6Sym1 (l_a1sUd :: a_12) (l_a1sUc :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *) -> *))
data Tuple6Sym2 (l_a1sUg :: a_12) (l_a1sUh :: b_13) (l_a1sUf :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *) -> *))
data Tuple6Sym3 (l_a1sUk :: a_12) (l_a1sUl :: b_13) (l_a1sUm :: c_14) (l_a1sUj :: TyFun d_15 (TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *) -> *))
data Tuple6Sym4 (l_a1sUp :: a_12) (l_a1sUq :: b_13) (l_a1sUr :: c_14) (l_a1sUs :: d_15) (l_a1sUo :: TyFun e_16 (TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17) -> *))
data Tuple6Sym5 (l_a1sUv :: a_12) (l_a1sUw :: b_13) (l_a1sUx :: c_14) (l_a1sUy :: d_15) (l_a1sUz :: e_16) (l_a1sUu :: TyFun f_17 (a_12, b_13, c_14, d_15, e_16, f_17))
type Tuple6Sym6 (t_a1sU4 :: a_12) (t_a1sU5 :: b_13) (t_a1sU6 :: c_14) (t_a1sU7 :: d_15) (t_a1sU8 :: e_16) (t_a1sU9 :: f_17) = '(t_a1sU4, t_a1sU5, t_a1sU6, t_a1sU7, t_a1sU8, t_a1sU9)
data Tuple7Sym0 (l_a1sVe :: TyFun a_12 (TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym1 (l_a1sVh :: a_12) (l_a1sVg :: TyFun b_13 (TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *) -> *))
data Tuple7Sym2 (l_a1sVk :: a_12) (l_a1sVl :: b_13) (l_a1sVj :: TyFun c_14 (TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *) -> *))
data Tuple7Sym3 (l_a1sVo :: a_12) (l_a1sVp :: b_13) (l_a1sVq :: c_14) (l_a1sVn :: TyFun d_15 (TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *) -> *))
data Tuple7Sym4 (l_a1sVt :: a_12) (l_a1sVu :: b_13) (l_a1sVv :: c_14) (l_a1sVw :: d_15) (l_a1sVs :: TyFun e_16 (TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *) -> *))
data Tuple7Sym5 (l_a1sVz :: a_12) (l_a1sVA :: b_13) (l_a1sVB :: c_14) (l_a1sVC :: d_15) (l_a1sVD :: e_16) (l_a1sVy :: TyFun f_17 (TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18) -> *))
data Tuple7Sym6 (l_a1sVG :: a_12) (l_a1sVH :: b_13) (l_a1sVI :: c_14) (l_a1sVJ :: d_15) (l_a1sVK :: e_16) (l_a1sVL :: f_17) (l_a1sVF :: TyFun g_18 (a_12, b_13, c_14, d_15, e_16, f_17, g_18))
type Tuple7Sym7 (t_a1sV7 :: a_12) (t_a1sV8 :: b_13) (t_a1sV9 :: c_14) (t_a1sVa :: d_15) (t_a1sVb :: e_16) (t_a1sVc :: f_17) (t_a1sVd :: g_18) = '(t_a1sV7, t_a1sV8, t_a1sV9, t_a1sVa, t_a1sVb, t_a1sVc, t_a1sVd)
data ThenCmpSym0 (l_a1NJk :: TyFun Ordering (TyFun Ordering Ordering -> *))
data FoldlSym0 (l_a1w2N :: TyFun (TyFun b_a1w2A (TyFun a_a1w2z b_a1w2A -> *) -> *) (TyFun b_a1w2A (TyFun [a_a1w2z] b_a1w2A -> *) -> *))

-- | This class (which users should never see) is to be instantiated in
--   order to use an otherwise-unused data constructor, such as the
--   "kind-inference" data constructor for defunctionalization symbols.
class SuppressUnusedWarnings (t :: k)
suppressUnusedWarnings :: SuppressUnusedWarnings t => Proxy t -> ()
